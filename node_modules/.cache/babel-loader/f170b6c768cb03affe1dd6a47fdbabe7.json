{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _objectSpread from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import{withStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import DialogTitle from'@material-ui/core/DialogTitle';import Divider from'@material-ui/core/Divider';import IconButton from'@material-ui/core/IconButton';import ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import FormControl from'@material-ui/core/FormControl';import FormGroup from'@material-ui/core/FormGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import Switch from'@material-ui/core/Switch';import ColorPicker from'./ColorPicker';var drawerWidth='100%';var styles=function styles(theme){return{root:{flexGrow:1},hide:{display:'none'},drawerPaper:{position:'relative',width:drawerWidth,height:'calc(100vh - 64px - 2 * 12px)',textAlign:'left'},drawerHeader:_objectSpread({display:'flex',alignItems:'center',justifyContent:'flex-end',padding:'0 8px',textTransform:'capitalize'},theme.mixins.toolbar),styleFormControl:{},styleSwitch:{marginLeft:theme.spacing(2)},styleCheckbox:{marginLeft:theme.spacing(0),marginTop:theme.spacing(-2)},colorFormControl:{marginLeft:theme.spacing(2),marginBottom:theme.spacing(1)},colorSwitch:{marginLeft:theme.spacing(0)}};};var emptyStyle='';var nodeStyles=[\"dashed\",\"dotted\",\"solid\",\"invis\",\"bold\",\"filled\",\"striped\",\"wedged\",\"diagonals\",\"rounded\",\"radial\"];var edgeStyles=[\"dashed\",\"dotted\",\"solid\",\"invis\",\"bold\",\"tapered\"];var emptyColor='';var FormatDrawer=/*#__PURE__*/function(_React$Component){_inherits(FormatDrawer,_React$Component);function FormatDrawer(){var _getPrototypeOf2;var _this;_classCallCheck(this,FormatDrawer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FormatDrawer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={colorColorPickerIsOpen:false,fillColorColorPickerIsOpen:false};_this.setColorColorPickerOpen=function(open){_this.setState({colorColorPickerIsOpen:open});};_this.setFillColorColorPickerOpen=function(open){_this.setState({fillColorColorPickerIsOpen:open});};_this.handleClick=function(){_this.setColorColorPickerOpen(false);_this.setFillColorColorPickerOpen(false);_this.props.onClick();};_this.handleDrawerClose=function(){_this.props.onFormatDrawerClose();};_this.handleStyleSwitchChange=function(event){var styleSet=_this.getStyleSet();styleSet.clear();if(event.target.checked){styleSet.add(emptyStyle);}_this.setStyle(styleSet);};_this.handleStyleChange=function(styleName){return function(event){var checked=event.target.checked;var styleSet=_this.getStyleSet();if(checked){styleSet.delete(emptyStyle);styleSet.add(styleName);}else{styleSet.delete(styleName);}_this.setStyle(styleSet);};};_this.handleColorSwitchChange=function(event){if(event.target.checked){_this.props.onColorChange(emptyColor);}else{_this.props.onColorChange(null);}};_this.handleColorChange=function(color){_this.props.onColorChange(color);};_this.handleFillColorSwitchChange=function(event){if(event.target.checked){_this.props.onFillColorChange(emptyColor);}else{_this.props.onFillColorChange(null);}};_this.handleFillColorChange=function(color){_this.props.onFillColorChange(color);};return _this;}_createClass(FormatDrawer,[{key:\"getStyleSet\",value:function getStyleSet(){if(this.props.defaultAttributes.style==null){return new Set([]);}else{var styleSet=new Set(this.props.defaultAttributes.style.split(', '));styleSet.add(emptyStyle);return styleSet;}}},{key:\"setStyle\",value:function setStyle(styleSet){if(styleSet.size===0){this.props.onStyleChange(null);}else{styleSet.delete(emptyStyle);this.props.onStyleChange(_toConsumableArray(styleSet).join(', '));}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,theme=_this$props.theme;var type=this.props.type;var styles=type==='node'?nodeStyles:edgeStyles;var currentStyle=this.getStyleSet();return React.createElement(\"div\",{className:classes.root},React.createElement(Drawer,{id:\"format-drawer\",variant:\"persistent\",anchor:\"left\",open:true,classes:{paper:classes.drawerPaper},onClick:this.handleClick},React.createElement(\"div\",{className:classes.drawerHeader},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Default \",this.props.type,\" attributes\"),React.createElement(IconButton,{id:\"close-button\",onClick:this.handleDrawerClose},theme.direction==='rtl'?React.createElement(ChevronRightIcon,null):React.createElement(ChevronLeftIcon,null))),React.createElement(Divider,null),React.createElement(FormControl,{className:classes.styleFormControl},React.createElement(FormGroup,{row:true},React.createElement(FormControlLabel,{className:classes.styleSwitch,control:React.createElement(Switch,{id:\"style-switch\",checked:currentStyle.size!==0,onChange:this.handleStyleSwitchChange}),label:\"style\",labelPlacement:\"start\"})),React.createElement(FormGroup,{row:true,id:\"styles\"},styles.map(function(style){return React.createElement(FormControlLabel,{className:classes.styleCheckbox,control:React.createElement(Checkbox,{id:style,checked:currentStyle.has(style),onChange:_this2.handleStyleChange(style),value:style}),key:style,label:style});}))),React.createElement(FormControl,{className:classes.colorFormControl,id:\"color-picker-form\"},React.createElement(FormGroup,{row:true},React.createElement(FormControlLabel,{className:classes.colorSwitch,control:React.createElement(Switch,{id:\"color-switch\",checked:this.props.defaultAttributes.color!=null,onChange:this.handleColorSwitchChange}),label:\"color\",labelPlacement:\"start\"})),React.createElement(FormGroup,{row:true},React.createElement(ColorPicker,{id:\"color-picker\",open:this.state.colorColorPickerIsOpen,setOpen:this.setColorColorPickerOpen,invert:true,color:this.props.defaultAttributes.color||'',onChange:function onChange(color){return _this2.handleColorChange(color);}}))),React.createElement(FormControl,{className:classes.colorFormControl,id:\"fillcolor-picker-form\"},React.createElement(FormGroup,{row:true},React.createElement(FormControlLabel,{className:classes.colorSwitch,control:React.createElement(Switch,{id:\"fillcolor-switch\",checked:this.props.defaultAttributes.fillcolor!=null,onChange:this.handleFillColorSwitchChange}),label:\"fillcolor\",labelPlacement:\"start\"})),React.createElement(FormGroup,{row:true},React.createElement(ColorPicker,{id:\"fillcolor-picker\",open:this.state.fillColorColorPickerIsOpen,setOpen:this.setFillColorColorPickerOpen,color:this.props.defaultAttributes.fillcolor||'',onChange:function onChange(color){return _this2.handleFillColorChange(color);}})))));}}]);return FormatDrawer;}(React.Component);export default withStyles(styles,{withTheme:true})(FormatDrawer);","map":{"version":3,"sources":["C:/Users/user/graphviz-visual-editor/src/FormatDrawer.js"],"names":["React","withStyles","Drawer","DialogTitle","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","FormControl","FormGroup","FormControlLabel","Checkbox","Switch","ColorPicker","drawerWidth","styles","theme","root","flexGrow","hide","display","drawerPaper","position","width","height","textAlign","drawerHeader","alignItems","justifyContent","padding","textTransform","mixins","toolbar","styleFormControl","styleSwitch","marginLeft","spacing","styleCheckbox","marginTop","colorFormControl","marginBottom","colorSwitch","emptyStyle","nodeStyles","edgeStyles","emptyColor","FormatDrawer","state","colorColorPickerIsOpen","fillColorColorPickerIsOpen","setColorColorPickerOpen","open","setState","setFillColorColorPickerOpen","handleClick","props","onClick","handleDrawerClose","onFormatDrawerClose","handleStyleSwitchChange","event","styleSet","getStyleSet","clear","target","checked","add","setStyle","handleStyleChange","styleName","delete","handleColorSwitchChange","onColorChange","handleColorChange","color","handleFillColorSwitchChange","onFillColorChange","handleFillColorChange","defaultAttributes","style","Set","split","size","onStyleChange","join","classes","type","currentStyle","paper","direction","map","has","fillcolor","Component","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ColorPicker from './ColorPicker'\r\n\r\nconst drawerWidth = '100%';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n    textAlign: 'left',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    textTransform: 'capitalize',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  styleFormControl: {\r\n  },\r\n  styleSwitch: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  styleCheckbox: {\r\n    marginLeft: theme.spacing(0),\r\n    marginTop: theme.spacing(-2),\r\n  },\r\n  colorFormControl: {\r\n    marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  colorSwitch: {\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n});\r\n\r\nconst emptyStyle = '';\r\n\r\nconst nodeStyles = [\r\n  \"dashed\",\r\n  \"dotted\",\r\n  \"solid\",\r\n  \"invis\",\r\n  \"bold\",\r\n  \"filled\",\r\n  \"striped\",\r\n  \"wedged\",\r\n  \"diagonals\",\r\n  \"rounded\",\r\n  \"radial\",\r\n];\r\n\r\nconst edgeStyles = [\r\n  \"dashed\",\r\n  \"dotted\",\r\n  \"solid\",\r\n  \"invis\",\r\n  \"bold\",\r\n  \"tapered\",\r\n];\r\n\r\nconst emptyColor = '';\r\n\r\nclass FormatDrawer extends React.Component {\r\n\r\n  state = {\r\n    colorColorPickerIsOpen: false,\r\n    fillColorColorPickerIsOpen: false,\r\n  }\r\n\r\n  setColorColorPickerOpen = (open) => {\r\n    this.setState({\r\n      colorColorPickerIsOpen: open,\r\n    });\r\n  }\r\n\r\n  setFillColorColorPickerOpen = (open) => {\r\n    this.setState({\r\n      fillColorColorPickerIsOpen: open,\r\n    });\r\n  }\r\n\r\n  getStyleSet() {\r\n    if (this.props.defaultAttributes.style == null) {\r\n      return new Set([]);\r\n    } else {\r\n      let styleSet = new Set(this.props.defaultAttributes.style.split(', '))\r\n      styleSet.add(emptyStyle);\r\n      return styleSet;\r\n    }\r\n  }\r\n\r\n  setStyle(styleSet) {\r\n    if (styleSet.size === 0) {\r\n      this.props.onStyleChange(null);\r\n    } else {\r\n      styleSet.delete(emptyStyle);\r\n      this.props.onStyleChange([...styleSet].join(', '));\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setColorColorPickerOpen(false);\r\n    this.setFillColorColorPickerOpen(false);\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.onFormatDrawerClose();\r\n  };\r\n\r\n  handleStyleSwitchChange = (event) => {\r\n    let styleSet = this.getStyleSet();\r\n    styleSet.clear();\r\n    if (event.target.checked) {\r\n      styleSet.add(emptyStyle);\r\n    }\r\n    this.setStyle(styleSet);\r\n  }\r\n\r\n  handleStyleChange = (styleName) => (event) => {\r\n    const checked = event.target.checked;\r\n    let styleSet = this.getStyleSet();\r\n    if (checked) {\r\n      styleSet.delete(emptyStyle);\r\n      styleSet.add(styleName);\r\n    }\r\n    else {\r\n      styleSet.delete(styleName);\r\n    }\r\n    this.setStyle(styleSet);\r\n  };\r\n\r\n  handleColorSwitchChange = (event) => {\r\n    if (event.target.checked) {\r\n      this.props.onColorChange(emptyColor);\r\n    } else {\r\n      this.props.onColorChange(null);\r\n    }\r\n  }\r\n\r\n  handleColorChange = (color) => {\r\n    this.props.onColorChange(color);\r\n  };\r\n\r\n  handleFillColorSwitchChange = (event) => {\r\n    if (event.target.checked) {\r\n      this.props.onFillColorChange(emptyColor);\r\n    } else {\r\n      this.props.onFillColorChange(null);\r\n    }\r\n  }\r\n  handleFillColorChange = (color) => {\r\n    this.props.onFillColorChange(color);\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { type } = this.props;\r\n\r\n    let styles = type === 'node' ? nodeStyles : edgeStyles;\r\n    let currentStyle = this.getStyleSet();\r\n    return (\r\n      <div className={classes.root}>\r\n        <Drawer\r\n          id=\"format-drawer\"\r\n          variant=\"persistent\"\r\n          anchor='left'\r\n          open\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Default {this.props.type} attributes\r\n            </DialogTitle>\r\n            <IconButton id=\"close-button\" onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <FormControl className={classes.styleFormControl}>\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                className={classes.styleSwitch}\r\n                control={\r\n                  <Switch\r\n                    id=\"style-switch\"\r\n                    checked={currentStyle.size !== 0}\r\n                    onChange={this.handleStyleSwitchChange}\r\n                  />\r\n                }\r\n                label=\"style\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row id=\"styles\">\r\n              {styles.map((style) =>\r\n                <FormControlLabel\r\n                className={classes.styleCheckbox}\r\n                  control={\r\n                    <Checkbox\r\n                      id={style}\r\n                      checked={currentStyle.has(style)}\r\n                    onChange={this.handleStyleChange(style)}\r\n                    value={style}\r\n                    />\r\n                  }\r\n                  key={style}\r\n                  label={style}\r\n                />\r\n              )}\r\n            </FormGroup>\r\n          </FormControl>\r\n          <FormControl className={classes.colorFormControl} id=\"color-picker-form\">\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                className={classes.colorSwitch}\r\n                control={\r\n                  <Switch\r\n                    id=\"color-switch\"\r\n                    checked={this.props.defaultAttributes.color != null}\r\n                    onChange={this.handleColorSwitchChange}\r\n                  />\r\n                }\r\n                label=\"color\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <ColorPicker\r\n                id=\"color-picker\"\r\n                open={this.state.colorColorPickerIsOpen}\r\n                setOpen={this.setColorColorPickerOpen}\r\n                invert={true}\r\n                color={this.props.defaultAttributes.color || ''}\r\n                onChange={color => this.handleColorChange(color)}\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n          <FormControl className={classes.colorFormControl} id=\"fillcolor-picker-form\">\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                className={classes.colorSwitch}\r\n                control={\r\n                  <Switch\r\n                    id=\"fillcolor-switch\"\r\n                    checked={this.props.defaultAttributes.fillcolor != null}\r\n                    onChange={this.handleFillColorSwitchChange}\r\n                  />\r\n                }\r\n                label=\"fillcolor\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <ColorPicker\r\n                id=\"fillcolor-picker\"\r\n                open={this.state.fillColorColorPickerIsOpen}\r\n                setOpen={this.setFillColorColorPickerOpen}\r\n                color={this.props.defaultAttributes.fillcolor || ''}\r\n                onChange={color => this.handleFillColorChange(color)}\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormatDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(FormatDrawer);\r\n"]},"metadata":{},"sourceType":"module"}