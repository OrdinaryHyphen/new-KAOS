{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\KAOS-modeling-editor\\\\src\\\\SvgPreview.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nconst previewWidth = 400;\nconst previewHeight = 250;\nconst previewMarginUnits = 1;\nconst previewPadUnits = 0.5;\n\nconst styles = theme => ({\n  card: {\n    position: 'fixed',\n    zIndex: 1,\n    width: previewWidth + theme.spacing(previewPadUnits * 2),\n    height: previewHeight + theme.spacing(previewPadUnits * 2)\n  },\n  cardContent: {\n    padding: theme.spacing(previewPadUnits)\n  }\n});\n\nclass SvgPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouseEnter = event => {\n      this.setState({\n        preview: true,\n        x: event.clientX,\n        y: event.clientY\n      });\n    };\n\n    this.handleMouseOut = event => {\n      this.setState({\n        preview: false\n      });\n    };\n\n    this.state = {\n      preview: false,\n      x: 0,\n      y: 0\n    };\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const svgThumbnail = this.divThumbnail.querySelector('svg');\n\n    if (svgThumbnail) {\n      svgThumbnail.setAttribute('width', this.props.width);\n      svgThumbnail.setAttribute('height', this.props.height);\n      const g = svgThumbnail.querySelector('g');\n      g.addEventListener('mouseenter', this.handleMouseEnter);\n      g.addEventListener('mouseleave', this.handleMouseOut);\n    }\n\n    if (this.divPreview) {\n      const svgPreview = this.divPreview.querySelector('svg');\n      svgPreview.setAttribute('width', previewWidth);\n      svgPreview.setAttribute('height', previewHeight);\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const theme = this.props.theme;\n    const previewMargin = theme.spacing(previewMarginUnits);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"svg-wrapper\",\n      ref: div => this.divThumbnail = div,\n      dangerouslySetInnerHTML: {\n        __html: this.props.svg\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), this.state.preview && React.createElement(Card, {\n      id: \"preview-pop-up\",\n      className: classes.card,\n      raised: true,\n      style: {\n        left: this.state.x + previewMargin,\n        top: this.state.y + previewMargin\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.cardContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: div => this.divPreview = div,\n      dangerouslySetInnerHTML: {\n        __html: this.props.svg\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nSvgPreview.propTypes = {\n  svg: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(SvgPreview);","map":{"version":3,"sources":["C:/Users/user/KAOS-modeling-editor/src/SvgPreview.js"],"names":["React","PropTypes","Card","CardContent","withStyles","previewWidth","previewHeight","previewMarginUnits","previewPadUnits","styles","theme","card","position","zIndex","width","spacing","height","cardContent","padding","SvgPreview","Component","constructor","props","handleMouseEnter","event","setState","preview","x","clientX","y","clientY","handleMouseOut","state","componentDidMount","componentDidUpdate","svgThumbnail","divThumbnail","querySelector","setAttribute","g","addEventListener","divPreview","svgPreview","render","classes","previewMargin","div","__html","svg","left","top","propTypes","string","isRequired","object","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst previewWidth = 400;\r\nconst previewHeight = 250;\r\nconst previewMarginUnits = 1;\r\nconst previewPadUnits = 0.5;\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    position: 'fixed',\r\n    zIndex: 1,\r\n    width: previewWidth + theme.spacing(previewPadUnits * 2),\r\n    height: previewHeight + theme.spacing(previewPadUnits * 2),\r\n  },\r\n  cardContent: {\r\n    padding: theme.spacing(previewPadUnits),\r\n\r\n  },\r\n});\r\n\r\nclass SvgPreview extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preview: false,\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const svgThumbnail = this.divThumbnail.querySelector('svg');\r\n    if (svgThumbnail) {\r\n      svgThumbnail.setAttribute('width', this.props.width);\r\n      svgThumbnail.setAttribute('height', this.props.height);\r\n      const g = svgThumbnail.querySelector('g');\r\n      g.addEventListener('mouseenter', this.handleMouseEnter);\r\n      g.addEventListener('mouseleave', this.handleMouseOut);\r\n    }\r\n    if (this.divPreview) {\r\n      const svgPreview = this.divPreview.querySelector('svg');\r\n      svgPreview.setAttribute('width', previewWidth);\r\n      svgPreview.setAttribute('height', previewHeight);\r\n    }\r\n  }\r\n\r\n  handleMouseEnter = (event) => {\r\n    this.setState({\r\n      preview: true,\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n    });\r\n  }\r\n\r\n  handleMouseOut = (event) => {\r\n    this.setState({\r\n      preview: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { theme } = this.props;\r\n    const previewMargin = theme.spacing(previewMarginUnits);\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          id=\"svg-wrapper\"\r\n          ref={div => this.divThumbnail = div}\r\n          dangerouslySetInnerHTML={{__html: this.props.svg}}\r\n        >\r\n        </div>\r\n        {this.state.preview &&\r\n          <Card\r\n            id=\"preview-pop-up\"\r\n            className={classes.card}\r\n            raised\r\n            style={{\r\n              left: this.state.x + previewMargin,\r\n              top: this.state.y + previewMargin,\r\n            }}\r\n          >\r\n            <CardContent className={classes.cardContent}>\r\n              <div\r\n                ref={div => this.divPreview = div}\r\n                dangerouslySetInnerHTML={{__html: this.props.svg}}\r\n              >\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSvgPreview.propTypes = {\r\n  svg: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SvgPreview);\r\n"]},"metadata":{},"sourceType":"module"}