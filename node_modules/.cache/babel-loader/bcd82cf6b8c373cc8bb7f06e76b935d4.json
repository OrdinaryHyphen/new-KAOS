{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\assisted-goalmodel-editor\\\\src\\\\ColorPicker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport { ChromePicker } from 'react-color';\n\nconst styles = theme => ({\n  color: {\n    width: '36px',\n    height: '14px',\n    borderRadius: '2px'\n  },\n  swatch: {\n    padding: '5px',\n    verticalAlign: 'middle',\n    borderRadius: '1px',\n    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  popover: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '2'\n  },\n  input: {\n    marginLeft: theme.spacing(2),\n    verticalAlign: 'middle',\n    width: 100\n  }\n});\n\nclass ColorPicker extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = event => {\n      event.stopPropagation();\n      this.props.setOpen(!this.props.open);\n    };\n\n    this.handleInputChange = event => {\n      this.props.onChange(event.target.value);\n    };\n\n    this.handleChange = color => {\n      // Workaround for https://github.com/casesandberg/react-color/issues/655\n      const a = Math.round(color.rgb.a * 255);\n      this.props.onChange(color.hex + (a === 255 ? '' : Math.floor(a / 16).toString(16) + (a % 16).toString(16)));\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    if (this.props.invert) {\n      var borderBackground = this.props.color;\n      var contentBackground = '#fff';\n    } else {\n      borderBackground = '#fff';\n      contentBackground = this.props.color;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"color-picker-swatch\",\n      className: classes.swatch,\n      style: {\n        background: borderBackground\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.color,\n      style: {\n        background: contentBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        color: this.props.color\n      },\n      className: classes.input,\n      id: \"color-input\",\n      value: this.props.color,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), this.props.open ? React.createElement(\"div\", {\n      id: \"color-picker-popover\",\n      className: classes.popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(ChromePicker, {\n      color: this.props.color,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nColorPicker.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withRoot(withStyles(styles)(ColorPicker));","map":{"version":3,"sources":["C:/Users/user/assisted-goalmodel-editor/src/ColorPicker.js"],"names":["React","PropTypes","withStyles","withRoot","FormControl","Input","ChromePicker","styles","theme","color","width","height","borderRadius","swatch","padding","verticalAlign","boxShadow","display","cursor","popover","position","zIndex","input","marginLeft","spacing","ColorPicker","Component","handleClick","event","stopPropagation","props","setOpen","open","handleInputChange","onChange","target","value","handleChange","a","Math","round","rgb","hex","floor","toString","render","classes","invert","borderBackground","contentBackground","background","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport { ChromePicker } from 'react-color'\r\n\r\nconst styles = theme => ({\r\n  color: {\r\n    width: '36px',\r\n    height: '14px',\r\n    borderRadius: '2px',\r\n  },\r\n  swatch: {\r\n    padding: '5px',\r\n    verticalAlign: 'middle',\r\n    borderRadius: '1px',\r\n    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  popover: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: '2',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(2),\r\n    verticalAlign: 'middle',\r\n    width: 100,\r\n  },\r\n});\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  handleClick = (event) => {\r\n    event.stopPropagation();\r\n    this.props.setOpen(!this.props.open);\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.props.onChange(event.target.value);\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    // Workaround for https://github.com/casesandberg/react-color/issues/655\r\n    const a = Math.round(color.rgb.a * 255);\r\n    this.props.onChange(color.hex + (a === 255 ? '' : Math.floor(a / 16).toString(16) + (a % 16).toString(16)));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.props.invert) {\r\n      var borderBackground = this.props.color;\r\n      var contentBackground = '#fff';\r\n    } else {\r\n      borderBackground = '#fff';\r\n      contentBackground = this.props.color;\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"color-picker-swatch\" className={classes.swatch} style={{background: borderBackground}} onClick={this.handleClick}>\r\n          <div className={classes.color} style={{background: contentBackground}} />\r\n        </div>\r\n        <FormControl>\r\n          <Input style={{color: this.props.color}}\r\n            className={classes.input}\r\n            id=\"color-input\"\r\n            value={this.props.color}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormControl>\r\n        {this.props.open ?\r\n          <div id=\"color-picker-popover\" className={classes.popover}>\r\n            <ChromePicker color={this.props.color} onChange={this.handleChange} />\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(ColorPicker));\r\n"]},"metadata":{},"sourceType":"module"}