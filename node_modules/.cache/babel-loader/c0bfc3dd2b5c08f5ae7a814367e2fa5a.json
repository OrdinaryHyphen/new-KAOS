{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\src\\\\DescriptionDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Axios from 'axios';\nimport AceEditor from 'react-ace';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Toolbar from '@material-ui/core/Toolbar';\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n    height: 'calc(100vh - 64px - 2 * 12px)',\n    textAlign: 'left'\n  },\n  drawerHeader: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    textTransform: 'capitalize'\n  }, theme.mixins.toolbar)\n});\n\nclass DescriptionDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = (value, event) => {\n      this.props.onTextChange(value);\n    };\n\n    this.handleClick = () => {\n      this.props.onClick();\n    };\n\n    this.handleDrawerClose = () => {\n      this.props.onDescriptionDrawerClose();\n    };\n\n    this.startParsing = () => {\n      Axios.post('http://127.0.0.1:5000/parse', {\n        post_text: this.props.goalDescription\n      }, {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(function (res) {//console.log(res.data.result);\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      id: \"format-drawer\",\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: true,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Goal Descriptions\"), React.createElement(IconButton, {\n      id: \"close-button\",\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(AceEditor, {\n      mode: \"txt\",\n      theme: \"github\",\n      fontSize: this.props.fontSize + 'px',\n      tabSize: this.props.tabSize,\n      value: this.props.goalDescription,\n      height: \"80%\",\n      width: \"100%\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Input goal descriptions, then press the right button.\"), React.createElement(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"inherit\",\n      size: \"Large\",\n      style: {\n        flexGrow: 0.2\n      },\n      onClick: this.startParsing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Parse\"))));\n  }\n\n}\n\nDescriptionDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(DescriptionDrawer);","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/DescriptionDrawer.js"],"names":["React","PropTypes","withStyles","Drawer","DialogTitle","Divider","Button","IconButton","Axios","AceEditor","ChevronLeftIcon","ChevronRightIcon","Toolbar","drawerWidth","styles","theme","root","flexGrow","hide","display","drawerPaper","position","width","height","textAlign","drawerHeader","alignItems","justifyContent","padding","textTransform","mixins","toolbar","DescriptionDrawer","Component","handleChange","value","event","props","onTextChange","handleClick","onClick","handleDrawerClose","onDescriptionDrawerClose","startParsing","post","post_text","goalDescription","headers","then","res","render","classes","paper","direction","fontSize","tabSize","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Axios from 'axios';\r\nimport AceEditor from 'react-ace';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n\r\nconst drawerWidth = '100%';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n    textAlign: 'left',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    textTransform: 'capitalize',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n});\r\n\r\n\r\nclass DescriptionDrawer extends React.Component {\r\n\r\n  handleChange = (value, event) => {\r\n    this.props.onTextChange(value);\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.onDescriptionDrawerClose();\r\n  };\r\n\r\n  startParsing = () => {\r\n    Axios.post('http://127.0.0.1:5000/parse', {\r\n      post_text: this.props.goalDescription\r\n    }, {\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*'\r\n    }}).then(function(res) {\r\n      //console.log(res.data.result);\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Drawer\r\n          id=\"format-drawer\"\r\n          variant=\"persistent\"\r\n          anchor='left'\r\n          open\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Goal Descriptions\r\n            </DialogTitle>\r\n            <IconButton id=\"close-button\" onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\t      <AceEditor\r\n\t        mode=\"txt\"\r\n             theme=\"github\"\r\n             fontSize={this.props.fontSize + 'px'}\r\n\t        tabSize={this.props.tabSize}\r\n\t        value={this.props.goalDescription}\r\n\t        height= '80%'\r\n\t        width= '100%'\r\n\t        onChange={this.handleChange}\r\n\t      />\r\n\t   <Divider />\r\n\t   <Toolbar>\r\n\t\t   <p>\r\n\t\t      Input goal descriptions, then press the right button.\r\n\t\t   </p>\r\n\t\t   <div style={{flexGrow: 1}}></div>\r\n   \t   <Button\r\n         \t   color=\"inherit\"\r\n         \t   size=\"Large\"\r\n         \t   style={{flexGrow: 0.2}}\r\n         \t   onClick={this.startParsing}\r\n              >\r\n              Parse\r\n              </Button>\r\n\t   </Toolbar>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDescriptionDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DescriptionDrawer);"]},"metadata":{},"sourceType":"module"}