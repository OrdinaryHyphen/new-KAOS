{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\assisted-goalmodel-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\assisted-goalmodel-editor\\\\src\\\\pages\\\\index.js\";\nimport React from 'react';\nimport 'typeface-roboto';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from '../withRoot';\nimport ButtonAppBar from '../ButtonAppBar';\nimport Graph from '../Graph';\nimport TextEditor from '../TextEditor';\nimport MainMenu from '../MainMenu';\nimport HelpMenu from '../HelpMenu';\nimport SettingsDialog from '../SettingsDialog';\nimport OpenFromBrowserDialog from '../OpenFromBrowserDialog';\nimport SaveAsToBrowserDialog from '../SaveAsToBrowserDialog';\nimport InsertPanels from '../InsertPanels';\nimport FormatDrawer from '../FormatDrawer';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport { schemePaired as d3_schemePaired } from 'd3-scale-chromatic';\nimport KeyboardShortcutsDialog from '../KeyboardShortcutsDialog';\nimport MouseOperationsDialog from '../MouseOperationsDialog';\nimport AboutDialog from '../AboutDialog';\nimport { parse as qs_parse } from 'qs';\nimport { stringify as qs_stringify } from 'qs';\nimport ExportAsUrlDialog from '../ExportAsUrlDialog';\nimport ExportAsSvgDialog from '../ExportAsSvgDialog';\nimport { graphvizVersion } from '../graphvizVersion';\nimport UpdatedSnackbar from '../UpdatedSnackbar';\nimport packageJSON from '../../package.json';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center'\n  },\n  paper: {\n    // viewport height - app bar - 2 * padding\n    height: \"calc(100vh - 64px - 2 * 12px)\"\n  },\n  paperWhenUpdatedSnackbarIsOpen: {\n    \"margin-top\": \"64px\",\n    height: \"calc(100vh - 64px - 64px - 2 * 12px)\"\n  }\n});\n\nconst defaultElevation = 2;\nconst focusedElevation = 8;\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setPersistentState = updater => {\n      this.setState(state => {\n        if (typeof updater === 'function') {\n          var obj = updater(state);\n        } else {\n          obj = updater;\n        }\n\n        if (obj != null) {\n          Object.keys(obj).forEach(key => {\n            let value = obj[key];\n\n            if (typeof value === 'boolean') {\n              value = value.toString();\n            } else if (typeof value === 'object') {\n              value = JSON.stringify(value);\n            }\n\n            localStorage.setItem(key, value);\n          });\n        }\n\n        return obj;\n      });\n    };\n\n    this.handleTextChange = (text, undoRedoState) => {\n      this.setPersistentState(state => {\n        const newState = {\n          name: state.name || (text ? this.createUntitledName(state.projects) : ''),\n          dotSrc: text\n        };\n\n        if (!this.disableDotSrcLastChangeTimeUpdate) {\n          newState.dotSrcLastChangeTime = Date.now();\n        }\n\n        return newState;\n      });\n      this.disableDotSrcLastChangeTimeUpdate = false;\n\n      if (this.resetUndoAtNextTextChange) {\n        this.resetUndoStack();\n        undoRedoState = {\n          hasUndo: false,\n          hasRedo: false\n        };\n        this.resetUndoAtNextTextChange = false;\n      }\n\n      this.setState(undoRedoState);\n    };\n\n    this.handleMainMenuButtonClick = anchorEl => {\n      this.setState({\n        mainMenuIsOpen: true,\n        mainMenuAnchorEl: anchorEl\n      });\n    };\n\n    this.handleNewClick = () => {\n      this.handleSaveAsToBrowser('');\n      this.resetUndoAtNextTextChange = true;\n    };\n\n    this.handleRenameClick = () => {\n      this.setState({\n        rename: true,\n        saveToBrowserAsDialogIsOpen: true\n      });\n    };\n\n    this.handleExportAsUrlClick = () => {\n      this.setState({\n        exportAsUrlDialogIsOpen: true\n      });\n    };\n\n    this.handleExportAsSvgClick = () => {\n      this.setState({\n        exportAsSvgDialogIsOpen: true\n      });\n    };\n\n    this.handleExportAsUrlClose = () => {\n      this.setState({\n        exportAsUrlDialogIsOpen: false\n      });\n    };\n\n    this.handleExportAsSvgClose = () => {\n      this.setState({\n        exportAsSvgDialogIsOpen: false\n      });\n    };\n\n    this.handleUndoButtonClick = () => {\n      this.undo();\n    };\n\n    this.handleRedoButtonClick = () => {\n      this.redo();\n    };\n\n    this.handleMainMenuClose = () => {\n      this.setState({\n        mainMenuIsOpen: false\n      });\n    };\n\n    this.handleHelpButtonClick = anchorEl => {\n      this.setState({\n        helpMenuIsOpen: true,\n        helpMenuAnchorEl: anchorEl\n      });\n    };\n\n    this.handleHelpMenuClose = () => {\n      this.setState({\n        helpMenuIsOpen: false\n      });\n    };\n\n    this.handleInsertButtonClick = () => {\n      this.setFocusIf('insertPanelsAreOpen', null, 'InsertPanels');\n      this.setPersistentState({\n        insertPanelsAreOpen: !this.state.insertPanelsAreOpen\n      });\n    };\n\n    this.handleNodeFormatButtonClick = () => {\n      this.setFocusIf('nodeFormatDrawerIsOpen', null, 'NodeFormatDrawer');\n      this.setPersistentState({\n        nodeFormatDrawerIsOpen: !this.state.nodeFormatDrawerIsOpen,\n        edgeFormatDrawerIsOpen: false\n      });\n    };\n\n    this.handleNodeFormatDrawerClose = () => {\n      this.setPersistentState({\n        nodeFormatDrawerIsOpen: false\n      });\n      this.setFocus(null);\n    };\n\n    this.handleEdgeFormatButtonClick = () => {\n      this.setFocusIf('edgeFormatDrawerIsOpen', null, 'EdgeFormatDrawer');\n      this.setPersistentState({\n        edgeFormatDrawerIsOpen: !this.state.edgeFormatDrawerIsOpen,\n        nodeFormatDrawerIsOpen: false\n      });\n    };\n\n    this.handleEdgeFormatDrawerClose = () => {\n      this.setPersistentState({\n        edgeFormatDrawerIsOpen: false\n      });\n      this.setFocus(null);\n    };\n\n    this.handleSettingsClick = () => {\n      this.setState({\n        settingsDialogIsOpen: true\n      });\n    };\n\n    this.handleSettingsClose = () => {\n      this.setState({\n        settingsDialogIsOpen: false\n      });\n    };\n\n    this.handleOpenFromBrowserClick = () => {\n      this.setState({\n        openFromBrowserDialogIsOpen: true\n      });\n    };\n\n    this.handleOpenFromBrowserClose = () => {\n      this.setState({\n        openFromBrowserDialogIsOpen: false\n      });\n    };\n\n    this.handleOpenFromBrowser = newCurrentName => {\n      const currentName = this.state.name;\n\n      if (newCurrentName !== currentName) {\n        this.setPersistentState(state => {\n          const projects = _objectSpread({}, state.projects);\n\n          if (currentName) {\n            const currentProject = {\n              dotSrc: state.dotSrc,\n              dotSrcLastChangeTime: state.dotSrcLastChangeTime,\n              svg: this.getSvgString()\n            };\n            projects[currentName] = currentProject;\n          }\n\n          const newCurrentProject = projects[newCurrentName];\n          delete projects[newCurrentName];\n          this.disableDotSrcLastChangeTimeUpdate = true;\n          return _objectSpread({\n            name: newCurrentName\n          }, newCurrentProject, {\n            projects: projects\n          });\n        });\n        this.resetUndoAtNextTextChange = true;\n      }\n\n      this.handleOpenFromBrowserClose();\n    };\n\n    this.createUntitledName = (projects, currentName) => {\n      const baseName = 'Untitled Graph';\n      let newName = baseName;\n\n      while (projects[newName] || newName === currentName) {\n        newName = baseName + ' ' + (+newName.replace(baseName, '') + 1);\n      }\n\n      return newName;\n    };\n\n    this.handleOpenFromBrowserDelete = nameToDelete => {\n      this.setPersistentState(state => {\n        const currentName = state.name;\n\n        if (nameToDelete === currentName) {\n          return {\n            name: '',\n            dotSrc: '',\n            dotSrcLastChangeTime: Date.now()\n          };\n        } else {\n          const projects = _objectSpread({}, state.projects);\n\n          delete projects[nameToDelete];\n          return {\n            projects: projects\n          };\n        }\n      });\n    };\n\n    this.handleSaveAsToBrowserClick = () => {\n      this.setState({\n        rename: false,\n        saveToBrowserAsDialogIsOpen: true\n      });\n    };\n\n    this.handleSaveAsToBrowserClose = () => {\n      this.setState({\n        saveToBrowserAsDialogIsOpen: false\n      });\n    };\n\n    this.handleSaveAsToBrowser = (newName, newDotSrc) => {\n      const currentName = this.state.name;\n\n      if (newName !== currentName) {\n        this.setPersistentState(state => {\n          const projects = _objectSpread({}, state.projects);\n\n          delete projects[newName];\n\n          if (currentName && !state.rename) {\n            const currentProject = {\n              dotSrc: this.state.dotSrc,\n              dotSrcLastChangeTime: state.dotSrcLastChangeTime,\n              svg: this.getSvgString()\n            };\n            projects[currentName] = currentProject;\n          }\n\n          return {\n            projects: _objectSpread({}, projects),\n            name: newName,\n            dotSrc: newDotSrc ? newDotSrc : newName ? state.dotSrc : '',\n            dotSrcLastChangeTime: newDotSrc ? Date.now() : state.dotSrcLastChangeTime\n          };\n        });\n      }\n\n      this.handleSaveAsToBrowserClose();\n    };\n\n    this.handleEngineSelectChange = engine => {\n      this.setPersistentState({\n        engine: engine\n      });\n    };\n\n    this.handleFitGraphSwitchChange = fitGraph => {\n      this.setPersistentState({\n        fitGraph: fitGraph\n      });\n    };\n\n    this.handleTransitionDurationChange = transitionDuration => {\n      this.setPersistentState({\n        transitionDuration: transitionDuration\n      });\n    };\n\n    this.handleTweenPathsSwitchChange = tweenPaths => {\n      this.setPersistentState({\n        tweenPaths: tweenPaths\n      });\n    };\n\n    this.handleTweenShapesSwitchChange = tweenShapes => {\n      this.setPersistentState({\n        tweenShapes: tweenShapes\n      });\n    };\n\n    this.handleTweenPrecisionChange = tweenPrecision => {\n      this.setPersistentState({\n        tweenPrecision: tweenPrecision\n      });\n    };\n\n    this.handleHoldOffChange = holdOff => {\n      this.setPersistentState({\n        holdOff: holdOff\n      });\n    };\n\n    this.handleFontSizeChange = fontSize => {\n      this.setPersistentState({\n        fontSize: fontSize\n      });\n    };\n\n    this.handleTabSizeChange = tabSize => {\n      this.setPersistentState({\n        tabSize: tabSize\n      });\n    };\n\n    this.handleNodeStyleChange = style => {\n      this.setPersistentState(state => ({\n        defaultNodeAttributes: _objectSpread({}, state.defaultNodeAttributes, {\n          style: style\n        })\n      }));\n    };\n\n    this.handleNodeColorChange = color => {\n      this.setPersistentState(state => ({\n        defaultNodeAttributes: _objectSpread({}, state.defaultNodeAttributes, {\n          color: color\n        })\n      }));\n    };\n\n    this.handleNodeFillColorChange = color => {\n      this.setPersistentState(state => ({\n        defaultNodeAttributes: _objectSpread({}, state.defaultNodeAttributes, {\n          fillcolor: color\n        })\n      }));\n    };\n\n    this.handleEdgeStyleChange = style => {\n      this.setPersistentState(state => ({\n        defaultEdgeAttributes: _objectSpread({}, state.defaultEdgeAttributes, {\n          style: style\n        })\n      }));\n    };\n\n    this.handleEdgeColorChange = color => {\n      this.setPersistentState(state => ({\n        defaultEdgeAttributes: _objectSpread({}, state.defaultEdgeAttributes, {\n          color: color\n        })\n      }));\n    };\n\n    this.handleEdgeFillColorChange = color => {\n      this.setPersistentState(state => ({\n        defaultEdgeAttributes: _objectSpread({}, state.defaultEdgeAttributes, {\n          fillcolor: color\n        })\n      }));\n    };\n\n    this.handleKeyboardShortcutsClick = () => {\n      this.setState({\n        keyboardShortcutsDialogIsOpen: true\n      });\n    };\n\n    this.handleKeyboardShortcutsDialogClose = () => {\n      this.setState({\n        keyboardShortcutsDialogIsOpen: false\n      });\n    };\n\n    this.handleMouseOperationsClick = () => {\n      this.setState({\n        mouseOperationsDialogIsOpen: true\n      });\n    };\n\n    this.handleMouseOperationsDialogClose = () => {\n      this.setState({\n        mouseOperationsDialogIsOpen: false\n      });\n    };\n\n    this.handleAboutClick = () => {\n      this.setState({\n        aboutDialogIsOpen: true\n      });\n    };\n\n    this.handleAboutDialogClose = () => {\n      this.setState({\n        aboutDialogIsOpen: false\n      });\n    };\n\n    this.registerNodeShapeClick = handleNodeShapeClick => {\n      this.handleNodeShapeClick = handleNodeShapeClick;\n    };\n\n    this.registerNodeShapeDragStart = handleNodeShapeDragStart => {\n      this.handleNodeShapeDragStart = handleNodeShapeDragStart;\n    };\n\n    this.registerNodeShapeDragEnd = handleNodeShapeDragEnd => {\n      this.handleNodeShapeDragEnd = handleNodeShapeDragEnd;\n    };\n\n    this.handleZoomInButtonClick = () => {};\n\n    this.handleZoomOutButtonClick = () => {};\n\n    this.handleZoomOutMapButtonClick = () => {};\n\n    this.handleZoomResetButtonClick = () => {};\n\n    this.registerZoomInButtonClick = handleZoomInButtonClick => {\n      this.handleZoomInButtonClick = handleZoomInButtonClick;\n    };\n\n    this.registerZoomOutButtonClick = handleZoomOutButtonClick => {\n      this.handleZoomOutButtonClick = handleZoomOutButtonClick;\n    };\n\n    this.registerZoomOutMapButtonClick = handleZoomOutMapButtonClick => {\n      this.handleZoomOutMapButtonClick = handleZoomOutMapButtonClick;\n    };\n\n    this.registerZoomResetButtonClick = handleZoomResetButtonClick => {\n      this.handleZoomResetButtonClick = handleZoomResetButtonClick;\n    };\n\n    this.registerGetSvg = getSvg => {\n      this.getSvg = getSvg;\n    };\n\n    this.handleGraphComponentSelect = components => {\n      this.setState({\n        selectedGraphComponents: components\n      });\n    };\n\n    this.handleGraphInitialized = () => {\n      this.setState({\n        graphInitialized: true\n      });\n      this.setPersistentState({\n        svg: this.getSvgString()\n      });\n    };\n\n    this.handleError = error => {\n      if (error) {\n        error.numLines = this.state.dotSrc.split('\\n').length;\n      }\n\n      if (JSON.stringify(error) !== JSON.stringify(this.state.error)) {\n        this.setState({\n          error: error\n        });\n      }\n    };\n\n    this.registerUndo = undo => {\n      this.undo = undo;\n    };\n\n    this.registerRedo = redo => {\n      this.redo = redo;\n    };\n\n    this.registerUndoReset = resetUndoStack => {\n      this.resetUndoStack = resetUndoStack;\n    };\n\n    this.handleTextEditorFocus = () => {\n      this.setFocus('TextEditor');\n    };\n\n    this.handleTextEditorBlur = () => {\n      // Needed when the user clicks outside of a pane,\n      // e.g. the app bar or the background\n      this.setFocusIfFocusIs('TextEditor', null);\n    };\n\n    this.handleGraphFocus = () => {\n      this.setFocus('Graph');\n    };\n\n    this.handleInsertPanelsClick = () => {\n      this.setFocus('InsertPanels');\n    };\n\n    this.handleNodeFormatDrawerClick = () => {\n      this.setFocusIf('nodeFormatDrawerIsOpen', 'NodeFormatDrawer', null);\n    };\n\n    this.handleEdgeFormatDrawerClick = () => {\n      this.setFocus('EdgeFormatDrawer');\n      this.setFocusIf('edgeFormatDrawerIsOpen', 'EdgeFormatDrawer', null);\n    };\n\n    this.handleUpdatedSnackbarClose = () => {\n      this.setState({\n        \"updatedSnackbarIsOpen\": false\n      });\n      this.setPersistentState({\n        \"version\": packageJSON.version,\n        \"graphvizVersion\": this.state.graphvizVersion\n      });\n    };\n\n    this.setFocus = focusedPane => {\n      this.setState(state => state.focusedPane !== focusedPane && {\n        focusedPane: focusedPane\n      } || null);\n    };\n\n    this.setFocusIfFocusIs = (currentlyFocusedPane, newFocusedPane) => {\n      this.setState(state => state.focusedPane === currentlyFocusedPane && {\n        focusedPane: newFocusedPane\n      } || null);\n    };\n\n    this.setFocusIf = (stateProperty, focusedPaneIf, focusedPaneElse) => {\n      this.setState(state => {\n        const focusedPane = state[stateProperty] ? focusedPaneIf : focusedPaneElse;\n        return state.focusedPane !== focusedPane && {\n          focusedPane: focusedPane\n        } || null;\n      });\n    };\n\n    let dotSrc = localStorage.getItem('dotSrc');\n\n    if (dotSrc == null) {\n      dotSrc = \"strict digraph {\\n    a [shape=\\\"ellipse\\\" style=\\\"filled\\\" fillcolor=\\\"\" + d3_schemeCategory10[0] + \"\\\"]\\n    b [shape=\\\"polygon\\\" style=\\\"filled\\\" fillcolor=\\\"\" + d3_schemeCategory10[1] + \"\\\"]\\n    a -> b [fillcolor=\\\"\" + d3_schemePaired[0] + \"\\\" color=\\\"\" + d3_schemePaired[1] + \"\\\"]\\n}\";\n    }\n\n    this.state = {\n      projects: JSON.parse(localStorage.getItem('projects')) || {},\n      initialized: false,\n      name: localStorage.getItem('name') || '',\n      dotSrc: dotSrc,\n      dotSrcLastChangeTime: +localStorage.getItem('dotSrcLastChangeTime') || Date.now(),\n      svg: localStorage.getItem('svg') || '',\n      hasUndo: false,\n      hasRedo: false,\n      mainMenuIsOpen: false,\n      helpMenuIsOpen: false,\n      settingsDialogIsOpen: false,\n      openFromBrowserDialogIsOpen: false,\n      saveToBrowserAsDialogIsOpen: false,\n      replaceName: '',\n      exportAsUrlDialogIsOpen: false,\n      exportAsSvgDialogIsOpen: false,\n      insertPanelsAreOpen: (localStorage.getItem('insertPanelsAreOpen') || 'false') === 'true',\n      nodeFormatDrawerIsOpen: (localStorage.getItem('nodeFormatDrawerIsOpen') || 'false') === 'true',\n      edgeFormatDrawerIsOpen: (localStorage.getItem('edgeFormatDrawerIsOpen') || 'false') === 'true',\n      keyboardShortcutsDialogIsOpen: false,\n      mouseOperationsDialogIsOpen: false,\n      aboutDialogIsOpen: false,\n      fitGraph: localStorage.getItem('fitGraph') === 'true',\n      transitionDuration: localStorage.getItem('transitionDuration') || 1,\n      tweenPaths: localStorage.getItem('tweenPaths') !== 'false',\n      tweenShapes: localStorage.getItem('tweenShapes') !== 'false',\n      tweenPrecision: localStorage.getItem('tweenPrecision') || '1%',\n      engine: localStorage.getItem('engine') || 'dot',\n      defaultNodeAttributes: JSON.parse(localStorage.getItem('defaultNodeAttributes')) || {},\n      defaultEdgeAttributes: JSON.parse(localStorage.getItem('defaultEdgeAttributes')) || {},\n      error: null,\n      holdOff: localStorage.getItem('holdOff') || 0.2,\n      fontSize: localStorage.getItem('fontSize') || 12,\n      tabSize: +localStorage.getItem('tabSize') || 4,\n      selectedGraphComponents: [],\n      test: JSON.parse(localStorage.getItem('test')) || {},\n      graphvizVersion: graphvizVersion,\n      newGraphvizVersion: graphvizVersion !== localStorage.getItem('graphvizVersion'),\n      updatedSnackbarIsOpen: packageJSON.version !== localStorage.getItem('version')\n    };\n  }\n\n  componentDidMount() {\n    const urlParams = qs_parse(window.location.search.slice(1));\n\n    if (urlParams.dot) {\n      const currentDotSrc = this.state.dotSrc;\n      const newDotSrc = urlParams.dot;\n\n      if (newDotSrc !== currentDotSrc) {\n        const names = Object.keys(this.state.projects).filter(name => {\n          const project = this.state.projects[name];\n          return newDotSrc === project.dotSrc;\n        });\n\n        if (names.length > 0) {\n          this.handleOpenFromBrowser(names[0]);\n        } else {\n          const newName = this.createUntitledName(this.state.projects, this.state.name);\n          this.handleSaveAsToBrowser(newName, newDotSrc);\n        }\n      }\n\n      window.history.replaceState(null, null, window.location.pathname);\n    }\n\n    document.onblur = () => {\n      // Needed when the user clicks outside the document,\n      // e.g. the browser address bar\n      this.setFocus(null);\n    };\n  }\n\n  getSvgString() {\n    const svg = this.getSvg();\n    const serializer = new XMLSerializer();\n    return svg ? serializer.serializeToString(svg) : this.state.svg;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const editorIsOpen = !this.state.nodeFormatDrawerIsOpen && !this.state.edgeFormatDrawerIsOpen;\n    const textEditorHasFocus = this.state.focusedPane === 'TextEditor';\n    const nodeFormatDrawerHasFocus = this.state.focusedPane === 'NodeFormatDrawer';\n    const edgeFormatDrawerHasFocus = this.state.focusedPane === 'EdgeFormatDrawer';\n    const insertPanelsHaveFocus = this.state.focusedPane === 'InsertPanels';\n    const graphHasFocus = this.state.focusedPane === 'Graph';\n    const leftPaneElevation = textEditorHasFocus || nodeFormatDrawerHasFocus || edgeFormatDrawerHasFocus ? focusedElevation : defaultElevation;\n    const rightPaneElevation = graphHasFocus ? focusedElevation : defaultElevation;\n    const midPaneElevation = insertPanelsHaveFocus ? focusedElevation : defaultElevation;\n    var columns;\n\n    if (this.state.insertPanelsAreOpen && this.state.graphInitialized) {\n      columns = {\n        textEditor: 3,\n        insertPanels: 3,\n        graph: 6\n      };\n    } else {\n      /* browse */\n      columns = {\n        textEditor: 6,\n        insertPanels: false,\n        graph: 6\n      };\n    }\n\n    const paperClass = this.state.updatedSnackbarIsOpen ? classes.paperWhenUpdatedSnackbarIsOpen : classes.paper;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(\"script\", {\n      src: process.env.PUBLIC_URL.replace(/\\.$/, '') + \"@hpcc-js/wasm/dist/index.min.js\",\n      type: \"javascript/worker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }), React.createElement(ButtonAppBar, {\n      hasUndo: this.state.hasUndo,\n      hasRedo: this.state.hasRedo,\n      onMenuButtonClick: this.handleMainMenuButtonClick,\n      onNewButtonClick: this.handleNewClick,\n      onUndoButtonClick: this.handleUndoButtonClick,\n      onRedoButtonClick: this.handleRedoButtonClick,\n      onInsertClick: this.handleInsertButtonClick,\n      onNodeFormatClick: this.handleNodeFormatButtonClick,\n      onEdgeFormatClick: this.handleEdgeFormatButtonClick,\n      onZoomInButtonClick: this.handleZoomInButtonClick,\n      onZoomOutButtonClick: this.handleZoomOutButtonClick,\n      onZoomOutMapButtonClick: this.handleZoomOutMapButtonClick,\n      onZoomResetButtonClick: this.handleZoomResetButtonClick,\n      onSettingsButtonClick: this.handleSettingsClick,\n      onOpenInBrowserButtonClick: this.handleOpenFromBrowserClick,\n      onSaveAltButtonClick: this.handleSaveAsToBrowserClick,\n      onHelpButtonClick: this.handleHelpButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }), this.state.mainMenuIsOpen && React.createElement(MainMenu, {\n      anchorEl: this.state.mainMenuAnchorEl,\n      onMenuClose: this.handleMainMenuClose,\n      onSettingsClick: this.handleSettingsClick,\n      onOpenFromBrowserClick: this.handleOpenFromBrowserClick,\n      onSaveAsToBrowserClick: this.handleSaveAsToBrowserClick,\n      onNewClick: this.handleNewClick,\n      onRenameClick: this.handleRenameClick,\n      onExportAsUrlClick: this.handleExportAsUrlClick,\n      onExportAsSvgClick: this.handleExportAsSvgClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }), this.state.settingsDialogIsOpen && React.createElement(SettingsDialog, {\n      engine: this.state.engine,\n      fitGraph: this.state.fitGraph,\n      transitionDuration: this.state.transitionDuration,\n      tweenPaths: this.state.tweenPaths,\n      tweenShapes: this.state.tweenShapes,\n      tweenPrecision: this.state.tweenPrecision,\n      onEngineSelectChange: this.handleEngineSelectChange,\n      onFitGraphSwitchChange: this.handleFitGraphSwitchChange,\n      onTransitionDurationChange: this.handleTransitionDurationChange,\n      onTweenPathsSwitchChange: this.handleTweenPathsSwitchChange,\n      onTweenShapesSwitchChange: this.handleTweenShapesSwitchChange,\n      onTweenPrecisionChange: this.handleTweenPrecisionChange,\n      holdOff: this.state.holdOff,\n      onHoldOffChange: this.handleHoldOffChange,\n      fontSize: this.state.fontSize,\n      onFontSizeChange: this.handleFontSizeChange,\n      tabSize: this.state.tabSize,\n      onTabSizeChange: this.handleTabSizeChange,\n      onSettingsClose: this.handleSettingsClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }), this.state.openFromBrowserDialogIsOpen && React.createElement(OpenFromBrowserDialog, {\n      projects: this.state.projects,\n      dotSrc: this.state.dotSrc,\n      dotSrcLastChangeTime: this.state.dotSrcLastChangeTime,\n      svg: this.getSvgString(),\n      name: this.state.name,\n      onOpen: this.handleOpenFromBrowser,\n      onClose: this.handleOpenFromBrowserClose,\n      onDelete: this.handleOpenFromBrowserDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }), this.state.saveToBrowserAsDialogIsOpen && React.createElement(SaveAsToBrowserDialog, {\n      name: this.state.name,\n      rename: this.state.rename,\n      defaultNewName: this.state.name || this.createUntitledName(this.state.projects),\n      projects: this.state.projects,\n      onSave: this.handleSaveAsToBrowser,\n      onClose: this.handleSaveAsToBrowserClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }), this.state.exportAsUrlDialogIsOpen && React.createElement(ExportAsUrlDialog, {\n      URL: window.location.href + '?' + qs_stringify({\n        dot: this.state.dotSrc\n      }),\n      onClose: this.handleExportAsUrlClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }), this.state.exportAsSvgDialogIsOpen && React.createElement(ExportAsSvgDialog, {\n      defaultFilename: (this.state.name || this.createUntitledName(this.state.projects)) + '.svg',\n      getSvgString: this.getSvgString.bind(this),\n      onClose: this.handleExportAsSvgClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }), this.state.updatedSnackbarIsOpen && React.createElement(UpdatedSnackbar, {\n      newGraphvizVersion: this.state.newGraphvizVersion,\n      graphvizVersion: this.state.graphvizVersion,\n      onUpdatedSnackbarClose: this.handleUpdatedSnackbarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        margin: 0,\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: columns.textEditor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      elevation: leftPaneElevation,\n      className: paperClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, this.state.nodeFormatDrawerIsOpen && React.createElement(FormatDrawer, {\n      type: \"node\",\n      defaultAttributes: this.state.defaultNodeAttributes,\n      onClick: this.handleNodeFormatDrawerClick,\n      onFormatDrawerClose: this.handleNodeFormatDrawerClose,\n      onStyleChange: this.handleNodeStyleChange,\n      onColorChange: this.handleNodeColorChange,\n      onFillColorChange: this.handleNodeFillColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }), this.state.edgeFormatDrawerIsOpen && React.createElement(FormatDrawer, {\n      type: \"edge\",\n      defaultAttributes: this.state.defaultEdgeAttributes,\n      onClick: this.handleEdgeFormatDrawerClick,\n      onFormatDrawerClose: this.handleEdgeFormatDrawerClose,\n      onStyleChange: this.handleEdgeStyleChange,\n      onColorChange: this.handleEdgeColorChange,\n      onFillColorChange: this.handleEdgeFillColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: editorIsOpen ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, React.createElement(TextEditor // allocated viewport width - 2 * padding\n    , {\n      width: \"calc(\".concat(columns.textEditor * 100 / 12, \"vw - 2 * 12px)\") // height={`calc(100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"})`}\n      ,\n      height: \"calc((100vh - 64px - 2 * 12px - \".concat(this.updatedSnackbarIsOpen ? \"64px\" : \"0px\", \" )/2)\"),\n      dotSrc: this.state.dotSrc,\n      onTextChange: this.handleTextChange,\n      onFocus: this.handleTextEditorFocus,\n      onBlur: this.handleTextEditorBlur,\n      error: this.state.error,\n      selectedGraphComponents: this.state.selectedGraphComponents,\n      holdOff: this.state.holdOff,\n      fontSize: this.state.fontSize,\n      tabSize: this.state.tabSize,\n      registerUndo: this.registerUndo,\n      registerRedo: this.registerRedo,\n      registerUndoReset: this.registerUndoReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: editorIsOpen ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, React.createElement(TextEditor // allocated viewport width - 2 * padding\n    , {\n      width: \"calc(\".concat(columns.textEditor * 100 / 12, \"vw - 2 * 12px)\") // height={`calc(100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"})`}\n      ,\n      height: \"calc((100vh - 64px - 2 * 12px - \".concat(this.updatedSnackbarIsOpen ? \"64px\" : \"0px\", \" )/2)\"),\n      dotSrc: this.state.dotSrc,\n      onTextChange: this.handleTextChange,\n      onFocus: this.handleTextEditorFocus,\n      onBlur: this.handleTextEditorBlur,\n      error: this.state.error,\n      selectedGraphComponents: this.state.selectedGraphComponents,\n      holdOff: this.state.holdOff,\n      fontSize: this.state.fontSize,\n      tabSize: this.state.tabSize,\n      registerUndo: this.registerUndo,\n      registerRedo: this.registerRedo,\n      registerUndoReset: this.registerUndoReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    })))), this.state.insertPanelsAreOpen && this.state.graphInitialized && React.createElement(Grid, {\n      item: true,\n      xs: columns.insertPanels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      elevation: midPaneElevation,\n      className: paperClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, React.createElement(InsertPanels, {\n      onClick: this.handleInsertPanelsClick,\n      onNodeShapeClick: this.handleNodeShapeClick,\n      onNodeShapeDragStart: this.handleNodeShapeDragStart,\n      onNodeShapeDragEnd: this.handleNodeShapeDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: columns.graph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      elevation: rightPaneElevation,\n      className: paperClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, React.createElement(Graph, {\n      hasFocus: graphHasFocus,\n      dotSrc: this.state.dotSrc,\n      engine: this.state.engine,\n      fit: this.state.fitGraph,\n      transitionDuration: this.state.transitionDuration,\n      tweenPaths: this.state.tweenPaths,\n      tweenShapes: this.state.tweenShapes,\n      tweenPrecision: this.state.tweenPrecision,\n      defaultNodeAttributes: this.state.defaultNodeAttributes,\n      defaultEdgeAttributes: this.state.defaultEdgeAttributes,\n      onFocus: this.handleGraphFocus,\n      onTextChange: this.handleTextChange,\n      onHelp: this.handleKeyboardShortcutsClick,\n      onSelect: this.handleGraphComponentSelect,\n      onUndo: this.undo,\n      onRedo: this.redo,\n      registerNodeShapeClick: this.registerNodeShapeClick,\n      registerNodeShapeDragStart: this.registerNodeShapeDragStart,\n      registerNodeShapeDragEnd: this.registerNodeShapeDragEnd,\n      registerZoomInButtonClick: this.registerZoomInButtonClick,\n      registerZoomOutButtonClick: this.registerZoomOutButtonClick,\n      registerZoomOutMapButtonClick: this.registerZoomOutMapButtonClick,\n      registerZoomResetButtonClick: this.registerZoomResetButtonClick,\n      registerGetSvg: this.registerGetSvg,\n      onInitialized: this.handleGraphInitialized,\n      onError: this.handleError,\n      test: this.state.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    })))), this.state.helpMenuIsOpen && React.createElement(HelpMenu, {\n      anchorEl: this.state.helpMenuAnchorEl,\n      onMenuClose: this.handleHelpMenuClose,\n      onKeyboardShortcutsClick: this.handleKeyboardShortcutsClick,\n      onMouseOperationsClick: this.handleMouseOperationsClick,\n      onAboutClick: this.handleAboutClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }), this.state.keyboardShortcutsDialogIsOpen && React.createElement(KeyboardShortcutsDialog, {\n      onKeyboardShortcutsDialogClose: this.handleKeyboardShortcutsDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }), this.state.mouseOperationsDialogIsOpen && React.createElement(MouseOperationsDialog, {\n      onMouseOperationsDialogClose: this.handleMouseOperationsDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944\n      },\n      __self: this\n    }), this.state.aboutDialogIsOpen && React.createElement(AboutDialog, {\n      graphvizVersion: this.state.graphvizVersion,\n      onAboutDialogClose: this.handleAboutDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }));\n  }\n\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withRoot(withStyles(styles)(Index));","map":{"version":3,"sources":["C:/Users/user/assisted-goalmodel-editor/src/pages/index.js"],"names":["React","PropTypes","Paper","Grid","withStyles","withRoot","ButtonAppBar","Graph","TextEditor","MainMenu","HelpMenu","SettingsDialog","OpenFromBrowserDialog","SaveAsToBrowserDialog","InsertPanels","FormatDrawer","schemeCategory10","d3_schemeCategory10","schemePaired","d3_schemePaired","KeyboardShortcutsDialog","MouseOperationsDialog","AboutDialog","parse","qs_parse","stringify","qs_stringify","ExportAsUrlDialog","ExportAsSvgDialog","graphvizVersion","UpdatedSnackbar","packageJSON","styles","theme","root","textAlign","paper","height","paperWhenUpdatedSnackbarIsOpen","defaultElevation","focusedElevation","Index","Component","constructor","props","setPersistentState","updater","setState","state","obj","Object","keys","forEach","key","value","toString","JSON","localStorage","setItem","handleTextChange","text","undoRedoState","newState","name","createUntitledName","projects","dotSrc","disableDotSrcLastChangeTimeUpdate","dotSrcLastChangeTime","Date","now","resetUndoAtNextTextChange","resetUndoStack","hasUndo","hasRedo","handleMainMenuButtonClick","anchorEl","mainMenuIsOpen","mainMenuAnchorEl","handleNewClick","handleSaveAsToBrowser","handleRenameClick","rename","saveToBrowserAsDialogIsOpen","handleExportAsUrlClick","exportAsUrlDialogIsOpen","handleExportAsSvgClick","exportAsSvgDialogIsOpen","handleExportAsUrlClose","handleExportAsSvgClose","handleUndoButtonClick","undo","handleRedoButtonClick","redo","handleMainMenuClose","handleHelpButtonClick","helpMenuIsOpen","helpMenuAnchorEl","handleHelpMenuClose","handleInsertButtonClick","setFocusIf","insertPanelsAreOpen","handleNodeFormatButtonClick","nodeFormatDrawerIsOpen","edgeFormatDrawerIsOpen","handleNodeFormatDrawerClose","setFocus","handleEdgeFormatButtonClick","handleEdgeFormatDrawerClose","handleSettingsClick","settingsDialogIsOpen","handleSettingsClose","handleOpenFromBrowserClick","openFromBrowserDialogIsOpen","handleOpenFromBrowserClose","handleOpenFromBrowser","newCurrentName","currentName","currentProject","svg","getSvgString","newCurrentProject","baseName","newName","replace","handleOpenFromBrowserDelete","nameToDelete","handleSaveAsToBrowserClick","handleSaveAsToBrowserClose","newDotSrc","handleEngineSelectChange","engine","handleFitGraphSwitchChange","fitGraph","handleTransitionDurationChange","transitionDuration","handleTweenPathsSwitchChange","tweenPaths","handleTweenShapesSwitchChange","tweenShapes","handleTweenPrecisionChange","tweenPrecision","handleHoldOffChange","holdOff","handleFontSizeChange","fontSize","handleTabSizeChange","tabSize","handleNodeStyleChange","style","defaultNodeAttributes","handleNodeColorChange","color","handleNodeFillColorChange","fillcolor","handleEdgeStyleChange","defaultEdgeAttributes","handleEdgeColorChange","handleEdgeFillColorChange","handleKeyboardShortcutsClick","keyboardShortcutsDialogIsOpen","handleKeyboardShortcutsDialogClose","handleMouseOperationsClick","mouseOperationsDialogIsOpen","handleMouseOperationsDialogClose","handleAboutClick","aboutDialogIsOpen","handleAboutDialogClose","registerNodeShapeClick","handleNodeShapeClick","registerNodeShapeDragStart","handleNodeShapeDragStart","registerNodeShapeDragEnd","handleNodeShapeDragEnd","handleZoomInButtonClick","handleZoomOutButtonClick","handleZoomOutMapButtonClick","handleZoomResetButtonClick","registerZoomInButtonClick","registerZoomOutButtonClick","registerZoomOutMapButtonClick","registerZoomResetButtonClick","registerGetSvg","getSvg","handleGraphComponentSelect","components","selectedGraphComponents","handleGraphInitialized","graphInitialized","handleError","error","numLines","split","length","registerUndo","registerRedo","registerUndoReset","handleTextEditorFocus","handleTextEditorBlur","setFocusIfFocusIs","handleGraphFocus","handleInsertPanelsClick","handleNodeFormatDrawerClick","handleEdgeFormatDrawerClick","handleUpdatedSnackbarClose","version","focusedPane","currentlyFocusedPane","newFocusedPane","stateProperty","focusedPaneIf","focusedPaneElse","getItem","initialized","replaceName","test","newGraphvizVersion","updatedSnackbarIsOpen","componentDidMount","urlParams","window","location","search","slice","dot","currentDotSrc","names","filter","project","history","replaceState","pathname","document","onblur","serializer","XMLSerializer","serializeToString","render","classes","editorIsOpen","textEditorHasFocus","nodeFormatDrawerHasFocus","edgeFormatDrawerHasFocus","insertPanelsHaveFocus","graphHasFocus","leftPaneElevation","rightPaneElevation","midPaneElevation","columns","textEditor","insertPanels","graph","paperClass","process","env","PUBLIC_URL","href","bind","margin","width","display","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'typeface-roboto';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from '../withRoot';\r\nimport ButtonAppBar from '../ButtonAppBar';\r\nimport Graph from '../Graph';\r\nimport TextEditor from '../TextEditor';\r\nimport MainMenu from '../MainMenu';\r\nimport HelpMenu from '../HelpMenu';\r\nimport SettingsDialog from '../SettingsDialog';\r\nimport OpenFromBrowserDialog from '../OpenFromBrowserDialog';\r\nimport SaveAsToBrowserDialog from '../SaveAsToBrowserDialog';\r\nimport InsertPanels from '../InsertPanels';\r\nimport FormatDrawer from '../FormatDrawer';\r\nimport { schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\r\nimport { schemePaired as d3_schemePaired} from 'd3-scale-chromatic';\r\nimport KeyboardShortcutsDialog from '../KeyboardShortcutsDialog';\r\nimport MouseOperationsDialog from '../MouseOperationsDialog';\r\nimport AboutDialog from '../AboutDialog';\r\nimport { parse as qs_parse } from 'qs';\r\nimport { stringify as qs_stringify } from 'qs';\r\nimport ExportAsUrlDialog from '../ExportAsUrlDialog';\r\nimport ExportAsSvgDialog from '../ExportAsSvgDialog'\r\nimport { graphvizVersion } from '../graphvizVersion';\r\nimport UpdatedSnackbar from '../UpdatedSnackbar';\r\nimport packageJSON from '../../package.json';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    textAlign: 'center',\r\n  },\r\n  paper: {\r\n    // viewport height - app bar - 2 * padding\r\n    height: \"calc(100vh - 64px - 2 * 12px)\",\r\n  },\r\n  paperWhenUpdatedSnackbarIsOpen: {\r\n    \"margin-top\": \"64px\",\r\n    height: \"calc(100vh - 64px - 64px - 2 * 12px)\",\r\n  }\r\n});\r\n\r\nconst defaultElevation = 2;\r\nconst focusedElevation = 8;\r\n\r\nclass Index extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let dotSrc = localStorage.getItem('dotSrc');\r\n    if (dotSrc == null) {\r\n      dotSrc = `strict digraph {\r\n    a [shape=\"ellipse\" style=\"filled\" fillcolor=\"` + d3_schemeCategory10[0] + `\"]\r\n    b [shape=\"polygon\" style=\"filled\" fillcolor=\"` + d3_schemeCategory10[1] + `\"]\r\n    a -> b [fillcolor=\"` + d3_schemePaired[0] + `\" color=\"` + d3_schemePaired[1] + `\"]\r\n}`;\r\n    }\r\n    this.state = {\r\n      projects: JSON.parse(localStorage.getItem('projects')) || {},\r\n      initialized: false,\r\n      name: localStorage.getItem('name') || '',\r\n      dotSrc: dotSrc,\r\n      dotSrcLastChangeTime: +localStorage.getItem('dotSrcLastChangeTime') || Date.now(),\r\n      svg: localStorage.getItem('svg') || '',\r\n      hasUndo: false,\r\n      hasRedo: false,\r\n      mainMenuIsOpen: false,\r\n      helpMenuIsOpen: false,\r\n      settingsDialogIsOpen: false,\r\n      openFromBrowserDialogIsOpen: false,\r\n      saveToBrowserAsDialogIsOpen: false,\r\n      replaceName: '',\r\n      exportAsUrlDialogIsOpen: false,\r\n      exportAsSvgDialogIsOpen: false,\r\n      insertPanelsAreOpen: (localStorage.getItem('insertPanelsAreOpen') || 'false') === 'true',\r\n      nodeFormatDrawerIsOpen: (localStorage.getItem('nodeFormatDrawerIsOpen') || 'false') === 'true',\r\n      edgeFormatDrawerIsOpen: (localStorage.getItem('edgeFormatDrawerIsOpen') || 'false') === 'true',\r\n      keyboardShortcutsDialogIsOpen: false,\r\n      mouseOperationsDialogIsOpen: false,\r\n      aboutDialogIsOpen: false,\r\n      fitGraph : localStorage.getItem('fitGraph') === 'true',\r\n      transitionDuration: localStorage.getItem('transitionDuration') || 1,\r\n      tweenPaths : localStorage.getItem('tweenPaths') !== 'false',\r\n      tweenShapes : localStorage.getItem('tweenShapes') !== 'false',\r\n      tweenPrecision : localStorage.getItem('tweenPrecision') || '1%',\r\n      engine : localStorage.getItem('engine') || 'dot',\r\n      defaultNodeAttributes: JSON.parse(localStorage.getItem('defaultNodeAttributes')) || {},\r\n      defaultEdgeAttributes: JSON.parse(localStorage.getItem('defaultEdgeAttributes')) || {},\r\n      error: null,\r\n      holdOff: localStorage.getItem('holdOff') || 0.2,\r\n      fontSize: localStorage.getItem('fontSize') || 12,\r\n      tabSize: +localStorage.getItem('tabSize') || 4,\r\n      selectedGraphComponents: [],\r\n      test: JSON.parse(localStorage.getItem('test')) || {},\r\n      graphvizVersion: graphvizVersion,\r\n      newGraphvizVersion: graphvizVersion !== localStorage.getItem('graphvizVersion'),\r\n      updatedSnackbarIsOpen: packageJSON.version !== localStorage.getItem('version'),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = qs_parse(window.location.search.slice(1));\r\n    if (urlParams.dot) {\r\n      const currentDotSrc = this.state.dotSrc;\r\n      const newDotSrc = urlParams.dot;\r\n      if (newDotSrc !== currentDotSrc) {\r\n        const names = Object.keys(this.state.projects).filter((name) => {\r\n          const project = this.state.projects[name];\r\n          return newDotSrc === project.dotSrc;\r\n        });\r\n        if (names.length > 0) {\r\n          this.handleOpenFromBrowser(names[0]);\r\n        } else {\r\n          const newName = this.createUntitledName(this.state.projects, this.state.name);\r\n          this.handleSaveAsToBrowser(newName, newDotSrc);\r\n        }\r\n      }\r\n      window.history.replaceState(null, null, window.location.pathname);\r\n    }\r\n    document.onblur = () => {\r\n      // Needed when the user clicks outside the document,\r\n      // e.g. the browser address bar\r\n      this.setFocus(null);\r\n    }\r\n  }\r\n\r\n  setPersistentState = (updater) => {\r\n    this.setState((state) => {\r\n      if (typeof updater === 'function') {\r\n        var obj = updater(state);\r\n      } else {\r\n        obj = updater;\r\n      }\r\n      if (obj != null) {\r\n        Object.keys(obj).forEach((key) => {\r\n          let value = obj[key];\r\n          if (typeof value === 'boolean') {\r\n            value = value.toString();\r\n          }\r\n          else if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n          }\r\n          localStorage.setItem(key, value);\r\n        });\r\n      }\r\n      return obj;\r\n    });\r\n  }\r\n\r\n  handleTextChange = (text, undoRedoState) => {\r\n    this.setPersistentState((state) => {\r\n      const newState = {\r\n        name: state.name || (text ? this.createUntitledName(state.projects) : ''),\r\n        dotSrc: text,\r\n      };\r\n      if (!this.disableDotSrcLastChangeTimeUpdate) {\r\n        newState.dotSrcLastChangeTime = Date.now();\r\n      }\r\n      return newState;\r\n    });\r\n    this.disableDotSrcLastChangeTimeUpdate = false;\r\n    if (this.resetUndoAtNextTextChange) {\r\n      this.resetUndoStack();\r\n      undoRedoState = {\r\n        hasUndo: false,\r\n        hasRedo: false,\r\n      };\r\n      this.resetUndoAtNextTextChange = false;\r\n    }\r\n    this.setState(undoRedoState);\r\n  }\r\n\r\n  handleMainMenuButtonClick = (anchorEl) => {\r\n    this.setState({\r\n      mainMenuIsOpen: true,\r\n      mainMenuAnchorEl: anchorEl,\r\n    });\r\n  }\r\n\r\n  handleNewClick = () => {\r\n    this.handleSaveAsToBrowser('');\r\n    this.resetUndoAtNextTextChange = true;\r\n  }\r\n\r\n  handleRenameClick = () => {\r\n    this.setState({\r\n      rename: true,\r\n      saveToBrowserAsDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleExportAsUrlClick = () => {\r\n    this.setState({\r\n      exportAsUrlDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleExportAsSvgClick = () => {\r\n    this.setState({\r\n      exportAsSvgDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleExportAsUrlClose = () => {\r\n    this.setState({\r\n      exportAsUrlDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleExportAsSvgClose = () => {\r\n    this.setState({\r\n      exportAsSvgDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleUndoButtonClick = () => {\r\n    this.undo();\r\n  }\r\n\r\n  handleRedoButtonClick = () => {\r\n    this.redo();\r\n  }\r\n\r\n  handleMainMenuClose = () => {\r\n    this.setState({\r\n      mainMenuIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleHelpButtonClick = (anchorEl) => {\r\n    this.setState({\r\n      helpMenuIsOpen: true,\r\n      helpMenuAnchorEl: anchorEl,\r\n    });\r\n  }\r\n\r\n  handleHelpMenuClose = () => {\r\n    this.setState({\r\n      helpMenuIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleInsertButtonClick = () => {\r\n    this.setFocusIf('insertPanelsAreOpen', null, 'InsertPanels')\r\n    this.setPersistentState({\r\n      insertPanelsAreOpen: !this.state.insertPanelsAreOpen,\r\n    });\r\n  }\r\n\r\n  handleNodeFormatButtonClick = () => {\r\n    this.setFocusIf('nodeFormatDrawerIsOpen', null, 'NodeFormatDrawer')\r\n    this.setPersistentState({\r\n      nodeFormatDrawerIsOpen: !this.state.nodeFormatDrawerIsOpen,\r\n      edgeFormatDrawerIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleNodeFormatDrawerClose = () => {\r\n    this.setPersistentState({\r\n      nodeFormatDrawerIsOpen: false,\r\n    });\r\n    this.setFocus(null);\r\n  }\r\n\r\n  handleEdgeFormatButtonClick = () => {\r\n    this.setFocusIf('edgeFormatDrawerIsOpen', null, 'EdgeFormatDrawer')\r\n    this.setPersistentState({\r\n      edgeFormatDrawerIsOpen: !this.state.edgeFormatDrawerIsOpen,\r\n      nodeFormatDrawerIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleEdgeFormatDrawerClose = () => {\r\n    this.setPersistentState({\r\n      edgeFormatDrawerIsOpen: false,\r\n    });\r\n    this.setFocus(null);\r\n  }\r\n\r\n  handleSettingsClick = () => {\r\n    this.setState({\r\n      settingsDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleSettingsClose = () => {\r\n    this.setState({\r\n      settingsDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleOpenFromBrowserClick = () => {\r\n    this.setState({\r\n      openFromBrowserDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleOpenFromBrowserClose = () => {\r\n    this.setState({\r\n      openFromBrowserDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleOpenFromBrowser = (newCurrentName) => {\r\n    const currentName = this.state.name;\r\n    if (newCurrentName !== currentName) {\r\n      this.setPersistentState(state => {\r\n        const projects = {...state.projects};\r\n        if (currentName) {\r\n          const currentProject = {\r\n            dotSrc: state.dotSrc,\r\n            dotSrcLastChangeTime: state.dotSrcLastChangeTime,\r\n            svg: this.getSvgString(),\r\n          };\r\n          projects[currentName] = currentProject;\r\n        }\r\n        const newCurrentProject = projects[newCurrentName];\r\n        delete projects[newCurrentName];\r\n        this.disableDotSrcLastChangeTimeUpdate = true;\r\n        return {\r\n          name: newCurrentName,\r\n          ...newCurrentProject,\r\n          projects: projects,\r\n        }\r\n      });\r\n      this.resetUndoAtNextTextChange = true;\r\n    }\r\n    this.handleOpenFromBrowserClose();\r\n  }\r\n\r\n  createUntitledName = (projects, currentName) => {\r\n    const baseName = 'Untitled Graph';\r\n    let newName = baseName;\r\n    while (projects[newName] || newName === currentName) {\r\n      newName = baseName + ' ' + (+newName.replace(baseName, '') + 1);\r\n    }\r\n    return newName;\r\n  }\r\n\r\n  handleOpenFromBrowserDelete = (nameToDelete) => {\r\n    this.setPersistentState((state) => {\r\n      const currentName = state.name;\r\n      if (nameToDelete === currentName) {\r\n        return {\r\n          name: '',\r\n          dotSrc: '',\r\n          dotSrcLastChangeTime: Date.now(),\r\n        }\r\n      } else {\r\n        const projects = {...state.projects};\r\n        delete projects[nameToDelete];\r\n        return {\r\n          projects: projects,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSaveAsToBrowserClick = () => {\r\n    this.setState({\r\n      rename: false,\r\n      saveToBrowserAsDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleSaveAsToBrowserClose = () => {\r\n    this.setState({\r\n      saveToBrowserAsDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleSaveAsToBrowser = (newName, newDotSrc) => {\r\n    const currentName = this.state.name;\r\n    if (newName !== currentName) {\r\n      this.setPersistentState((state) => {\r\n        const projects = {...state.projects};\r\n        delete projects[newName];\r\n        if (currentName && !state.rename) {\r\n          const currentProject = {\r\n            dotSrc: this.state.dotSrc,\r\n            dotSrcLastChangeTime: state.dotSrcLastChangeTime,\r\n            svg: this.getSvgString(),\r\n          };\r\n          projects[currentName] = currentProject;\r\n        }\r\n        return {\r\n          projects: {\r\n            ...projects,\r\n          },\r\n          name: newName,\r\n          dotSrc: newDotSrc ? newDotSrc : (newName ? state.dotSrc : ''),\r\n          dotSrcLastChangeTime: newDotSrc ? Date.now() : state.dotSrcLastChangeTime,\r\n        };\r\n      });\r\n    }\r\n    this.handleSaveAsToBrowserClose();\r\n  }\r\n\r\n  handleEngineSelectChange = (engine) => {\r\n    this.setPersistentState({\r\n      engine: engine,\r\n    });\r\n  }\r\n\r\n  handleFitGraphSwitchChange = (fitGraph) => {\r\n    this.setPersistentState({\r\n      fitGraph: fitGraph,\r\n    });\r\n  }\r\n\r\n  handleTransitionDurationChange = (transitionDuration) => {\r\n    this.setPersistentState({\r\n      transitionDuration: transitionDuration,\r\n    });\r\n  }\r\n\r\n  handleTweenPathsSwitchChange = (tweenPaths) => {\r\n    this.setPersistentState({\r\n      tweenPaths: tweenPaths,\r\n    });\r\n  }\r\n\r\n  handleTweenShapesSwitchChange = (tweenShapes) => {\r\n    this.setPersistentState({\r\n      tweenShapes: tweenShapes,\r\n    });\r\n  }\r\n\r\n  handleTweenPrecisionChange = (tweenPrecision) => {\r\n    this.setPersistentState({\r\n      tweenPrecision: tweenPrecision,\r\n    });\r\n  }\r\n\r\n  handleHoldOffChange = (holdOff) => {\r\n    this.setPersistentState({\r\n      holdOff: holdOff,\r\n    });\r\n  }\r\n\r\n  handleFontSizeChange = (fontSize) => {\r\n    this.setPersistentState({\r\n      fontSize: fontSize,\r\n    });\r\n  }\r\n\r\n  handleTabSizeChange = (tabSize) => {\r\n    this.setPersistentState({\r\n      tabSize: tabSize,\r\n    });\r\n  }\r\n\r\n  handleNodeStyleChange = (style) => {\r\n    this.setPersistentState(state => ({\r\n      defaultNodeAttributes: {\r\n          ...state.defaultNodeAttributes,\r\n        style: style,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleNodeColorChange = (color) => {\r\n    this.setPersistentState(state => ({\r\n      defaultNodeAttributes: {\r\n          ...state.defaultNodeAttributes,\r\n        color: color,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleNodeFillColorChange = (color) => {\r\n    this.setPersistentState(state => ({\r\n      defaultNodeAttributes: {\r\n          ...state.defaultNodeAttributes,\r\n        fillcolor: color,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleEdgeStyleChange = (style) => {\r\n    this.setPersistentState(state => ({\r\n      defaultEdgeAttributes: {\r\n          ...state.defaultEdgeAttributes,\r\n        style: style,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleEdgeColorChange = (color) => {\r\n    this.setPersistentState(state => ({\r\n      defaultEdgeAttributes: {\r\n          ...state.defaultEdgeAttributes,\r\n        color: color,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleEdgeFillColorChange = (color) => {\r\n    this.setPersistentState(state => ({\r\n      defaultEdgeAttributes: {\r\n          ...state.defaultEdgeAttributes,\r\n        fillcolor: color,\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleKeyboardShortcutsClick = () => {\r\n    this.setState({\r\n      keyboardShortcutsDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleKeyboardShortcutsDialogClose = () => {\r\n    this.setState({\r\n      keyboardShortcutsDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleMouseOperationsClick = () => {\r\n    this.setState({\r\n      mouseOperationsDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleMouseOperationsDialogClose = () => {\r\n    this.setState({\r\n      mouseOperationsDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handleAboutClick = () => {\r\n    this.setState({\r\n      aboutDialogIsOpen: true,\r\n    });\r\n  }\r\n\r\n  handleAboutDialogClose = () => {\r\n    this.setState({\r\n      aboutDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  registerNodeShapeClick = (handleNodeShapeClick) => {\r\n    this.handleNodeShapeClick = handleNodeShapeClick;\r\n  }\r\n\r\n  registerNodeShapeDragStart = (handleNodeShapeDragStart) => {\r\n    this.handleNodeShapeDragStart = handleNodeShapeDragStart;\r\n  }\r\n\r\n  registerNodeShapeDragEnd = (handleNodeShapeDragEnd) => {\r\n    this.handleNodeShapeDragEnd = handleNodeShapeDragEnd;\r\n  }\r\n\r\n  handleZoomInButtonClick = () => {}\r\n  handleZoomOutButtonClick = () => {}\r\n  handleZoomOutMapButtonClick = () => {}\r\n  handleZoomResetButtonClick = () => {}\r\n\r\n  registerZoomInButtonClick = (handleZoomInButtonClick) => {\r\n    this.handleZoomInButtonClick = handleZoomInButtonClick;\r\n  }\r\n\r\n  registerZoomOutButtonClick = (handleZoomOutButtonClick) => {\r\n    this.handleZoomOutButtonClick = handleZoomOutButtonClick;\r\n  }\r\n\r\n  registerZoomOutMapButtonClick = (handleZoomOutMapButtonClick) => {\r\n    this.handleZoomOutMapButtonClick = handleZoomOutMapButtonClick;\r\n  }\r\n\r\n  registerZoomResetButtonClick = (handleZoomResetButtonClick) => {\r\n    this.handleZoomResetButtonClick = handleZoomResetButtonClick;\r\n  }\r\n\r\n  registerGetSvg = (getSvg) => {\r\n    this.getSvg = getSvg;\r\n  }\r\n\r\n  getSvgString() {\r\n    const svg = this.getSvg();\r\n    const serializer = new XMLSerializer();\r\n    return svg ? serializer.serializeToString(svg) : this.state.svg;\r\n  }\r\n\r\n  handleGraphComponentSelect = (components) => {\r\n    this.setState({\r\n      selectedGraphComponents: components,\r\n    });\r\n  }\r\n\r\n  handleGraphInitialized = () => {\r\n    this.setState({\r\n      graphInitialized: true,\r\n    });\r\n    this.setPersistentState({\r\n      svg: this.getSvgString(),\r\n    });\r\n  }\r\n\r\n  handleError = (error) => {\r\n    if (error) {\r\n      error.numLines = this.state.dotSrc.split('\\n').length;\r\n    }\r\n    if (JSON.stringify(error) !== JSON.stringify(this.state.error)) {\r\n      this.setState({\r\n        error: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  registerUndo = (undo) => {\r\n    this.undo = undo;\r\n  }\r\n\r\n  registerRedo = (redo) => {\r\n    this.redo = redo;\r\n  }\r\n\r\n  registerUndoReset = (resetUndoStack) => {\r\n    this.resetUndoStack = resetUndoStack;\r\n  }\r\n\r\n  handleTextEditorFocus = () => {\r\n    this.setFocus('TextEditor');\r\n  }\r\n\r\n  handleTextEditorBlur = () => {\r\n    // Needed when the user clicks outside of a pane,\r\n    // e.g. the app bar or the background\r\n    this.setFocusIfFocusIs('TextEditor', null);\r\n  }\r\n\r\n  handleGraphFocus = () => {\r\n    this.setFocus('Graph');\r\n  }\r\n\r\n  handleInsertPanelsClick = () => {\r\n    this.setFocus('InsertPanels');\r\n  }\r\n\r\n  handleNodeFormatDrawerClick = () => {\r\n    this.setFocusIf('nodeFormatDrawerIsOpen', 'NodeFormatDrawer', null)\r\n  }\r\n\r\n  handleEdgeFormatDrawerClick = () => {\r\n    this.setFocus('EdgeFormatDrawer');\r\n    this.setFocusIf('edgeFormatDrawerIsOpen', 'EdgeFormatDrawer', null)\r\n  }\r\n\r\n  handleUpdatedSnackbarClose = () => {\r\n    this.setState({ \"updatedSnackbarIsOpen\": false });\r\n    this.setPersistentState({\r\n      \"version\": packageJSON.version,\r\n      \"graphvizVersion\": this.state.graphvizVersion,\r\n    })\r\n  }\r\n\r\n  setFocus = (focusedPane) => {\r\n    this.setState((state) => (state.focusedPane !== focusedPane && {\r\n      focusedPane: focusedPane,\r\n    }) || null);\r\n  }\r\n\r\n  setFocusIfFocusIs = (currentlyFocusedPane, newFocusedPane) => {\r\n    this.setState((state) => (state.focusedPane === currentlyFocusedPane && {\r\n      focusedPane: newFocusedPane,\r\n    }) || null);\r\n  }\r\n\r\n  setFocusIf = (stateProperty, focusedPaneIf, focusedPaneElse) => {\r\n    this.setState((state) => {\r\n      const focusedPane = state[stateProperty] ? focusedPaneIf: focusedPaneElse;\r\n      return (state.focusedPane !== focusedPane && {\r\n        focusedPane: focusedPane,\r\n      }) || null;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const editorIsOpen = !this.state.nodeFormatDrawerIsOpen && !this.state.edgeFormatDrawerIsOpen;\r\n    const textEditorHasFocus = this.state.focusedPane === 'TextEditor';\r\n    const nodeFormatDrawerHasFocus = this.state.focusedPane === 'NodeFormatDrawer';\r\n    const edgeFormatDrawerHasFocus = this.state.focusedPane === 'EdgeFormatDrawer';\r\n    const insertPanelsHaveFocus = this.state.focusedPane === 'InsertPanels';\r\n    const graphHasFocus = this.state.focusedPane === 'Graph';\r\n    const leftPaneElevation = textEditorHasFocus || nodeFormatDrawerHasFocus || edgeFormatDrawerHasFocus? focusedElevation : defaultElevation;\r\n    const rightPaneElevation = graphHasFocus ? focusedElevation : defaultElevation;\r\n    const midPaneElevation = insertPanelsHaveFocus ? focusedElevation : defaultElevation;\r\n\r\n    var columns;\r\n    if (this.state.insertPanelsAreOpen && this.state.graphInitialized) {\r\n      columns = {\r\n        textEditor: 3,\r\n        insertPanels: 3,\r\n        graph: 6,\r\n      }\r\n    } else { /* browse */\r\n      columns = {\r\n        textEditor: 6,\r\n        insertPanels: false,\r\n        graph: 6,\r\n      }\r\n    }\r\n    const paperClass = this.state.updatedSnackbarIsOpen ? classes.paperWhenUpdatedSnackbarIsOpen : classes.paper;\r\n    return (\r\n      <div className={classes.root}>\r\n            <script src={process.env.PUBLIC_URL.replace(/\\.$/, '') + \"@hpcc-js/wasm/dist/index.min.js\"} type=\"javascript/worker\"></script>\r\n        <ButtonAppBar\r\n          hasUndo={this.state.hasUndo}\r\n          hasRedo={this.state.hasRedo}\r\n          onMenuButtonClick={this.handleMainMenuButtonClick}\r\n          onNewButtonClick={this.handleNewClick}\r\n          onUndoButtonClick={this.handleUndoButtonClick}\r\n          onRedoButtonClick={this.handleRedoButtonClick}\r\n          onInsertClick={this.handleInsertButtonClick}\r\n          onNodeFormatClick={this.handleNodeFormatButtonClick}\r\n          onEdgeFormatClick={this.handleEdgeFormatButtonClick}\r\n          onZoomInButtonClick={this.handleZoomInButtonClick}\r\n          onZoomOutButtonClick={this.handleZoomOutButtonClick}\r\n          onZoomOutMapButtonClick={this.handleZoomOutMapButtonClick}\r\n          onZoomResetButtonClick={this.handleZoomResetButtonClick}\r\n          onSettingsButtonClick={this.handleSettingsClick}\r\n          onOpenInBrowserButtonClick={this.handleOpenFromBrowserClick}\r\n          onSaveAltButtonClick={this.handleSaveAsToBrowserClick}\r\n          onHelpButtonClick={this.handleHelpButtonClick}\r\n        >\r\n        </ButtonAppBar>\r\n        {this.state.mainMenuIsOpen &&\r\n          <MainMenu\r\n            anchorEl={this.state.mainMenuAnchorEl}\r\n            onMenuClose={this.handleMainMenuClose}\r\n            onSettingsClick={this.handleSettingsClick}\r\n            onOpenFromBrowserClick={this.handleOpenFromBrowserClick}\r\n            onSaveAsToBrowserClick={this.handleSaveAsToBrowserClick}\r\n            onNewClick={this.handleNewClick}\r\n            onRenameClick={this.handleRenameClick}\r\n            onExportAsUrlClick={this.handleExportAsUrlClick}\r\n            onExportAsSvgClick={this.handleExportAsSvgClick}\r\n          />\r\n        }\r\n        {this.state.settingsDialogIsOpen &&\r\n          <SettingsDialog\r\n            engine={this.state.engine}\r\n            fitGraph={this.state.fitGraph}\r\n            transitionDuration={this.state.transitionDuration}\r\n            tweenPaths={this.state.tweenPaths}\r\n            tweenShapes={this.state.tweenShapes}\r\n            tweenPrecision={this.state.tweenPrecision}\r\n            onEngineSelectChange={this.handleEngineSelectChange}\r\n            onFitGraphSwitchChange={this.handleFitGraphSwitchChange}\r\n            onTransitionDurationChange={this.handleTransitionDurationChange}\r\n            onTweenPathsSwitchChange={this.handleTweenPathsSwitchChange}\r\n            onTweenShapesSwitchChange={this.handleTweenShapesSwitchChange}\r\n            onTweenPrecisionChange={this.handleTweenPrecisionChange}\r\n            holdOff={this.state.holdOff}\r\n            onHoldOffChange={this.handleHoldOffChange}\r\n            fontSize={this.state.fontSize}\r\n            onFontSizeChange={this.handleFontSizeChange}\r\n            tabSize={this.state.tabSize}\r\n            onTabSizeChange={this.handleTabSizeChange}\r\n            onSettingsClose={this.handleSettingsClose}\r\n          />\r\n        }\r\n        {this.state.openFromBrowserDialogIsOpen &&\r\n          <OpenFromBrowserDialog\r\n            projects={this.state.projects}\r\n            dotSrc={this.state.dotSrc}\r\n            dotSrcLastChangeTime={this.state.dotSrcLastChangeTime}\r\n            svg={this.getSvgString()}\r\n            name={this.state.name}\r\n            onOpen={this.handleOpenFromBrowser}\r\n            onClose={this.handleOpenFromBrowserClose}\r\n            onDelete={this.handleOpenFromBrowserDelete}\r\n          />\r\n        }\r\n        {this.state.saveToBrowserAsDialogIsOpen &&\r\n          <SaveAsToBrowserDialog\r\n            name={this.state.name}\r\n            rename={this.state.rename}\r\n            defaultNewName={this.state.name || this.createUntitledName(this.state.projects)}\r\n            projects={this.state.projects}\r\n            onSave={this.handleSaveAsToBrowser}\r\n            onClose={this.handleSaveAsToBrowserClose}\r\n          />\r\n        }\r\n        {this.state.exportAsUrlDialogIsOpen &&\r\n          <ExportAsUrlDialog\r\n            URL={window.location.href + '?' + qs_stringify({dot: this.state.dotSrc})}\r\n            onClose={this.handleExportAsUrlClose}\r\n          />\r\n        }\r\n        {this.state.exportAsSvgDialogIsOpen &&\r\n          <ExportAsSvgDialog\r\n            defaultFilename={(this.state.name || this.createUntitledName(this.state.projects)) + '.svg'}\r\n            getSvgString={this.getSvgString.bind(this)}\r\n            onClose={this.handleExportAsSvgClose}\r\n          />\r\n        }\r\n        {this.state.updatedSnackbarIsOpen &&\r\n          <UpdatedSnackbar\r\n            newGraphvizVersion={this.state.newGraphvizVersion}\r\n            graphvizVersion={this.state.graphvizVersion}\r\n            onUpdatedSnackbarClose={this.handleUpdatedSnackbarClose}\r\n          />\r\n        }\r\n        <Grid container\r\n          spacing={3}\r\n          style={{\r\n            margin: 0,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Grid item xs={columns.textEditor}>\r\n            <Paper elevation={leftPaneElevation} className={paperClass}>\r\n              {this.state.nodeFormatDrawerIsOpen &&\r\n                <FormatDrawer\r\n                  type='node'\r\n                  defaultAttributes={this.state.defaultNodeAttributes}\r\n                  onClick={this.handleNodeFormatDrawerClick}\r\n                  onFormatDrawerClose={this.handleNodeFormatDrawerClose}\r\n                  onStyleChange={this.handleNodeStyleChange}\r\n                  onColorChange={this.handleNodeColorChange}\r\n                  onFillColorChange={this.handleNodeFillColorChange}\r\n                />\r\n              }\r\n              {this.state.edgeFormatDrawerIsOpen &&\r\n                <FormatDrawer\r\n                  type='edge'\r\n                  defaultAttributes={this.state.defaultEdgeAttributes}\r\n                  onClick={this.handleEdgeFormatDrawerClick}\r\n                  onFormatDrawerClose={this.handleEdgeFormatDrawerClose}\r\n                  onStyleChange={this.handleEdgeStyleChange}\r\n                  onColorChange={this.handleEdgeColorChange}\r\n                  onFillColorChange={this.handleEdgeFillColorChange}\r\n                />\r\n              }\r\n              <div style={{display: editorIsOpen ? 'block' : 'none'}}>\r\n                <TextEditor\r\n                  // allocated viewport width - 2 * padding\r\n                  width={`calc(${columns.textEditor * 100 / 12}vw - 2 * 12px)`}\r\n                  // height={`calc(100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"})`}\r\n                  height={`calc((100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"} )/2)`}\r\n                  dotSrc={this.state.dotSrc}\r\n                  onTextChange={this.handleTextChange}\r\n                  onFocus={this.handleTextEditorFocus}\r\n                  onBlur={this.handleTextEditorBlur}\r\n                  error={this.state.error}\r\n                  selectedGraphComponents={this.state.selectedGraphComponents}\r\n                  holdOff={this.state.holdOff}\r\n                  fontSize={this.state.fontSize}\r\n                  tabSize={this.state.tabSize}\r\n                  registerUndo={this.registerUndo}\r\n                  registerRedo={this.registerRedo}\r\n                  registerUndoReset={this.registerUndoReset}\r\n                />\r\n              </div>\r\n              <div style={{display: editorIsOpen ? 'block' : 'none'}}>\r\n                <TextEditor\r\n                  // allocated viewport width - 2 * padding\r\n                  width={`calc(${columns.textEditor * 100 / 12}vw - 2 * 12px)`}\r\n                  // height={`calc(100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"})`}\r\n                  height={`calc((100vh - 64px - 2 * 12px - ${this.updatedSnackbarIsOpen ? \"64px\" : \"0px\"} )/2)`}\r\n                  dotSrc={this.state.dotSrc}\r\n                  onTextChange={this.handleTextChange}\r\n                  onFocus={this.handleTextEditorFocus}\r\n                  onBlur={this.handleTextEditorBlur}\r\n                  error={this.state.error}\r\n                  selectedGraphComponents={this.state.selectedGraphComponents}\r\n                  holdOff={this.state.holdOff}\r\n                  fontSize={this.state.fontSize}\r\n                  tabSize={this.state.tabSize}\r\n                  registerUndo={this.registerUndo}\r\n                  registerRedo={this.registerRedo}\r\n                  registerUndoReset={this.registerUndoReset}\r\n                />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          {this.state.insertPanelsAreOpen && this.state.graphInitialized && (\r\n            <Grid item xs={columns.insertPanels}>\r\n              <Paper elevation={midPaneElevation} className={paperClass}>\r\n                <InsertPanels\r\n                    onClick={this.handleInsertPanelsClick}\r\n                    onNodeShapeClick={this.handleNodeShapeClick}\r\n                    onNodeShapeDragStart={this.handleNodeShapeDragStart}\r\n                    onNodeShapeDragEnd={this.handleNodeShapeDragEnd}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={columns.graph}>\r\n            <Paper elevation={rightPaneElevation} className={paperClass}>\r\n              <Graph\r\n                hasFocus={graphHasFocus}\r\n                dotSrc={this.state.dotSrc}\r\n                engine={this.state.engine}\r\n                fit={this.state.fitGraph}\r\n                transitionDuration={this.state.transitionDuration}\r\n                tweenPaths={this.state.tweenPaths}\r\n                tweenShapes={this.state.tweenShapes}\r\n                tweenPrecision={this.state.tweenPrecision}\r\n                defaultNodeAttributes={this.state.defaultNodeAttributes}\r\n                defaultEdgeAttributes={this.state.defaultEdgeAttributes}\r\n                onFocus={this.handleGraphFocus}\r\n                onTextChange={this.handleTextChange}\r\n                onHelp={this.handleKeyboardShortcutsClick}\r\n                onSelect={this.handleGraphComponentSelect}\r\n                onUndo={this.undo}\r\n                onRedo={this.redo}\r\n                registerNodeShapeClick={this.registerNodeShapeClick}\r\n                registerNodeShapeDragStart={this.registerNodeShapeDragStart}\r\n                registerNodeShapeDragEnd={this.registerNodeShapeDragEnd}\r\n                registerZoomInButtonClick={this.registerZoomInButtonClick}\r\n                registerZoomOutButtonClick={this.registerZoomOutButtonClick}\r\n                registerZoomOutMapButtonClick={this.registerZoomOutMapButtonClick}\r\n                registerZoomResetButtonClick={this.registerZoomResetButtonClick}\r\n                registerGetSvg={this.registerGetSvg}\r\n                onInitialized={this.handleGraphInitialized}\r\n                onError={this.handleError}\r\n                test={this.state.test}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        {this.state.helpMenuIsOpen &&\r\n          <HelpMenu\r\n            anchorEl={this.state.helpMenuAnchorEl}\r\n            onMenuClose={this.handleHelpMenuClose}\r\n            onKeyboardShortcutsClick={this.handleKeyboardShortcutsClick}\r\n            onMouseOperationsClick={this.handleMouseOperationsClick}\r\n            onAboutClick={this.handleAboutClick}\r\n          />\r\n        }\r\n        {this.state.keyboardShortcutsDialogIsOpen &&\r\n          <KeyboardShortcutsDialog\r\n            onKeyboardShortcutsDialogClose={this.handleKeyboardShortcutsDialogClose}\r\n          />\r\n        }\r\n        {this.state.mouseOperationsDialogIsOpen &&\r\n          <MouseOperationsDialog\r\n            onMouseOperationsDialogClose={this.handleMouseOperationsDialogClose}\r\n          />\r\n        }\r\n        {this.state.aboutDialogIsOpen &&\r\n          <AboutDialog\r\n            graphvizVersion={this.state.graphvizVersion}\r\n            onAboutDialogClose={this.handleAboutDialogClose}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIndex.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(Index));"]},"metadata":{},"sourceType":"module"}