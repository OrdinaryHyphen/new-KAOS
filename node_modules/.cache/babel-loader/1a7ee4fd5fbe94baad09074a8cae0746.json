{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import ExpansionPanel from'@material-ui/core/ExpansionPanel';import ExpansionPanelDetails from'@material-ui/core/ExpansionPanelDetails';import ExpansionPanelSummary from'@material-ui/core/ExpansionPanelSummary';import Typography from'@material-ui/core/Typography';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import{shapes}from'./shapes';var nodeShapeCategories=[{name:'Basic shapes',shapes:[\"ellipse\",\"circle\",\"egg\",\"triangle\",\"box\",\"square\",\"plaintext\",\"plain\",\"diamond\",\"trapezium\",\"parallelogram\",\"house\",\"pentagon\",\"hexagon\",\"septagon\",\"octagon\"]},{name:'Basic symbols',shapes:[\"note\",\"tab\",\"folder\",\"box3d\",\"component\",\"underline\",\"cylinder\"]},{name:'Special shapes',shapes:[\"doublecircle\",\"invtriangle\",\"invtrapezium\",\"invhouse\",\"doubleoctagon\",\"tripleoctagon\",\"Mdiamond\",\"Msquare\",\"Mcircle\",\"star\"]},{name:'Gene expression symbols',shapes:[\"promoter\",\"cds\",\"terminator\",\"utr\",\"insulator\",\"ribosite\",\"rnastab\",\"proteasesite\",\"proteinstab\"]},{name:'DNA construction symbols',shapes:[\"primersite\",\"restrictionsite\",\"fivepoverhang\",\"threepoverhang\",\"noverhang\",\"assembly\",\"signature\",\"rpromoter\",\"larrow\",\"rarrow\",\"lpromoter\"]},{name:'Other shapes',shapes:[\"polygon\",\"oval\",\"point\",\"none\",\"rect\",\"rectangle\",\"record\",\"Mrecord\",\"(default)\"]}];var styles=function styles(theme){return{root:{width:'100%',overflowY:'auto',height:'calc(100vh - 64px - 2 * 12px)'},heading:{fontSize:theme.typography.pxToRem(15),flexShrink:0},columns:{flexWrap:'wrap',alignItems:'flex-start'},column:{flexBasis:'25%',flexGrow:'1',flexShrink:'0',textAlign:'start'}};};var InsertPanels=/*#__PURE__*/function(_React$Component){_inherits(InsertPanels,_React$Component);function InsertPanels(){var _getPrototypeOf2;var _this;_classCallCheck(this,InsertPanels);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(InsertPanels)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={expanded:null};_this.handleClick=function(){_this.props.onClick();};_this.handleChange=function(panel){return function(event,expanded){_this.setState({expanded:expanded?panel:false});};};_this.handleNodeShapeClick=function(shape){return function(event){event.stopPropagation();_this.props.onNodeShapeClick(event,shape);};};_this.handleNodeShapeDragStart=function(shape){return function(event){_this.props.onNodeShapeDragStart(event,shape);};};_this.handleNodeShapeDragEnd=function(shape){return function(event){_this.props.onNodeShapeDragEnd(event);};};return _this;}_createClass(InsertPanels,[{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;var expanded=this.state.expanded;return React.createElement(\"div\",{id:\"insert-panels\",className:classes.root,onClick:this.handleClick},nodeShapeCategories.map(function(nodeShapeCategory){return React.createElement(ExpansionPanel,{key:nodeShapeCategory.name,expanded:expanded===nodeShapeCategory,onChange:_this2.handleChange(nodeShapeCategory)},React.createElement(ExpansionPanelSummary,{expandIcon:React.createElement(ExpandMoreIcon,null)},React.createElement(Typography,{className:classes.heading},nodeShapeCategory.name)),React.createElement(ExpansionPanelDetails,{className:classes.columns},nodeShapeCategory.shapes.map(function(shape){return React.createElement(\"div\",{id:shape,dangerouslySetInnerHTML:{__html:shapes[shape]},key:shape,className:classes.column,onClick:_this2.handleNodeShapeClick(shape),draggable:\"true\",onDragStart:_this2.handleNodeShapeDragStart(shape),onDragEnd:_this2.handleNodeShapeDragEnd(shape)});})));}));}}]);return InsertPanels;}(React.Component);export default withStyles(styles)(InsertPanels);","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/InsertPanels.js"],"names":["React","withStyles","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Typography","ExpandMoreIcon","shapes","nodeShapeCategories","name","styles","theme","root","width","overflowY","height","heading","fontSize","typography","pxToRem","flexShrink","columns","flexWrap","alignItems","column","flexBasis","flexGrow","textAlign","InsertPanels","state","expanded","handleClick","props","onClick","handleChange","panel","event","setState","handleNodeShapeClick","shape","stopPropagation","onNodeShapeClick","handleNodeShapeDragStart","onNodeShapeDragStart","handleNodeShapeDragEnd","onNodeShapeDragEnd","classes","map","nodeShapeCategory","__html","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {shapes} from './shapes';\r\n\r\nconst nodeShapeCategories = [\r\n  {\r\n    name: 'Basic shapes',\r\n    shapes: [\r\n      \"ellipse\",\r\n      \"circle\",\r\n      \"egg\",\r\n      \"triangle\",\r\n      \"box\",\r\n      \"square\",\r\n      \"plaintext\",\r\n      \"plain\",\r\n      \"diamond\",\r\n      \"trapezium\",\r\n      \"parallelogram\",\r\n      \"house\",\r\n      \"pentagon\",\r\n      \"hexagon\",\r\n      \"septagon\",\r\n      \"octagon\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Basic symbols',\r\n    shapes: [\r\n      \"note\",\r\n      \"tab\",\r\n      \"folder\",\r\n      \"box3d\",\r\n      \"component\",\r\n      \"underline\",\r\n      \"cylinder\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Special shapes',\r\n    shapes: [\r\n      \"doublecircle\",\r\n      \"invtriangle\",\r\n      \"invtrapezium\",\r\n      \"invhouse\",\r\n      \"doubleoctagon\",\r\n      \"tripleoctagon\",\r\n      \"Mdiamond\",\r\n      \"Msquare\",\r\n      \"Mcircle\",\r\n      \"star\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Gene expression symbols',\r\n    shapes: [\r\n      \"promoter\",\r\n      \"cds\",\r\n      \"terminator\",\r\n      \"utr\",\r\n      \"insulator\",\r\n      \"ribosite\",\r\n      \"rnastab\",\r\n      \"proteasesite\",\r\n      \"proteinstab\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'DNA construction symbols',\r\n    shapes: [\r\n      \"primersite\",\r\n      \"restrictionsite\",\r\n      \"fivepoverhang\",\r\n      \"threepoverhang\",\r\n      \"noverhang\",\r\n      \"assembly\",\r\n      \"signature\",\r\n      \"rpromoter\",\r\n      \"larrow\",\r\n      \"rarrow\",\r\n      \"lpromoter\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Other shapes',\r\n    shapes: [\r\n      \"polygon\",\r\n      \"oval\",\r\n      \"point\",\r\n      \"none\",\r\n      \"rect\",\r\n      \"rectangle\",\r\n      \"record\",\r\n      \"Mrecord\",\r\n      \"(default)\",\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    overflowY: 'auto',\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexShrink: 0,\r\n  },\r\n  columns: {\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-start',\r\n  },\r\n  column: {\r\n    flexBasis: '25%',\r\n    flexGrow: '1',\r\n    flexShrink: '0',\r\n    textAlign: 'start',\r\n  },\r\n});\r\n\r\nclass InsertPanels extends React.Component {\r\n  state = {\r\n    expanded: null,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  handleNodeShapeClick = shape => (event) => {\r\n    event.stopPropagation();\r\n    this.props.onNodeShapeClick(event, shape);\r\n  };\r\n\r\n  handleNodeShapeDragStart = shape => (event) => {\r\n    this.props.onNodeShapeDragStart(event, shape);\r\n  };\r\n\r\n  handleNodeShapeDragEnd = shape => (event) => {\r\n    this.props.onNodeShapeDragEnd(event);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n\r\n    return (\r\n      <div id=\"insert-panels\" className={classes.root} onClick={this.handleClick}>\r\n        {nodeShapeCategories.map((nodeShapeCategory) =>\r\n          <ExpansionPanel\r\n            key={nodeShapeCategory.name}\r\n            expanded={expanded === nodeShapeCategory}\r\n            onChange={this.handleChange(nodeShapeCategory)}\r\n          >\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography className={classes.heading}>{nodeShapeCategory.name}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className={classes.columns}>\r\n              {nodeShapeCategory.shapes.map((shape) =>\r\n                <div\r\n                  id={shape}\r\n                  dangerouslySetInnerHTML={{__html: shapes[shape]}}\r\n                  key={shape}\r\n                  className={classes.column}\r\n                  onClick={this.handleNodeShapeClick(shape)}\r\n                  draggable=\"true\"\r\n                  onDragStart={this.handleNodeShapeDragStart(shape)}\r\n                  onDragEnd={this.handleNodeShapeDragEnd(shape)}\r\n                >\r\n                </div>\r\n              )}\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInsertPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InsertPanels);\r\n"]},"metadata":{},"sourceType":"module"}