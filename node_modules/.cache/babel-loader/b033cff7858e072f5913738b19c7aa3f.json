{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import withRoot from'./withRoot';import CloseIcon from'@material-ui/icons/Close';import IconButton from'@material-ui/core/IconButton';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import DialogActions from'@material-ui/core/DialogActions';import Input from'@material-ui/core/Input';var styles=function styles(theme){return{title:{display:'flex',justifyContent:'space-between'},content:{overflowY:'visible'}};};var ExportAsSvgDialog=/*#__PURE__*/function(_React$Component){_inherits(ExportAsSvgDialog,_React$Component);function ExportAsSvgDialog(props){var _this;_classCallCheck(this,ExportAsSvgDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(ExportAsSvgDialog).call(this,props));_this.handleClose=function(){_this.props.onClose();};_this.handleExportSvg=function(){// TODO: move downloadFile function to a utility module\nfunction downloadFile(fileData,fileName,mimeType){var fileBlob=new Blob([fileData],{type:mimeType});var fileObjectURL=window.URL.createObjectURL(fileBlob);var tempLink=document.createElement('a');tempLink.href=fileObjectURL;tempLink.download=fileName;document.body.appendChild(tempLink);tempLink.click();document.body.removeChild(tempLink);}var fileData=_this.props.getSvgString();var fileName=_this.state.filename;var mimeType='image/svg+xml';downloadFile(fileData,fileName,mimeType);_this.props.onClose();};_this.handleChange=function(event){_this.setState({filename:event.target.value});};_this.state={filename:props.defaultFilename};return _this;}_createClass(ExportAsSvgDialog,[{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(\"div\",null,React.createElement(Dialog,{id:\"export-graph-as-svg-dialog\",className:classes.root,open:true,onClose:this.handleClose,\"aria-labelledby\":\"form-dialog-title\"},React.createElement(\"div\",{className:classes.title},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Export Graph as SVG\"),React.createElement(IconButton,{\"aria-label\":\"Close\",onClick:this.handleClose},React.createElement(CloseIcon,null))),React.createElement(DialogContent,{classes:{root:classes.content}},React.createElement(DialogContentText,null,\"Choose a name for the exported SVG file\"),React.createElement(\"br\",null),React.createElement(Input,{inputProps:{size:60},autoFocus:true,id:\"export\",type:\"text\",value:this.state.filename,onChange:this.handleChange})),React.createElement(DialogActions,null,React.createElement(Button,{id:\"cancel\",onClick:this.handleClose,color:\"secondary\"},\"Cancel\"),React.createElement(Button,{id:\"export-svg\",onClick:this.handleExportSvg,color:\"secondary\",variant:\"contained\"},\"Export SVG\"))));}}]);return ExportAsSvgDialog;}(React.Component);export default withRoot(withStyles(styles)(ExportAsSvgDialog));","map":{"version":3,"sources":["C:/Users/user/graphviz-visual-editor/src/ExportAsSvgDialog.js"],"names":["React","withStyles","withRoot","CloseIcon","IconButton","Button","Dialog","DialogContent","DialogContentText","DialogTitle","DialogActions","Input","styles","theme","title","display","justifyContent","content","overflowY","ExportAsSvgDialog","props","handleClose","onClose","handleExportSvg","downloadFile","fileData","fileName","mimeType","fileBlob","Blob","type","fileObjectURL","window","URL","createObjectURL","tempLink","document","createElement","href","download","body","appendChild","click","removeChild","getSvgString","state","filename","handleChange","event","setState","target","value","defaultFilename","classes","root","size","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  content: {\r\n    overflowY: 'visible',\r\n  },\r\n});\r\n\r\nclass ExportAsSvgDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filename: props.defaultFilename,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleExportSvg = () => {\r\n    // TODO: move downloadFile function to a utility module\r\n    function downloadFile(fileData, fileName, mimeType) {\r\n      const fileBlob = new Blob([fileData], {type: mimeType})\r\n      const fileObjectURL = window.URL.createObjectURL(fileBlob)\r\n      const tempLink = document.createElement('a')\r\n      tempLink.href = fileObjectURL\r\n      tempLink.download = fileName\r\n      document.body.appendChild(tempLink)\r\n      tempLink.click()\r\n      document.body.removeChild(tempLink)\r\n    }\r\n    const fileData = this.props.getSvgString()\r\n    const fileName = this.state.filename\r\n    const mimeType = 'image/svg+xml'\r\n    downloadFile(fileData, fileName, mimeType)\r\n    this.props.onClose()\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      filename: event.target.value\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          id=\"export-graph-as-svg-dialog\"\r\n          className={classes.root}\r\n          open\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Export Graph as SVG\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent classes={{root: classes.content}}>\r\n            <DialogContentText>\r\n              Choose a name for the exported SVG file\r\n            </DialogContentText>\r\n            <br/>\r\n            <Input\r\n              inputProps={{\r\n                size: 60,\r\n              }}\r\n              autoFocus\r\n              id=\"export\"\r\n              type=\"text\"\r\n              value={this.state.filename}\r\n              onChange={this.handleChange}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button id=\"cancel\" onClick={this.handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button id=\"export-svg\" onClick={this.handleExportSvg} color=\"secondary\" variant=\"contained\">\r\n              Export SVG\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExportAsSvgDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  defaultFilename: PropTypes.string.isRequired,\r\n  getSvgString: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(ExportAsSvgDialog));\r\n"]},"metadata":{},"sourceType":"module"}