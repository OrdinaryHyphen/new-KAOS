{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\\\u03BD-KAOS\\\\src\\\\ExportAsUrlDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  content: {\n    overflowY: 'visible'\n  }\n});\n\nclass ExportAsUrlDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.onClose();\n    };\n\n    this.handleCopy = () => {\n      this.input.select();\n      document.execCommand('copy');\n    };\n\n    this.handleOpen = () => {\n      window.open(this.props.URL);\n    };\n\n    this.state = {\n      doYouWantToReplaceItDialogIsOpen: false\n    };\n    this.name = this.props.defaultNewName;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      id: \"export-graph-as-url-dialog\",\n      className: classes.root,\n      open: true,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Export graph as URL\"), React.createElement(IconButton, {\n      \"aria-label\": \"Close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      classes: {\n        root: classes.content\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"The URL below is a link to the application with the DOT source code as an URL parameter. It can be used to share graphs with others.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputRef: input => {\n        this.input = input;\n      },\n      inputProps: {\n        size: 60\n      },\n      autoFocus: true,\n      id: \"export\",\n      type: \"text\",\n      value: this.props.URL,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Button, {\n      id: \"copy\",\n      variant: \"text\",\n      size: \"medium\",\n      color: \"secondary\",\n      \"aria-label\": \"Copy\",\n      onClick: this.handleCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(LinkIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"Copy\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"cancel\",\n      onClick: this.handleClose,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      id: \"open-link\",\n      onClick: this.handleOpen,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Open link\"))));\n  }\n\n}\n\nExportAsUrlDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  URL: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default withRoot(withStyles(styles)(ExportAsUrlDialog));","map":{"version":3,"sources":["C:/Users/user/Î½-KAOS/src/ExportAsUrlDialog.js"],"names":["React","PropTypes","withStyles","withRoot","CloseIcon","LinkIcon","IconButton","Button","Dialog","DialogContent","DialogContentText","DialogTitle","DialogActions","Input","styles","theme","title","display","justifyContent","content","overflowY","ExportAsUrlDialog","Component","constructor","props","handleClose","onClose","handleCopy","input","select","document","execCommand","handleOpen","window","open","URL","state","doYouWantToReplaceItDialogIsOpen","name","defaultNewName","render","classes","root","size","propTypes","object","isRequired","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  content: {\r\n    overflowY: 'visible',\r\n  },\r\n});\r\n\r\nclass ExportAsUrlDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      doYouWantToReplaceItDialogIsOpen: false,\r\n    };\r\n    this.name = this.props.defaultNewName;\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleCopy = () => {\r\n    this.input.select();\r\n    document.execCommand('copy');\r\n  };\r\n\r\n  handleOpen = () => {\r\n    window.open(this.props.URL);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          id=\"export-graph-as-url-dialog\"\r\n          className={classes.root}\r\n          open\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Export graph as URL\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent classes={{root: classes.content}}>\r\n            <DialogContentText>\r\n              The URL below is a link to the application with the DOT source code as an URL parameter. It can be used to share graphs with others.\r\n            </DialogContentText>\r\n            <br/>\r\n            <Input\r\n              inputRef={(input) => {this.input = input}}\r\n              inputProps={{\r\n                size: 60,\r\n              }}\r\n              autoFocus\r\n              id=\"export\"\r\n              type=\"text\"\r\n              value={this.props.URL}\r\n              readOnly\r\n            />\r\n            <Button\r\n              id=\"copy\"\r\n              variant='text'\r\n              size='medium'\r\n              color=\"secondary\"\r\n              aria-label=\"Copy\"\r\n              onClick={this.handleCopy}\r\n            >\r\n              <LinkIcon />\r\n              Copy\r\n            </Button>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button id=\"cancel\" onClick={this.handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button id=\"open-link\" onClick={this.handleOpen} color=\"secondary\">\r\n              Open link\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExportAsUrlDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  URL: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(ExportAsUrlDialog));\r\n"]},"metadata":{},"sourceType":"module"}