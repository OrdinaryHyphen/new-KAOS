{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import withRoot from'./withRoot';import IconButton from'@material-ui/core/IconButton';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import CloseIcon from'@material-ui/icons/Close';var mouseOperations=[{key:'Mouse wheel',description:'Zoom in or out.'},{key:'Double-click the canvas',description:'Zoom in.'},{key:'Ctrl-drag the canvas',description:'Pan the graph.'},{key:'Click a node or an edge',description:'Select the node or an edge.'},{key:'Shift/Ctrl-click a node or an edge',description:'Add the node or an edge to selection.'},{key:'Drag the canvas',description:'Select the nodes and edges within the dragged area.'},{key:'Shift-drag the canvas',description:'Add the nodes and edges within the dragged area to the selection.'},{key:'Right-click a node',description:'Start drawing an edge from the node.'},{key:'Double-click a node',description:'Connect the edge being drawn to the node.'},{key:'Middle-click the canvas',description:'Insert a node with the latest used shape and attributes.'},{key:'Shift-middle-click the canvas',description:'Insert a node with the latest inserted shape and default attributes.'},{key:'Click an insert shape',description:'Insert a node from the insert panel with default attributes.'},{key:'Drag-and-drop an insert shape',description:'Insert a node from the insert panel with default attributes.'}];var styles=function styles(theme){return{title:{display:'flex',justifyContent:'space-between'}};};var MouseOperationsDialog=/*#__PURE__*/function(_React$Component){_inherits(MouseOperationsDialog,_React$Component);function MouseOperationsDialog(){var _getPrototypeOf2;var _this;_classCallCheck(this,MouseOperationsDialog);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MouseOperationsDialog)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleClose=function(){_this.props.onMouseOperationsDialogClose();};return _this;}_createClass(MouseOperationsDialog,[{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(\"div\",null,React.createElement(Dialog,{id:\"mouse-operations-dialog\",open:true,onClose:this.handleClose,scroll:'paper',\"aria-labelledby\":\"form-dialog-title\"},React.createElement(\"div\",{className:classes.title},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Mouse operations in the graph\"),React.createElement(IconButton,{id:\"close-button\",\"aria-label\":\"Close\",onClick:this.handleClose},React.createElement(CloseIcon,null))),React.createElement(DialogContent,null,React.createElement(Table,{className:classes.table},React.createElement(TableBody,null,mouseOperations.map(function(mouseOperation){return React.createElement(TableRow,{key:mouseOperation.key},React.createElement(TableCell,{component:\"th\",scope:\"row\",padding:\"none\"},mouseOperation.key),React.createElement(TableCell,{size:\"small\"},mouseOperation.description));}))))));}}]);return MouseOperationsDialog;}(React.Component);export default withRoot(withStyles(styles)(MouseOperationsDialog));","map":{"version":3,"sources":["C:/Users/user/graphviz-visual-editor/src/MouseOperationsDialog.js"],"names":["React","withStyles","withRoot","IconButton","Dialog","DialogContent","DialogTitle","Table","TableBody","TableCell","TableRow","CloseIcon","mouseOperations","key","description","styles","theme","title","display","justifyContent","MouseOperationsDialog","handleClose","props","onMouseOperationsDialogClose","classes","table","map","mouseOperation","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst mouseOperations = [\r\n  {key: 'Mouse wheel', description: 'Zoom in or out.'},\r\n  {key: 'Double-click the canvas', description: 'Zoom in.'},\r\n  {key: 'Ctrl-drag the canvas', description: 'Pan the graph.'},\r\n  {key: 'Click a node or an edge', description: 'Select the node or an edge.'},\r\n  {key: 'Shift/Ctrl-click a node or an edge', description: 'Add the node or an edge to selection.'},\r\n  {key: 'Drag the canvas', description: 'Select the nodes and edges within the dragged area.'},\r\n  {key: 'Shift-drag the canvas', description: 'Add the nodes and edges within the dragged area to the selection.'},\r\n  {key: 'Right-click a node', description: 'Start drawing an edge from the node.'},\r\n  {key: 'Double-click a node', description: 'Connect the edge being drawn to the node.'},\r\n  {key: 'Middle-click the canvas', description: 'Insert a node with the latest used shape and attributes.'},\r\n  {key: 'Shift-middle-click the canvas', description: 'Insert a node with the latest inserted shape and default attributes.'},\r\n  {key: 'Click an insert shape', description: 'Insert a node from the insert panel with default attributes.'},\r\n  {key: 'Drag-and-drop an insert shape', description: 'Insert a node from the insert panel with default attributes.'},\r\n];\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nclass MouseOperationsDialog extends React.Component {\r\n\r\n  handleClose = () => {\r\n    this.props.onMouseOperationsDialogClose();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog id=\"mouse-operations-dialog\"\r\n          open\r\n          onClose={this.handleClose}\r\n          scroll={'paper'}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">Mouse operations in the graph</DialogTitle>\r\n            <IconButton\r\n              id=\"close-button\"\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Table className={classes.table}>\r\n              <TableBody>\r\n                {mouseOperations.map(mouseOperation => {\r\n                  return (\r\n                    <TableRow key={mouseOperation.key}>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {mouseOperation.key}\r\n                      </TableCell>\r\n                      <TableCell size=\"small\">\r\n                        {mouseOperation.description}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMouseOperationsDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(MouseOperationsDialog));\r\n"]},"metadata":{},"sourceType":"module"}