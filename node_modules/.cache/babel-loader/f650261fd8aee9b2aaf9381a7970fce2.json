{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\\\u03BD-KAOS\\\\src\\\\InsertPanels.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { shapes } from './shapes';\nconst nodeShapeCategories = [{\n  name: 'Basic shapes',\n  shapes: [\"ellipse\", \"circle\", \"egg\", \"triangle\", \"box\", \"square\", \"plaintext\", \"plain\", \"diamond\", \"trapezium\", \"parallelogram\", \"house\", \"pentagon\", \"hexagon\", \"septagon\", \"octagon\"]\n}, {\n  name: 'Basic symbols',\n  shapes: [\"note\", \"tab\", \"folder\", \"box3d\", \"component\", \"underline\", \"cylinder\"]\n}, {\n  name: 'Special shapes',\n  shapes: [\"doublecircle\", \"invtriangle\", \"invtrapezium\", \"invhouse\", \"doubleoctagon\", \"tripleoctagon\", \"Mdiamond\", \"Msquare\", \"Mcircle\", \"star\"]\n}, {\n  name: 'Gene expression symbols',\n  shapes: [\"promoter\", \"cds\", \"terminator\", \"utr\", \"insulator\", \"ribosite\", \"rnastab\", \"proteasesite\", \"proteinstab\"]\n}, {\n  name: 'DNA construction symbols',\n  shapes: [\"primersite\", \"restrictionsite\", \"fivepoverhang\", \"threepoverhang\", \"noverhang\", \"assembly\", \"signature\", \"rpromoter\", \"larrow\", \"rarrow\", \"lpromoter\"]\n}, {\n  name: 'Other shapes',\n  shapes: [\"polygon\", \"oval\", \"point\", \"none\", \"rect\", \"rectangle\", \"record\", \"Mrecord\", \"(default)\"]\n}];\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowY: 'auto',\n    height: 'calc(100vh - 64px - 2 * 12px)'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexShrink: 0\n  },\n  columns: {\n    flexWrap: 'wrap',\n    alignItems: 'flex-start'\n  },\n  column: {\n    flexBasis: '25%',\n    flexGrow: '1',\n    flexShrink: '0',\n    textAlign: 'start'\n  }\n});\n\nclass InsertPanels extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expanded: null\n    };\n\n    this.handleClick = () => {\n      this.props.onClick();\n    };\n\n    this.handleChange = panel => (event, expanded) => {\n      this.setState({\n        expanded: expanded ? panel : false\n      });\n    };\n\n    this.handleNodeShapeClick = shape => event => {\n      event.stopPropagation();\n      this.props.onNodeShapeClick(event, shape);\n    };\n\n    this.handleNodeShapeDragStart = shape => event => {\n      this.props.onNodeShapeDragStart(event, shape);\n    };\n\n    this.handleNodeShapeDragEnd = shape => event => {\n      this.props.onNodeShapeDragEnd(event);\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const expanded = this.state.expanded;\n    return React.createElement(\"div\", {\n      id: \"insert-panels\",\n      className: classes.root,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, nodeShapeCategories.map(nodeShapeCategory => React.createElement(ExpansionPanel, {\n      key: nodeShapeCategory.name,\n      expanded: expanded === nodeShapeCategory,\n      onChange: this.handleChange(nodeShapeCategory),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, nodeShapeCategory.name)), React.createElement(ExpansionPanelDetails, {\n      className: classes.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, nodeShapeCategory.shapes.map(shape => React.createElement(\"div\", {\n      id: shape,\n      dangerouslySetInnerHTML: {\n        __html: shapes[shape]\n      },\n      key: shape,\n      className: classes.column,\n      onClick: this.handleNodeShapeClick(shape),\n      draggable: \"true\",\n      onDragStart: this.handleNodeShapeDragStart(shape),\n      onDragEnd: this.handleNodeShapeDragEnd(shape),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nInsertPanels.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(InsertPanels);","map":{"version":3,"sources":["C:/Users/user/Î½-KAOS/src/InsertPanels.js"],"names":["React","PropTypes","withStyles","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Typography","ExpandMoreIcon","shapes","nodeShapeCategories","name","styles","theme","root","width","overflowY","height","heading","fontSize","typography","pxToRem","flexShrink","columns","flexWrap","alignItems","column","flexBasis","flexGrow","textAlign","InsertPanels","Component","state","expanded","handleClick","props","onClick","handleChange","panel","event","setState","handleNodeShapeClick","shape","stopPropagation","onNodeShapeClick","handleNodeShapeDragStart","onNodeShapeDragStart","handleNodeShapeDragEnd","onNodeShapeDragEnd","render","classes","map","nodeShapeCategory","__html","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {shapes} from './shapes';\r\n\r\nconst nodeShapeCategories = [\r\n  {\r\n    name: 'Basic shapes',\r\n    shapes: [\r\n      \"ellipse\",\r\n      \"circle\",\r\n      \"egg\",\r\n      \"triangle\",\r\n      \"box\",\r\n      \"square\",\r\n      \"plaintext\",\r\n      \"plain\",\r\n      \"diamond\",\r\n      \"trapezium\",\r\n      \"parallelogram\",\r\n      \"house\",\r\n      \"pentagon\",\r\n      \"hexagon\",\r\n      \"septagon\",\r\n      \"octagon\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Basic symbols',\r\n    shapes: [\r\n      \"note\",\r\n      \"tab\",\r\n      \"folder\",\r\n      \"box3d\",\r\n      \"component\",\r\n      \"underline\",\r\n      \"cylinder\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Special shapes',\r\n    shapes: [\r\n      \"doublecircle\",\r\n      \"invtriangle\",\r\n      \"invtrapezium\",\r\n      \"invhouse\",\r\n      \"doubleoctagon\",\r\n      \"tripleoctagon\",\r\n      \"Mdiamond\",\r\n      \"Msquare\",\r\n      \"Mcircle\",\r\n      \"star\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Gene expression symbols',\r\n    shapes: [\r\n      \"promoter\",\r\n      \"cds\",\r\n      \"terminator\",\r\n      \"utr\",\r\n      \"insulator\",\r\n      \"ribosite\",\r\n      \"rnastab\",\r\n      \"proteasesite\",\r\n      \"proteinstab\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'DNA construction symbols',\r\n    shapes: [\r\n      \"primersite\",\r\n      \"restrictionsite\",\r\n      \"fivepoverhang\",\r\n      \"threepoverhang\",\r\n      \"noverhang\",\r\n      \"assembly\",\r\n      \"signature\",\r\n      \"rpromoter\",\r\n      \"larrow\",\r\n      \"rarrow\",\r\n      \"lpromoter\",\r\n    ],\r\n  },\r\n  {\r\n    name: 'Other shapes',\r\n    shapes: [\r\n      \"polygon\",\r\n      \"oval\",\r\n      \"point\",\r\n      \"none\",\r\n      \"rect\",\r\n      \"rectangle\",\r\n      \"record\",\r\n      \"Mrecord\",\r\n      \"(default)\",\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    overflowY: 'auto',\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexShrink: 0,\r\n  },\r\n  columns: {\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-start',\r\n  },\r\n  column: {\r\n    flexBasis: '25%',\r\n    flexGrow: '1',\r\n    flexShrink: '0',\r\n    textAlign: 'start',\r\n  },\r\n});\r\n\r\nclass InsertPanels extends React.Component {\r\n  state = {\r\n    expanded: null,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  handleNodeShapeClick = shape => (event) => {\r\n    event.stopPropagation();\r\n    this.props.onNodeShapeClick(event, shape);\r\n  };\r\n\r\n  handleNodeShapeDragStart = shape => (event) => {\r\n    this.props.onNodeShapeDragStart(event, shape);\r\n  };\r\n\r\n  handleNodeShapeDragEnd = shape => (event) => {\r\n    this.props.onNodeShapeDragEnd(event);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n\r\n    return (\r\n      <div id=\"insert-panels\" className={classes.root} onClick={this.handleClick}>\r\n        {nodeShapeCategories.map((nodeShapeCategory) =>\r\n          <ExpansionPanel\r\n            key={nodeShapeCategory.name}\r\n            expanded={expanded === nodeShapeCategory}\r\n            onChange={this.handleChange(nodeShapeCategory)}\r\n          >\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography className={classes.heading}>{nodeShapeCategory.name}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className={classes.columns}>\r\n              {nodeShapeCategory.shapes.map((shape) =>\r\n                <div\r\n                  id={shape}\r\n                  dangerouslySetInnerHTML={{__html: shapes[shape]}}\r\n                  key={shape}\r\n                  className={classes.column}\r\n                  onClick={this.handleNodeShapeClick(shape)}\r\n                  draggable=\"true\"\r\n                  onDragStart={this.handleNodeShapeDragStart(shape)}\r\n                  onDragEnd={this.handleNodeShapeDragEnd(shape)}\r\n                >\r\n                </div>\r\n              )}\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInsertPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InsertPanels);\r\n"]},"metadata":{},"sourceType":"module"}