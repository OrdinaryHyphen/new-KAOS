{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"@hpcc-js/wasm\"] = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _mergeNamespaces(n, m) {\n    m.forEach(function (e) {\n      e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n        if (k !== 'default' && !(k in n)) {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function get() {\n              return e[k];\n            }\n          });\n        }\n      });\n    });\n    return Object.freeze(n);\n  }\n\n  var expatlib$2 = {\n    exports: {}\n  };\n\n  (function (module, exports) {\n    var cpp = function () {\n      var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n      return function (cpp) {\n        cpp = cpp || {};\n        var Module = typeof cpp !== \"undefined\" ? cpp : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function (resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n\n        var thisProgram = \"./this.program\";\n        var ENVIRONMENT_IS_WEB = true;\n        var scriptDirectory = \"\";\n\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n\n          return scriptDirectory + path;\n        }\n\n        var read_, readAsync, readBinary;\n        {\n          if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n\n          {\n            read_ = function read_(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n\n            readAsync = function readAsync(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n\n              xhr.onload = function () {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n\n                onerror();\n              };\n\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n\n        moduleOverrides = null;\n        if (Module[\"arguments\"]) ;\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"]) ;\n        var wasmBinary;\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        Module[\"noExitRuntime\"] || true;\n\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n\n        var wasmMemory;\n        var ABORT = false;\n\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n\n          while (heap[endPtr] && !(endPtr >= endIdx)) {\n            ++endPtr;\n          }\n\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n          } else {\n            var str = \"\";\n\n            while (idx < endPtr) {\n              var u0 = heap[idx++];\n\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n\n              var u1 = heap[idx++] & 63;\n\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n\n              var u2 = heap[idx++] & 63;\n\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n              }\n\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n\n          return str;\n        }\n\n        function UTF8ToString(ptr, maxBytesToRead) {\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          if (!(maxBytesToWrite > 0)) return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n\n            if (u <= 127) {\n              if (outIdx >= endIdx) break;\n              heap[outIdx++] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx) break;\n              heap[outIdx++] = 192 | u >> 6;\n              heap[outIdx++] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx) break;\n              heap[outIdx++] = 224 | u >> 12;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx) break;\n              heap[outIdx++] = 240 | u >> 18;\n              heap[outIdx++] = 128 | u >> 12 & 63;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            }\n          }\n\n          heap[outIdx] = 0;\n          return outIdx - startIdx;\n        }\n\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n\n        function lengthBytesUTF8(str) {\n          var len = 0;\n\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n          }\n\n          return len;\n        }\n\n        function writeAsciiToMemory(str, buffer, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n          }\n\n          if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n        }\n\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n\n          return x;\n        }\n\n        var buffer, HEAP8, HEAPU8, HEAP32, HEAPF64;\n\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n\n        Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATPOSTRUN__ = [];\n\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n\n        function initRuntime() {\n          if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATINIT__);\n        }\n\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n\n        var runDependencies = 0;\n        var dependenciesFulfilled = null;\n\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n\n        function addRunDependency(id) {\n          runDependencies++;\n\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n\n        function removeRunDependency(id) {\n          runDependencies--;\n\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n\n          if (runDependencies == 0) {\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n\n        function abort(what) {\n          {\n            if (Module[\"onAbort\"]) {\n              Module[\"onAbort\"](what);\n            }\n          }\n          what = \"Aborted(\" + what + \")\";\n          err(what);\n          ABORT = true;\n          what += \". Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n\n        var wasmBinaryFile;\n        wasmBinaryFile = \"expatlib.wasm\";\n\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n\n            if (readBinary) ;else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err) {\n            abort(err);\n          }\n        }\n\n        function getBinaryPromise() {\n          if (!wasmBinary && ENVIRONMENT_IS_WEB) {\n            if (typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n              }).then(function (response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n\n                return response[\"arrayBuffer\"]();\n              }).catch(function () {\n                return getBinary(wasmBinaryFile);\n              });\n            }\n          }\n\n          return Promise.resolve().then(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n\n        function createWasm() {\n          var info = {\n            \"a\": asmLibraryArg\n          };\n\n          function receiveInstance(instance, module) {\n            var exports = instance.exports;\n            Module[\"asm\"] = exports;\n            wasmMemory = Module[\"asm\"][\"m\"];\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            wasmTable = Module[\"asm\"][\"G\"];\n            addOnInit(Module[\"asm\"][\"n\"]);\n            removeRunDependency();\n          }\n\n          addRunDependency();\n\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"]);\n          }\n\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function (binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(function (instance) {\n              return instance;\n            }).then(receiver, function (reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n              }).then(function (response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function (reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = {\n          11694: function _($0) {\n            var self = Module[\"getCache\"](Module[\"CExpatJS\"])[$0];\n            if (!self.hasOwnProperty(\"startElement\")) throw \"a JSImplementation must implement all functions, you forgot CExpatJS::startElement.\";\n            self[\"startElement\"]();\n          },\n          11912: function _($0) {\n            var self = Module[\"getCache\"](Module[\"CExpatJS\"])[$0];\n            if (!self.hasOwnProperty(\"endElement\")) throw \"a JSImplementation must implement all functions, you forgot CExpatJS::endElement.\";\n            self[\"endElement\"]();\n          },\n          12124: function _($0) {\n            var self = Module[\"getCache\"](Module[\"CExpatJS\"])[$0];\n            if (!self.hasOwnProperty(\"characterData\")) throw \"a JSImplementation must implement all functions, you forgot CExpatJS::characterData.\";\n            self[\"characterData\"]();\n          }\n        };\n\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n\n            var func = callback.func;\n\n            if (typeof func === \"number\") {\n              if (callback.arg === undefined) {\n                getWasmTableEntry(func)();\n              } else {\n                getWasmTableEntry(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === undefined ? null : callback.arg);\n            }\n          }\n        }\n\n        function getWasmTableEntry(funcPtr) {\n          return wasmTable.get(funcPtr);\n        }\n\n        var PATH = {\n          splitPath: function splitPath(filename) {\n            var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n            return splitPathRe.exec(filename).slice(1);\n          },\n          normalizeArray: function normalizeArray(parts, allowAboveRoot) {\n            var up = 0;\n\n            for (var i = parts.length - 1; i >= 0; i--) {\n              var last = parts[i];\n\n              if (last === \".\") {\n                parts.splice(i, 1);\n              } else if (last === \"..\") {\n                parts.splice(i, 1);\n                up++;\n              } else if (up) {\n                parts.splice(i, 1);\n                up--;\n              }\n            }\n\n            if (allowAboveRoot) {\n              for (; up; up--) {\n                parts.unshift(\"..\");\n              }\n            }\n\n            return parts;\n          },\n          normalize: function normalize(path) {\n            var isAbsolute = path.charAt(0) === \"/\",\n                trailingSlash = path.substr(-1) === \"/\";\n            path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n              return !!p;\n            }), !isAbsolute).join(\"/\");\n\n            if (!path && !isAbsolute) {\n              path = \".\";\n            }\n\n            if (path && trailingSlash) {\n              path += \"/\";\n            }\n\n            return (isAbsolute ? \"/\" : \"\") + path;\n          },\n          dirname: function dirname(path) {\n            var result = PATH.splitPath(path),\n                root = result[0],\n                dir = result[1];\n\n            if (!root && !dir) {\n              return \".\";\n            }\n\n            if (dir) {\n              dir = dir.substr(0, dir.length - 1);\n            }\n\n            return root + dir;\n          },\n          basename: function basename(path) {\n            if (path === \"/\") return \"/\";\n            path = PATH.normalize(path);\n            path = path.replace(/\\/$/, \"\");\n            var lastSlash = path.lastIndexOf(\"/\");\n            if (lastSlash === -1) return path;\n            return path.substr(lastSlash + 1);\n          },\n          extname: function extname(path) {\n            return PATH.splitPath(path)[3];\n          },\n          join: function join() {\n            var paths = Array.prototype.slice.call(arguments, 0);\n            return PATH.normalize(paths.join(\"/\"));\n          },\n          join2: function join2(l, r) {\n            return PATH.normalize(l + \"/\" + r);\n          }\n        };\n\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function () {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else return function () {\n            abort(\"randomDevice\");\n          };\n        }\n\n        var PATH_FS = {\n          resolve: function resolve() {\n            var resolvedPath = \"\",\n                resolvedAbsolute = false;\n\n            for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n              var path = i >= 0 ? arguments[i] : FS.cwd();\n\n              if (typeof path !== \"string\") {\n                throw new TypeError(\"Arguments to path.resolve must be strings\");\n              } else if (!path) {\n                return \"\";\n              }\n\n              resolvedPath = path + \"/\" + resolvedPath;\n              resolvedAbsolute = path.charAt(0) === \"/\";\n            }\n\n            resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n              return !!p;\n            }), !resolvedAbsolute).join(\"/\");\n            return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n          },\n          relative: function relative(from, to) {\n            from = PATH_FS.resolve(from).substr(1);\n            to = PATH_FS.resolve(to).substr(1);\n\n            function trim(arr) {\n              var start = 0;\n\n              for (; start < arr.length; start++) {\n                if (arr[start] !== \"\") break;\n              }\n\n              var end = arr.length - 1;\n\n              for (; end >= 0; end--) {\n                if (arr[end] !== \"\") break;\n              }\n\n              if (start > end) return [];\n              return arr.slice(start, end - start + 1);\n            }\n\n            var fromParts = trim(from.split(\"/\"));\n            var toParts = trim(to.split(\"/\"));\n            var length = Math.min(fromParts.length, toParts.length);\n            var samePartsLength = length;\n\n            for (var i = 0; i < length; i++) {\n              if (fromParts[i] !== toParts[i]) {\n                samePartsLength = i;\n                break;\n              }\n            }\n\n            var outputParts = [];\n\n            for (var i = samePartsLength; i < fromParts.length; i++) {\n              outputParts.push(\"..\");\n            }\n\n            outputParts = outputParts.concat(toParts.slice(samePartsLength));\n            return outputParts.join(\"/\");\n          }\n        };\n        var TTY = {\n          ttys: [],\n          init: function init() {},\n          shutdown: function shutdown() {},\n          register: function register(dev, ops) {\n            TTY.ttys[dev] = {\n              input: [],\n              output: [],\n              ops: ops\n            };\n            FS.registerDevice(dev, TTY.stream_ops);\n          },\n          stream_ops: {\n            open: function open(stream) {\n              var tty = TTY.ttys[stream.node.rdev];\n\n              if (!tty) {\n                throw new FS.ErrnoError(43);\n              }\n\n              stream.tty = tty;\n              stream.seekable = false;\n            },\n            close: function close(stream) {\n              stream.tty.ops.flush(stream.tty);\n            },\n            flush: function flush(stream) {\n              stream.tty.ops.flush(stream.tty);\n            },\n            read: function read(stream, buffer, offset, length, pos) {\n              if (!stream.tty || !stream.tty.ops.get_char) {\n                throw new FS.ErrnoError(60);\n              }\n\n              var bytesRead = 0;\n\n              for (var i = 0; i < length; i++) {\n                var result;\n\n                try {\n                  result = stream.tty.ops.get_char(stream.tty);\n                } catch (e) {\n                  throw new FS.ErrnoError(29);\n                }\n\n                if (result === undefined && bytesRead === 0) {\n                  throw new FS.ErrnoError(6);\n                }\n\n                if (result === null || result === undefined) break;\n                bytesRead++;\n                buffer[offset + i] = result;\n              }\n\n              if (bytesRead) {\n                stream.node.timestamp = Date.now();\n              }\n\n              return bytesRead;\n            },\n            write: function write(stream, buffer, offset, length, pos) {\n              if (!stream.tty || !stream.tty.ops.put_char) {\n                throw new FS.ErrnoError(60);\n              }\n\n              try {\n                for (var i = 0; i < length; i++) {\n                  stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                }\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n\n              if (length) {\n                stream.node.timestamp = Date.now();\n              }\n\n              return i;\n            }\n          },\n          default_tty_ops: {\n            get_char: function get_char(tty) {\n              if (!tty.input.length) {\n                var result = null;\n\n                if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                  result = window.prompt(\"Input: \");\n\n                  if (result !== null) {\n                    result += \"\\n\";\n                  }\n                } else if (typeof readline == \"function\") {\n                  result = readline();\n\n                  if (result !== null) {\n                    result += \"\\n\";\n                  }\n                }\n\n                if (!result) {\n                  return null;\n                }\n\n                tty.input = intArrayFromString(result, true);\n              }\n\n              return tty.input.shift();\n            },\n            put_char: function put_char(tty, val) {\n              if (val === null || val === 10) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              } else {\n                if (val != 0) tty.output.push(val);\n              }\n            },\n            flush: function flush(tty) {\n              if (tty.output && tty.output.length > 0) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              }\n            }\n          },\n          default_tty1_ops: {\n            put_char: function put_char(tty, val) {\n              if (val === null || val === 10) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              } else {\n                if (val != 0) tty.output.push(val);\n              }\n            },\n            flush: function flush(tty) {\n              if (tty.output && tty.output.length > 0) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              }\n            }\n          }\n        };\n\n        function mmapAlloc(size) {\n          abort();\n        }\n\n        var MEMFS = {\n          ops_table: null,\n          mount: function mount(_mount) {\n            return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n          },\n          createNode: function createNode(parent, name, mode, dev) {\n            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (!MEMFS.ops_table) {\n              MEMFS.ops_table = {\n                dir: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr,\n                    lookup: MEMFS.node_ops.lookup,\n                    mknod: MEMFS.node_ops.mknod,\n                    rename: MEMFS.node_ops.rename,\n                    unlink: MEMFS.node_ops.unlink,\n                    rmdir: MEMFS.node_ops.rmdir,\n                    readdir: MEMFS.node_ops.readdir,\n                    symlink: MEMFS.node_ops.symlink\n                  },\n                  stream: {\n                    llseek: MEMFS.stream_ops.llseek\n                  }\n                },\n                file: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr\n                  },\n                  stream: {\n                    llseek: MEMFS.stream_ops.llseek,\n                    read: MEMFS.stream_ops.read,\n                    write: MEMFS.stream_ops.write,\n                    allocate: MEMFS.stream_ops.allocate,\n                    mmap: MEMFS.stream_ops.mmap,\n                    msync: MEMFS.stream_ops.msync\n                  }\n                },\n                link: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr,\n                    readlink: MEMFS.node_ops.readlink\n                  },\n                  stream: {}\n                },\n                chrdev: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr\n                  },\n                  stream: FS.chrdev_stream_ops\n                }\n              };\n            }\n\n            var node = FS.createNode(parent, name, mode, dev);\n\n            if (FS.isDir(node.mode)) {\n              node.node_ops = MEMFS.ops_table.dir.node;\n              node.stream_ops = MEMFS.ops_table.dir.stream;\n              node.contents = {};\n            } else if (FS.isFile(node.mode)) {\n              node.node_ops = MEMFS.ops_table.file.node;\n              node.stream_ops = MEMFS.ops_table.file.stream;\n              node.usedBytes = 0;\n              node.contents = null;\n            } else if (FS.isLink(node.mode)) {\n              node.node_ops = MEMFS.ops_table.link.node;\n              node.stream_ops = MEMFS.ops_table.link.stream;\n            } else if (FS.isChrdev(node.mode)) {\n              node.node_ops = MEMFS.ops_table.chrdev.node;\n              node.stream_ops = MEMFS.ops_table.chrdev.stream;\n            }\n\n            node.timestamp = Date.now();\n\n            if (parent) {\n              parent.contents[name] = node;\n              parent.timestamp = node.timestamp;\n            }\n\n            return node;\n          },\n          getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {\n            if (!node.contents) return new Uint8Array(0);\n            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n            return new Uint8Array(node.contents);\n          },\n          expandFileStorage: function expandFileStorage(node, newCapacity) {\n            var prevCapacity = node.contents ? node.contents.length : 0;\n            if (prevCapacity >= newCapacity) return;\n            var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n            newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newCapacity);\n            if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          },\n          resizeFileStorage: function resizeFileStorage(node, newSize) {\n            if (node.usedBytes == newSize) return;\n\n            if (newSize == 0) {\n              node.contents = null;\n              node.usedBytes = 0;\n            } else {\n              var oldContents = node.contents;\n              node.contents = new Uint8Array(newSize);\n\n              if (oldContents) {\n                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n              }\n\n              node.usedBytes = newSize;\n            }\n          },\n          node_ops: {\n            getattr: function getattr(node) {\n              var attr = {};\n              attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n              attr.ino = node.id;\n              attr.mode = node.mode;\n              attr.nlink = 1;\n              attr.uid = 0;\n              attr.gid = 0;\n              attr.rdev = node.rdev;\n\n              if (FS.isDir(node.mode)) {\n                attr.size = 4096;\n              } else if (FS.isFile(node.mode)) {\n                attr.size = node.usedBytes;\n              } else if (FS.isLink(node.mode)) {\n                attr.size = node.link.length;\n              } else {\n                attr.size = 0;\n              }\n\n              attr.atime = new Date(node.timestamp);\n              attr.mtime = new Date(node.timestamp);\n              attr.ctime = new Date(node.timestamp);\n              attr.blksize = 4096;\n              attr.blocks = Math.ceil(attr.size / attr.blksize);\n              return attr;\n            },\n            setattr: function setattr(node, attr) {\n              if (attr.mode !== undefined) {\n                node.mode = attr.mode;\n              }\n\n              if (attr.timestamp !== undefined) {\n                node.timestamp = attr.timestamp;\n              }\n\n              if (attr.size !== undefined) {\n                MEMFS.resizeFileStorage(node, attr.size);\n              }\n            },\n            lookup: function lookup(parent, name) {\n              throw FS.genericErrors[44];\n            },\n            mknod: function mknod(parent, name, mode, dev) {\n              return MEMFS.createNode(parent, name, mode, dev);\n            },\n            rename: function rename(old_node, new_dir, new_name) {\n              if (FS.isDir(old_node.mode)) {\n                var new_node;\n\n                try {\n                  new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {}\n\n                if (new_node) {\n                  for (var i in new_node.contents) {\n                    throw new FS.ErrnoError(55);\n                  }\n                }\n              }\n\n              delete old_node.parent.contents[old_node.name];\n              old_node.parent.timestamp = Date.now();\n              old_node.name = new_name;\n              new_dir.contents[new_name] = old_node;\n              new_dir.timestamp = old_node.parent.timestamp;\n              old_node.parent = new_dir;\n            },\n            unlink: function unlink(parent, name) {\n              delete parent.contents[name];\n              parent.timestamp = Date.now();\n            },\n            rmdir: function rmdir(parent, name) {\n              var node = FS.lookupNode(parent, name);\n\n              for (var i in node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n\n              delete parent.contents[name];\n              parent.timestamp = Date.now();\n            },\n            readdir: function readdir(node) {\n              var entries = [\".\", \"..\"];\n\n              for (var key in node.contents) {\n                if (!node.contents.hasOwnProperty(key)) {\n                  continue;\n                }\n\n                entries.push(key);\n              }\n\n              return entries;\n            },\n            symlink: function symlink(parent, newname, oldpath) {\n              var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n              node.link = oldpath;\n              return node;\n            },\n            readlink: function readlink(node) {\n              if (!FS.isLink(node.mode)) {\n                throw new FS.ErrnoError(28);\n              }\n\n              return node.link;\n            }\n          },\n          stream_ops: {\n            read: function read(stream, buffer, offset, length, position) {\n              var contents = stream.node.contents;\n              if (position >= stream.node.usedBytes) return 0;\n              var size = Math.min(stream.node.usedBytes - position, length);\n\n              if (size > 8 && contents.subarray) {\n                buffer.set(contents.subarray(position, position + size), offset);\n              } else {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents[position + i];\n                }\n              }\n\n              return size;\n            },\n            write: function write(stream, buffer, offset, length, position, canOwn) {\n              if (buffer.buffer === HEAP8.buffer) {\n                canOwn = false;\n              }\n\n              if (!length) return 0;\n              var node = stream.node;\n              node.timestamp = Date.now();\n\n              if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                if (canOwn) {\n                  node.contents = buffer.subarray(offset, offset + length);\n                  node.usedBytes = length;\n                  return length;\n                } else if (node.usedBytes === 0 && position === 0) {\n                  node.contents = buffer.slice(offset, offset + length);\n                  node.usedBytes = length;\n                  return length;\n                } else if (position + length <= node.usedBytes) {\n                  node.contents.set(buffer.subarray(offset, offset + length), position);\n                  return length;\n                }\n              }\n\n              MEMFS.expandFileStorage(node, position + length);\n\n              if (node.contents.subarray && buffer.subarray) {\n                node.contents.set(buffer.subarray(offset, offset + length), position);\n              } else {\n                for (var i = 0; i < length; i++) {\n                  node.contents[position + i] = buffer[offset + i];\n                }\n              }\n\n              node.usedBytes = Math.max(node.usedBytes, position + length);\n              return length;\n            },\n            llseek: function llseek(stream, offset, whence) {\n              var position = offset;\n\n              if (whence === 1) {\n                position += stream.position;\n              } else if (whence === 2) {\n                if (FS.isFile(stream.node.mode)) {\n                  position += stream.node.usedBytes;\n                }\n              }\n\n              if (position < 0) {\n                throw new FS.ErrnoError(28);\n              }\n\n              return position;\n            },\n            allocate: function allocate(stream, offset, length) {\n              MEMFS.expandFileStorage(stream.node, offset + length);\n              stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n            },\n            mmap: function mmap(stream, address, length, position, prot, flags) {\n              if (address !== 0) {\n                throw new FS.ErrnoError(28);\n              }\n\n              if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n              }\n\n              var ptr;\n              var allocated;\n              var contents = stream.node.contents;\n\n              if (!(flags & 2) && contents.buffer === buffer) {\n                allocated = false;\n                ptr = contents.byteOffset;\n              } else {\n                if (position > 0 || position + length < contents.length) {\n                  if (contents.subarray) {\n                    contents = contents.subarray(position, position + length);\n                  } else {\n                    contents = Array.prototype.slice.call(contents, position, position + length);\n                  }\n                }\n\n                allocated = true;\n                ptr = mmapAlloc();\n\n                if (!ptr) {\n                  throw new FS.ErrnoError(48);\n                }\n\n                HEAP8.set(contents, ptr);\n              }\n\n              return {\n                ptr: ptr,\n                allocated: allocated\n              };\n            },\n            msync: function msync(stream, buffer, offset, length, mmapFlags) {\n              if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n              }\n\n              if (mmapFlags & 2) {\n                return 0;\n              }\n\n              MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n              return 0;\n            }\n          }\n        };\n\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function (arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep) removeRunDependency();\n          }, function (event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep) addRunDependency();\n        }\n\n        var FS = {\n          root: null,\n          mounts: [],\n          devices: {},\n          streams: [],\n          nextInode: 1,\n          nameTable: null,\n          currentPath: \"/\",\n          initialized: false,\n          ignorePermissions: true,\n          ErrnoError: null,\n          genericErrors: {},\n          filesystems: null,\n          syncFSRequests: 0,\n          lookupPath: function lookupPath(path, opts) {\n            path = PATH_FS.resolve(FS.cwd(), path);\n            opts = opts || {};\n            if (!path) return {\n              path: \"\",\n              node: null\n            };\n            var defaults = {\n              follow_mount: true,\n              recurse_count: 0\n            };\n\n            for (var key in defaults) {\n              if (opts[key] === undefined) {\n                opts[key] = defaults[key];\n              }\n            }\n\n            if (opts.recurse_count > 8) {\n              throw new FS.ErrnoError(32);\n            }\n\n            var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n              return !!p;\n            }), false);\n            var current = FS.root;\n            var current_path = \"/\";\n\n            for (var i = 0; i < parts.length; i++) {\n              var islast = i === parts.length - 1;\n\n              if (islast && opts.parent) {\n                break;\n              }\n\n              current = FS.lookupNode(current, parts[i]);\n              current_path = PATH.join2(current_path, parts[i]);\n\n              if (FS.isMountpoint(current)) {\n                if (!islast || islast && opts.follow_mount) {\n                  current = current.mounted.root;\n                }\n              }\n\n              if (!islast || opts.follow) {\n                var count = 0;\n\n                while (FS.isLink(current.mode)) {\n                  var link = FS.readlink(current_path);\n                  current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                  var lookup = FS.lookupPath(current_path, {\n                    recurse_count: opts.recurse_count\n                  });\n                  current = lookup.node;\n\n                  if (count++ > 40) {\n                    throw new FS.ErrnoError(32);\n                  }\n                }\n              }\n            }\n\n            return {\n              path: current_path,\n              node: current\n            };\n          },\n          getPath: function getPath(node) {\n            var path;\n\n            while (true) {\n              if (FS.isRoot(node)) {\n                var mount = node.mount.mountpoint;\n                if (!path) return mount;\n                return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n              }\n\n              path = path ? node.name + \"/\" + path : node.name;\n              node = node.parent;\n            }\n          },\n          hashName: function hashName(parentid, name) {\n            var hash = 0;\n\n            for (var i = 0; i < name.length; i++) {\n              hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n            }\n\n            return (parentid + hash >>> 0) % FS.nameTable.length;\n          },\n          hashAddNode: function hashAddNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n            node.name_next = FS.nameTable[hash];\n            FS.nameTable[hash] = node;\n          },\n          hashRemoveNode: function hashRemoveNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n\n            if (FS.nameTable[hash] === node) {\n              FS.nameTable[hash] = node.name_next;\n            } else {\n              var current = FS.nameTable[hash];\n\n              while (current) {\n                if (current.name_next === node) {\n                  current.name_next = node.name_next;\n                  break;\n                }\n\n                current = current.name_next;\n              }\n            }\n          },\n          lookupNode: function lookupNode(parent, name) {\n            var errCode = FS.mayLookup(parent);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode, parent);\n            }\n\n            var hash = FS.hashName(parent.id, name);\n\n            for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n              var nodeName = node.name;\n\n              if (node.parent.id === parent.id && nodeName === name) {\n                return node;\n              }\n            }\n\n            return FS.lookup(parent, name);\n          },\n          createNode: function createNode(parent, name, mode, rdev) {\n            var node = new FS.FSNode(parent, name, mode, rdev);\n            FS.hashAddNode(node);\n            return node;\n          },\n          destroyNode: function destroyNode(node) {\n            FS.hashRemoveNode(node);\n          },\n          isRoot: function isRoot(node) {\n            return node === node.parent;\n          },\n          isMountpoint: function isMountpoint(node) {\n            return !!node.mounted;\n          },\n          isFile: function isFile(mode) {\n            return (mode & 61440) === 32768;\n          },\n          isDir: function isDir(mode) {\n            return (mode & 61440) === 16384;\n          },\n          isLink: function isLink(mode) {\n            return (mode & 61440) === 40960;\n          },\n          isChrdev: function isChrdev(mode) {\n            return (mode & 61440) === 8192;\n          },\n          isBlkdev: function isBlkdev(mode) {\n            return (mode & 61440) === 24576;\n          },\n          isFIFO: function isFIFO(mode) {\n            return (mode & 61440) === 4096;\n          },\n          isSocket: function isSocket(mode) {\n            return (mode & 49152) === 49152;\n          },\n          flagModes: {\n            \"r\": 0,\n            \"r+\": 2,\n            \"w\": 577,\n            \"w+\": 578,\n            \"a\": 1089,\n            \"a+\": 1090\n          },\n          modeStringToFlags: function modeStringToFlags(str) {\n            var flags = FS.flagModes[str];\n\n            if (typeof flags === \"undefined\") {\n              throw new Error(\"Unknown file open mode: \" + str);\n            }\n\n            return flags;\n          },\n          flagsToPermissionString: function flagsToPermissionString(flag) {\n            var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n\n            if (flag & 512) {\n              perms += \"w\";\n            }\n\n            return perms;\n          },\n          nodePermissions: function nodePermissions(node, perms) {\n            if (FS.ignorePermissions) {\n              return 0;\n            }\n\n            if (perms.includes(\"r\") && !(node.mode & 292)) {\n              return 2;\n            } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n              return 2;\n            } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n              return 2;\n            }\n\n            return 0;\n          },\n          mayLookup: function mayLookup(dir) {\n            var errCode = FS.nodePermissions(dir, \"x\");\n            if (errCode) return errCode;\n            if (!dir.node_ops.lookup) return 2;\n            return 0;\n          },\n          mayCreate: function mayCreate(dir, name) {\n            try {\n              var node = FS.lookupNode(dir, name);\n              return 20;\n            } catch (e) {}\n\n            return FS.nodePermissions(dir, \"wx\");\n          },\n          mayDelete: function mayDelete(dir, name, isdir) {\n            var node;\n\n            try {\n              node = FS.lookupNode(dir, name);\n            } catch (e) {\n              return e.errno;\n            }\n\n            var errCode = FS.nodePermissions(dir, \"wx\");\n\n            if (errCode) {\n              return errCode;\n            }\n\n            if (isdir) {\n              if (!FS.isDir(node.mode)) {\n                return 54;\n              }\n\n              if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                return 10;\n              }\n            } else {\n              if (FS.isDir(node.mode)) {\n                return 31;\n              }\n            }\n\n            return 0;\n          },\n          mayOpen: function mayOpen(node, flags) {\n            if (!node) {\n              return 44;\n            }\n\n            if (FS.isLink(node.mode)) {\n              return 32;\n            } else if (FS.isDir(node.mode)) {\n              if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n                return 31;\n              }\n            }\n\n            return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n          },\n          MAX_OPEN_FDS: 4096,\n          nextfd: function nextfd(fd_start, fd_end) {\n            fd_start = fd_start || 0;\n            fd_end = fd_end || FS.MAX_OPEN_FDS;\n\n            for (var fd = fd_start; fd <= fd_end; fd++) {\n              if (!FS.streams[fd]) {\n                return fd;\n              }\n            }\n\n            throw new FS.ErrnoError(33);\n          },\n          getStream: function getStream(fd) {\n            return FS.streams[fd];\n          },\n          createStream: function createStream(stream, fd_start, fd_end) {\n            if (!FS.FSStream) {\n              FS.FSStream = function () {};\n\n              FS.FSStream.prototype = {\n                object: {\n                  get: function get() {\n                    return this.node;\n                  },\n                  set: function set(val) {\n                    this.node = val;\n                  }\n                },\n                isRead: {\n                  get: function get() {\n                    return (this.flags & 2097155) !== 1;\n                  }\n                },\n                isWrite: {\n                  get: function get() {\n                    return (this.flags & 2097155) !== 0;\n                  }\n                },\n                isAppend: {\n                  get: function get() {\n                    return this.flags & 1024;\n                  }\n                }\n              };\n            }\n\n            var newStream = new FS.FSStream();\n\n            for (var p in stream) {\n              newStream[p] = stream[p];\n            }\n\n            stream = newStream;\n            var fd = FS.nextfd(fd_start, fd_end);\n            stream.fd = fd;\n            FS.streams[fd] = stream;\n            return stream;\n          },\n          closeStream: function closeStream(fd) {\n            FS.streams[fd] = null;\n          },\n          chrdev_stream_ops: {\n            open: function open(stream) {\n              var device = FS.getDevice(stream.node.rdev);\n              stream.stream_ops = device.stream_ops;\n\n              if (stream.stream_ops.open) {\n                stream.stream_ops.open(stream);\n              }\n            },\n            llseek: function llseek() {\n              throw new FS.ErrnoError(70);\n            }\n          },\n          major: function major(dev) {\n            return dev >> 8;\n          },\n          minor: function minor(dev) {\n            return dev & 255;\n          },\n          makedev: function makedev(ma, mi) {\n            return ma << 8 | mi;\n          },\n          registerDevice: function registerDevice(dev, ops) {\n            FS.devices[dev] = {\n              stream_ops: ops\n            };\n          },\n          getDevice: function getDevice(dev) {\n            return FS.devices[dev];\n          },\n          getMounts: function getMounts(mount) {\n            var mounts = [];\n            var check = [mount];\n\n            while (check.length) {\n              var m = check.pop();\n              mounts.push(m);\n              check.push.apply(check, m.mounts);\n            }\n\n            return mounts;\n          },\n          syncfs: function syncfs(populate, callback) {\n            if (typeof populate === \"function\") {\n              callback = populate;\n              populate = false;\n            }\n\n            FS.syncFSRequests++;\n\n            if (FS.syncFSRequests > 1) {\n              err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n            }\n\n            var mounts = FS.getMounts(FS.root.mount);\n            var completed = 0;\n\n            function doCallback(errCode) {\n              FS.syncFSRequests--;\n              return callback(errCode);\n            }\n\n            function done(errCode) {\n              if (errCode) {\n                if (!done.errored) {\n                  done.errored = true;\n                  return doCallback(errCode);\n                }\n\n                return;\n              }\n\n              if (++completed >= mounts.length) {\n                doCallback(null);\n              }\n            }\n\n            mounts.forEach(function (mount) {\n              if (!mount.type.syncfs) {\n                return done(null);\n              }\n\n              mount.type.syncfs(mount, populate, done);\n            });\n          },\n          mount: function mount(type, opts, mountpoint) {\n            var root = mountpoint === \"/\";\n            var pseudo = !mountpoint;\n            var node;\n\n            if (root && FS.root) {\n              throw new FS.ErrnoError(10);\n            } else if (!root && !pseudo) {\n              var lookup = FS.lookupPath(mountpoint, {\n                follow_mount: false\n              });\n              mountpoint = lookup.path;\n              node = lookup.node;\n\n              if (FS.isMountpoint(node)) {\n                throw new FS.ErrnoError(10);\n              }\n\n              if (!FS.isDir(node.mode)) {\n                throw new FS.ErrnoError(54);\n              }\n            }\n\n            var mount = {\n              type: type,\n              opts: opts,\n              mountpoint: mountpoint,\n              mounts: []\n            };\n            var mountRoot = type.mount(mount);\n            mountRoot.mount = mount;\n            mount.root = mountRoot;\n\n            if (root) {\n              FS.root = mountRoot;\n            } else if (node) {\n              node.mounted = mount;\n\n              if (node.mount) {\n                node.mount.mounts.push(mount);\n              }\n            }\n\n            return mountRoot;\n          },\n          unmount: function unmount(mountpoint) {\n            var lookup = FS.lookupPath(mountpoint, {\n              follow_mount: false\n            });\n\n            if (!FS.isMountpoint(lookup.node)) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var node = lookup.node;\n            var mount = node.mounted;\n            var mounts = FS.getMounts(mount);\n            Object.keys(FS.nameTable).forEach(function (hash) {\n              var current = FS.nameTable[hash];\n\n              while (current) {\n                var next = current.name_next;\n\n                if (mounts.includes(current.mount)) {\n                  FS.destroyNode(current);\n                }\n\n                current = next;\n              }\n            });\n            node.mounted = null;\n            var idx = node.mount.mounts.indexOf(mount);\n            node.mount.mounts.splice(idx, 1);\n          },\n          lookup: function lookup(parent, name) {\n            return parent.node_ops.lookup(parent, name);\n          },\n          mknod: function mknod(path, mode, dev) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n\n            if (!name || name === \".\" || name === \"..\") {\n              throw new FS.ErrnoError(28);\n            }\n\n            var errCode = FS.mayCreate(parent, name);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.mknod) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return parent.node_ops.mknod(parent, name, mode, dev);\n          },\n          create: function create(path, mode) {\n            mode = mode !== undefined ? mode : 438;\n            mode &= 4095;\n            mode |= 32768;\n            return FS.mknod(path, mode, 0);\n          },\n          mkdir: function mkdir(path, mode) {\n            mode = mode !== undefined ? mode : 511;\n            mode &= 511 | 512;\n            mode |= 16384;\n            return FS.mknod(path, mode, 0);\n          },\n          mkdirTree: function mkdirTree(path, mode) {\n            var dirs = path.split(\"/\");\n            var d = \"\";\n\n            for (var i = 0; i < dirs.length; ++i) {\n              if (!dirs[i]) continue;\n              d += \"/\" + dirs[i];\n\n              try {\n                FS.mkdir(d, mode);\n              } catch (e) {\n                if (e.errno != 20) throw e;\n              }\n            }\n          },\n          mkdev: function mkdev(path, mode, dev) {\n            if (typeof dev === \"undefined\") {\n              dev = mode;\n              mode = 438;\n            }\n\n            mode |= 8192;\n            return FS.mknod(path, mode, dev);\n          },\n          symlink: function symlink(oldpath, newpath) {\n            if (!PATH_FS.resolve(oldpath)) {\n              throw new FS.ErrnoError(44);\n            }\n\n            var lookup = FS.lookupPath(newpath, {\n              parent: true\n            });\n            var parent = lookup.node;\n\n            if (!parent) {\n              throw new FS.ErrnoError(44);\n            }\n\n            var newname = PATH.basename(newpath);\n            var errCode = FS.mayCreate(parent, newname);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.symlink) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return parent.node_ops.symlink(parent, newname, oldpath);\n          },\n          rename: function rename(old_path, new_path) {\n            var old_dirname = PATH.dirname(old_path);\n            var new_dirname = PATH.dirname(new_path);\n            var old_name = PATH.basename(old_path);\n            var new_name = PATH.basename(new_path);\n            var lookup, old_dir, new_dir;\n            lookup = FS.lookupPath(old_path, {\n              parent: true\n            });\n            old_dir = lookup.node;\n            lookup = FS.lookupPath(new_path, {\n              parent: true\n            });\n            new_dir = lookup.node;\n            if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n            if (old_dir.mount !== new_dir.mount) {\n              throw new FS.ErrnoError(75);\n            }\n\n            var old_node = FS.lookupNode(old_dir, old_name);\n            var relative = PATH_FS.relative(old_path, new_dirname);\n\n            if (relative.charAt(0) !== \".\") {\n              throw new FS.ErrnoError(28);\n            }\n\n            relative = PATH_FS.relative(new_path, old_dirname);\n\n            if (relative.charAt(0) !== \".\") {\n              throw new FS.ErrnoError(55);\n            }\n\n            var new_node;\n\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n\n            if (old_node === new_node) {\n              return;\n            }\n\n            var isdir = FS.isDir(old_node.mode);\n            var errCode = FS.mayDelete(old_dir, old_name, isdir);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!old_dir.node_ops.rename) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            if (new_dir !== old_dir) {\n              errCode = FS.nodePermissions(old_dir, \"w\");\n\n              if (errCode) {\n                throw new FS.ErrnoError(errCode);\n              }\n            }\n\n            FS.hashRemoveNode(old_node);\n\n            try {\n              old_dir.node_ops.rename(old_node, new_dir, new_name);\n            } catch (e) {\n              throw e;\n            } finally {\n              FS.hashAddNode(old_node);\n            }\n          },\n          rmdir: function rmdir(path) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, true);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.rmdir) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            parent.node_ops.rmdir(parent, name);\n            FS.destroyNode(node);\n          },\n          readdir: function readdir(path) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n\n            if (!node.node_ops.readdir) {\n              throw new FS.ErrnoError(54);\n            }\n\n            return node.node_ops.readdir(node);\n          },\n          unlink: function unlink(path) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, false);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.unlink) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            parent.node_ops.unlink(parent, name);\n            FS.destroyNode(node);\n          },\n          readlink: function readlink(path) {\n            var lookup = FS.lookupPath(path);\n            var link = lookup.node;\n\n            if (!link) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!link.node_ops.readlink) {\n              throw new FS.ErrnoError(28);\n            }\n\n            return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n          },\n          stat: function stat(path, dontFollow) {\n            var lookup = FS.lookupPath(path, {\n              follow: !dontFollow\n            });\n            var node = lookup.node;\n\n            if (!node) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!node.node_ops.getattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return node.node_ops.getattr(node);\n          },\n          lstat: function lstat(path) {\n            return FS.stat(path, true);\n          },\n          chmod: function chmod(path, mode, dontFollow) {\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontFollow\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            node.node_ops.setattr(node, {\n              mode: mode & 4095 | node.mode & ~4095,\n              timestamp: Date.now()\n            });\n          },\n          lchmod: function lchmod(path, mode) {\n            FS.chmod(path, mode, true);\n          },\n          fchmod: function fchmod(fd, mode) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            FS.chmod(stream.node, mode);\n          },\n          chown: function chown(path, uid, gid, dontFollow) {\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontFollow\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            node.node_ops.setattr(node, {\n              timestamp: Date.now()\n            });\n          },\n          lchown: function lchown(path, uid, gid) {\n            FS.chown(path, uid, gid, true);\n          },\n          fchown: function fchown(fd, uid, gid) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            FS.chown(stream.node, uid, gid);\n          },\n          truncate: function truncate(path, len) {\n            if (len < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: true\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!FS.isFile(node.mode)) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var errCode = FS.nodePermissions(node, \"w\");\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            node.node_ops.setattr(node, {\n              size: len,\n              timestamp: Date.now()\n            });\n          },\n          ftruncate: function ftruncate(fd, len) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            FS.truncate(stream.node, len);\n          },\n          utime: function utime(path, atime, mtime) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n            node.node_ops.setattr(node, {\n              timestamp: Math.max(atime, mtime)\n            });\n          },\n          open: function open(path, flags, mode, fd_start, fd_end) {\n            if (path === \"\") {\n              throw new FS.ErrnoError(44);\n            }\n\n            flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n            mode = typeof mode === \"undefined\" ? 438 : mode;\n\n            if (flags & 64) {\n              mode = mode & 4095 | 32768;\n            } else {\n              mode = 0;\n            }\n\n            var node;\n\n            if (typeof path === \"object\") {\n              node = path;\n            } else {\n              path = PATH.normalize(path);\n\n              try {\n                var lookup = FS.lookupPath(path, {\n                  follow: !(flags & 131072)\n                });\n                node = lookup.node;\n              } catch (e) {}\n            }\n\n            var created = false;\n\n            if (flags & 64) {\n              if (node) {\n                if (flags & 128) {\n                  throw new FS.ErrnoError(20);\n                }\n              } else {\n                node = FS.mknod(path, mode, 0);\n                created = true;\n              }\n            }\n\n            if (!node) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (FS.isChrdev(node.mode)) {\n              flags &= ~512;\n            }\n\n            if (flags & 65536 && !FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n\n            if (!created) {\n              var errCode = FS.mayOpen(node, flags);\n\n              if (errCode) {\n                throw new FS.ErrnoError(errCode);\n              }\n            }\n\n            if (flags & 512) {\n              FS.truncate(node, 0);\n            }\n\n            flags &= ~(128 | 512 | 131072);\n            var stream = FS.createStream({\n              node: node,\n              path: FS.getPath(node),\n              id: node.id,\n              flags: flags,\n              mode: node.mode,\n              seekable: true,\n              position: 0,\n              stream_ops: node.stream_ops,\n              node_ops: node.node_ops,\n              ungotten: [],\n              error: false\n            }, fd_start, fd_end);\n\n            if (stream.stream_ops.open) {\n              stream.stream_ops.open(stream);\n            }\n\n            if (Module[\"logReadFiles\"] && !(flags & 1)) {\n              if (!FS.readFiles) FS.readFiles = {};\n\n              if (!(path in FS.readFiles)) {\n                FS.readFiles[path] = 1;\n              }\n            }\n\n            return stream;\n          },\n          close: function close(stream) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (stream.getdents) stream.getdents = null;\n\n            try {\n              if (stream.stream_ops.close) {\n                stream.stream_ops.close(stream);\n              }\n            } catch (e) {\n              throw e;\n            } finally {\n              FS.closeStream(stream.fd);\n            }\n\n            stream.fd = null;\n          },\n          isClosed: function isClosed(stream) {\n            return stream.fd === null;\n          },\n          llseek: function llseek(stream, offset, whence) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (!stream.seekable || !stream.stream_ops.llseek) {\n              throw new FS.ErrnoError(70);\n            }\n\n            if (whence != 0 && whence != 1 && whence != 2) {\n              throw new FS.ErrnoError(28);\n            }\n\n            stream.position = stream.stream_ops.llseek(stream, offset, whence);\n            stream.ungotten = [];\n            return stream.position;\n          },\n          read: function read(stream, buffer, offset, length, position) {\n            if (length < 0 || position < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 1) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!stream.stream_ops.read) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var seeking = typeof position !== \"undefined\";\n\n            if (!seeking) {\n              position = stream.position;\n            } else if (!stream.seekable) {\n              throw new FS.ErrnoError(70);\n            }\n\n            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n            if (!seeking) stream.position += bytesRead;\n            return bytesRead;\n          },\n          write: function write(stream, buffer, offset, length, position, canOwn) {\n            if (length < 0 || position < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!stream.stream_ops.write) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (stream.seekable && stream.flags & 1024) {\n              FS.llseek(stream, 0, 2);\n            }\n\n            var seeking = typeof position !== \"undefined\";\n\n            if (!seeking) {\n              position = stream.position;\n            } else if (!stream.seekable) {\n              throw new FS.ErrnoError(70);\n            }\n\n            var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n            if (!seeking) stream.position += bytesWritten;\n            return bytesWritten;\n          },\n          allocate: function allocate(stream, offset, length) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (offset < 0 || length <= 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(43);\n            }\n\n            if (!stream.stream_ops.allocate) {\n              throw new FS.ErrnoError(138);\n            }\n\n            stream.stream_ops.allocate(stream, offset, length);\n          },\n          mmap: function mmap(stream, address, length, position, prot, flags) {\n            if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n              throw new FS.ErrnoError(2);\n            }\n\n            if ((stream.flags & 2097155) === 1) {\n              throw new FS.ErrnoError(2);\n            }\n\n            if (!stream.stream_ops.mmap) {\n              throw new FS.ErrnoError(43);\n            }\n\n            return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n          },\n          msync: function msync(stream, buffer, offset, length, mmapFlags) {\n            if (!stream || !stream.stream_ops.msync) {\n              return 0;\n            }\n\n            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n          },\n          munmap: function munmap(stream) {\n            return 0;\n          },\n          ioctl: function ioctl(stream, cmd, arg) {\n            if (!stream.stream_ops.ioctl) {\n              throw new FS.ErrnoError(59);\n            }\n\n            return stream.stream_ops.ioctl(stream, cmd, arg);\n          },\n          readFile: function readFile(path, opts) {\n            opts = opts || {};\n            opts.flags = opts.flags || 0;\n            opts.encoding = opts.encoding || \"binary\";\n\n            if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n              throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n            }\n\n            var ret;\n            var stream = FS.open(path, opts.flags);\n            var stat = FS.stat(path);\n            var length = stat.size;\n            var buf = new Uint8Array(length);\n            FS.read(stream, buf, 0, length, 0);\n\n            if (opts.encoding === \"utf8\") {\n              ret = UTF8ArrayToString(buf, 0);\n            } else if (opts.encoding === \"binary\") {\n              ret = buf;\n            }\n\n            FS.close(stream);\n            return ret;\n          },\n          writeFile: function writeFile(path, data, opts) {\n            opts = opts || {};\n            opts.flags = opts.flags || 577;\n            var stream = FS.open(path, opts.flags, opts.mode);\n\n            if (typeof data === \"string\") {\n              var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n              var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n              FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n            } else if (ArrayBuffer.isView(data)) {\n              FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n            } else {\n              throw new Error(\"Unsupported data type\");\n            }\n\n            FS.close(stream);\n          },\n          cwd: function cwd() {\n            return FS.currentPath;\n          },\n          chdir: function chdir(path) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n\n            if (lookup.node === null) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!FS.isDir(lookup.node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n\n            var errCode = FS.nodePermissions(lookup.node, \"x\");\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            FS.currentPath = lookup.path;\n          },\n          createDefaultDirectories: function createDefaultDirectories() {\n            FS.mkdir(\"/tmp\");\n            FS.mkdir(\"/home\");\n            FS.mkdir(\"/home/web_user\");\n          },\n          createDefaultDevices: function createDefaultDevices() {\n            FS.mkdir(\"/dev\");\n            FS.registerDevice(FS.makedev(1, 3), {\n              read: function read() {\n                return 0;\n              },\n              write: function write(stream, buffer, offset, length, pos) {\n                return length;\n              }\n            });\n            FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n            FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n            FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n            var random_device = getRandomDevice();\n            FS.createDevice(\"/dev\", \"random\", random_device);\n            FS.createDevice(\"/dev\", \"urandom\", random_device);\n            FS.mkdir(\"/dev/shm\");\n            FS.mkdir(\"/dev/shm/tmp\");\n          },\n          createSpecialDirectories: function createSpecialDirectories() {\n            FS.mkdir(\"/proc\");\n            var proc_self = FS.mkdir(\"/proc/self\");\n            FS.mkdir(\"/proc/self/fd\");\n            FS.mount({\n              mount: function mount() {\n                var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n                node.node_ops = {\n                  lookup: function lookup(parent, name) {\n                    var fd = +name;\n                    var stream = FS.getStream(fd);\n                    if (!stream) throw new FS.ErrnoError(8);\n                    var ret = {\n                      parent: null,\n                      mount: {\n                        mountpoint: \"fake\"\n                      },\n                      node_ops: {\n                        readlink: function readlink() {\n                          return stream.path;\n                        }\n                      }\n                    };\n                    ret.parent = ret;\n                    return ret;\n                  }\n                };\n                return node;\n              }\n            }, {}, \"/proc/self/fd\");\n          },\n          createStandardStreams: function createStandardStreams() {\n            if (Module[\"stdin\"]) {\n              FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n            } else {\n              FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n            }\n\n            if (Module[\"stdout\"]) {\n              FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n            } else {\n              FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n            }\n\n            if (Module[\"stderr\"]) {\n              FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n            } else {\n              FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n            }\n\n            FS.open(\"/dev/stdin\", 0);\n            FS.open(\"/dev/stdout\", 1);\n            FS.open(\"/dev/stderr\", 1);\n          },\n          ensureErrnoError: function ensureErrnoError() {\n            if (FS.ErrnoError) return;\n\n            FS.ErrnoError = function ErrnoError(errno, node) {\n              this.node = node;\n\n              this.setErrno = function (errno) {\n                this.errno = errno;\n              };\n\n              this.setErrno(errno);\n              this.message = \"FS error\";\n            };\n\n            FS.ErrnoError.prototype = new Error();\n            FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n            [44].forEach(function (code) {\n              FS.genericErrors[code] = new FS.ErrnoError(code);\n              FS.genericErrors[code].stack = \"<generic error, no stack>\";\n            });\n          },\n          staticInit: function staticInit() {\n            FS.ensureErrnoError();\n            FS.nameTable = new Array(4096);\n            FS.mount(MEMFS, {}, \"/\");\n            FS.createDefaultDirectories();\n            FS.createDefaultDevices();\n            FS.createSpecialDirectories();\n            FS.filesystems = {\n              \"MEMFS\": MEMFS\n            };\n          },\n          init: function init(input, output, error) {\n            FS.init.initialized = true;\n            FS.ensureErrnoError();\n            Module[\"stdin\"] = input || Module[\"stdin\"];\n            Module[\"stdout\"] = output || Module[\"stdout\"];\n            Module[\"stderr\"] = error || Module[\"stderr\"];\n            FS.createStandardStreams();\n          },\n          quit: function quit() {\n            FS.init.initialized = false;\n            var fflush = Module[\"_fflush\"];\n            if (fflush) fflush(0);\n\n            for (var i = 0; i < FS.streams.length; i++) {\n              var stream = FS.streams[i];\n\n              if (!stream) {\n                continue;\n              }\n\n              FS.close(stream);\n            }\n          },\n          getMode: function getMode(canRead, canWrite) {\n            var mode = 0;\n            if (canRead) mode |= 292 | 73;\n            if (canWrite) mode |= 146;\n            return mode;\n          },\n          findObject: function findObject(path, dontResolveLastLink) {\n            var ret = FS.analyzePath(path, dontResolveLastLink);\n\n            if (ret.exists) {\n              return ret.object;\n            } else {\n              return null;\n            }\n          },\n          analyzePath: function analyzePath(path, dontResolveLastLink) {\n            try {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontResolveLastLink\n              });\n              path = lookup.path;\n            } catch (e) {}\n\n            var ret = {\n              isRoot: false,\n              exists: false,\n              error: 0,\n              name: null,\n              path: null,\n              object: null,\n              parentExists: false,\n              parentPath: null,\n              parentObject: null\n            };\n\n            try {\n              var lookup = FS.lookupPath(path, {\n                parent: true\n              });\n              ret.parentExists = true;\n              ret.parentPath = lookup.path;\n              ret.parentObject = lookup.node;\n              ret.name = PATH.basename(path);\n              lookup = FS.lookupPath(path, {\n                follow: !dontResolveLastLink\n              });\n              ret.exists = true;\n              ret.path = lookup.path;\n              ret.object = lookup.node;\n              ret.name = lookup.node.name;\n              ret.isRoot = lookup.path === \"/\";\n            } catch (e) {\n              ret.error = e.errno;\n            }\n\n            return ret;\n          },\n          createPath: function createPath(parent, path, canRead, canWrite) {\n            parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n            var parts = path.split(\"/\").reverse();\n\n            while (parts.length) {\n              var part = parts.pop();\n              if (!part) continue;\n              var current = PATH.join2(parent, part);\n\n              try {\n                FS.mkdir(current);\n              } catch (e) {}\n\n              parent = current;\n            }\n\n            return current;\n          },\n          createFile: function createFile(parent, name, properties, canRead, canWrite) {\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS.getMode(canRead, canWrite);\n            return FS.create(path, mode);\n          },\n          createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n            var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n            var mode = FS.getMode(canRead, canWrite);\n            var node = FS.create(path, mode);\n\n            if (data) {\n              if (typeof data === \"string\") {\n                var arr = new Array(data.length);\n\n                for (var i = 0, len = data.length; i < len; ++i) {\n                  arr[i] = data.charCodeAt(i);\n                }\n\n                data = arr;\n              }\n\n              FS.chmod(node, mode | 146);\n              var stream = FS.open(node, 577);\n              FS.write(stream, data, 0, data.length, 0, canOwn);\n              FS.close(stream);\n              FS.chmod(node, mode);\n            }\n\n            return node;\n          },\n          createDevice: function createDevice(parent, name, input, output) {\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS.getMode(!!input, !!output);\n            if (!FS.createDevice.major) FS.createDevice.major = 64;\n            var dev = FS.makedev(FS.createDevice.major++, 0);\n            FS.registerDevice(dev, {\n              open: function open(stream) {\n                stream.seekable = false;\n              },\n              close: function close(stream) {\n                if (output && output.buffer && output.buffer.length) {\n                  output(10);\n                }\n              },\n              read: function read(stream, buffer, offset, length, pos) {\n                var bytesRead = 0;\n\n                for (var i = 0; i < length; i++) {\n                  var result;\n\n                  try {\n                    result = input();\n                  } catch (e) {\n                    throw new FS.ErrnoError(29);\n                  }\n\n                  if (result === undefined && bytesRead === 0) {\n                    throw new FS.ErrnoError(6);\n                  }\n\n                  if (result === null || result === undefined) break;\n                  bytesRead++;\n                  buffer[offset + i] = result;\n                }\n\n                if (bytesRead) {\n                  stream.node.timestamp = Date.now();\n                }\n\n                return bytesRead;\n              },\n              write: function write(stream, buffer, offset, length, pos) {\n                for (var i = 0; i < length; i++) {\n                  try {\n                    output(buffer[offset + i]);\n                  } catch (e) {\n                    throw new FS.ErrnoError(29);\n                  }\n                }\n\n                if (length) {\n                  stream.node.timestamp = Date.now();\n                }\n\n                return i;\n              }\n            });\n            return FS.mkdev(path, mode, dev);\n          },\n          forceLoadFile: function forceLoadFile(obj) {\n            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n\n            if (typeof XMLHttpRequest !== \"undefined\") {\n              throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n            } else if (read_) {\n              try {\n                obj.contents = intArrayFromString(read_(obj.url), true);\n                obj.usedBytes = obj.contents.length;\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            } else {\n              throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n            }\n          },\n          createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {\n            function LazyUint8Array() {\n              this.lengthKnown = false;\n              this.chunks = [];\n            }\n\n            LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n              if (idx > this.length - 1 || idx < 0) {\n                return undefined;\n              }\n\n              var chunkOffset = idx % this.chunkSize;\n              var chunkNum = idx / this.chunkSize | 0;\n              return this.getter(chunkNum)[chunkOffset];\n            };\n\n            LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n              this.getter = getter;\n            };\n\n            LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"HEAD\", url, false);\n              xhr.send(null);\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n              var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n              var header;\n              var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n              var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n              var chunkSize = 1024 * 1024;\n              if (!hasByteServing) chunkSize = datalength;\n\n              var doXHR = function doXHR(from, to) {\n                if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n\n                if (xhr.overrideMimeType) {\n                  xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n                }\n\n                xhr.send(null);\n                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n\n                if (xhr.response !== undefined) {\n                  return new Uint8Array(xhr.response || []);\n                } else {\n                  return intArrayFromString(xhr.responseText || \"\", true);\n                }\n              };\n\n              var lazyArray = this;\n              lazyArray.setDataGetter(function (chunkNum) {\n                var start = chunkNum * chunkSize;\n                var end = (chunkNum + 1) * chunkSize - 1;\n                end = Math.min(end, datalength - 1);\n\n                if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n                  lazyArray.chunks[chunkNum] = doXHR(start, end);\n                }\n\n                if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n                return lazyArray.chunks[chunkNum];\n              });\n\n              if (usesGzip || !datalength) {\n                chunkSize = datalength = 1;\n                datalength = this.getter(0).length;\n                chunkSize = datalength;\n                out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n              }\n\n              this._length = datalength;\n              this._chunkSize = chunkSize;\n              this.lengthKnown = true;\n            };\n\n            if (typeof XMLHttpRequest !== \"undefined\") {\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n              var lazyArray = new LazyUint8Array();\n              var properties = {\n                isDevice: false,\n                contents: lazyArray\n              };\n            } else {\n              var properties = {\n                isDevice: false,\n                url: url\n              };\n            }\n\n            var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n            if (properties.contents) {\n              node.contents = properties.contents;\n            } else if (properties.url) {\n              node.contents = null;\n              node.url = properties.url;\n            }\n\n            Object.defineProperties(node, {\n              usedBytes: {\n                get: function get() {\n                  return this.contents.length;\n                }\n              }\n            });\n            var stream_ops = {};\n            var keys = Object.keys(node.stream_ops);\n            keys.forEach(function (key) {\n              var fn = node.stream_ops[key];\n\n              stream_ops[key] = function forceLoadLazyFile() {\n                FS.forceLoadFile(node);\n                return fn.apply(null, arguments);\n              };\n            });\n\n            stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n              FS.forceLoadFile(node);\n              var contents = stream.node.contents;\n              if (position >= contents.length) return 0;\n              var size = Math.min(contents.length - position, length);\n\n              if (contents.slice) {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents[position + i];\n                }\n              } else {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents.get(position + i);\n                }\n              }\n\n              return size;\n            };\n\n            node.stream_ops = stream_ops;\n            return node;\n          },\n          createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n            Browser.init();\n            var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n\n            function processData(byteArray) {\n              function finish(byteArray) {\n                if (preFinish) preFinish();\n\n                if (!dontCreateFile) {\n                  FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                }\n\n                if (onload) onload();\n                removeRunDependency();\n              }\n\n              var handled = false;\n              Module[\"preloadPlugins\"].forEach(function (plugin) {\n                if (handled) return;\n\n                if (plugin[\"canHandle\"](fullname)) {\n                  plugin[\"handle\"](byteArray, fullname, finish, function () {\n                    if (onerror) onerror();\n                    removeRunDependency();\n                  });\n                  handled = true;\n                }\n              });\n              if (!handled) finish(byteArray);\n            }\n\n            addRunDependency();\n\n            if (typeof url == \"string\") {\n              asyncLoad(url, function (byteArray) {\n                processData(byteArray);\n              }, onerror);\n            } else {\n              processData(url);\n            }\n          },\n          indexedDB: function indexedDB() {\n            return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n          },\n          DB_NAME: function DB_NAME() {\n            return \"EM_FS_\" + window.location.pathname;\n          },\n          DB_VERSION: 20,\n          DB_STORE_NAME: \"FILE_DATA\",\n          saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {\n            onload = onload || function () {};\n\n            onerror = onerror || function () {};\n\n            var indexedDB = FS.indexedDB();\n\n            try {\n              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n            } catch (e) {\n              return onerror(e);\n            }\n\n            openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n              out(\"creating db\");\n              var db = openRequest.result;\n              db.createObjectStore(FS.DB_STORE_NAME);\n            };\n\n            openRequest.onsuccess = function openRequest_onsuccess() {\n              var db = openRequest.result;\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n              var files = transaction.objectStore(FS.DB_STORE_NAME);\n              var ok = 0,\n                  fail = 0,\n                  total = paths.length;\n\n              function finish() {\n                if (fail == 0) onload();else onerror();\n              }\n\n              paths.forEach(function (path) {\n                var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n\n                putRequest.onsuccess = function putRequest_onsuccess() {\n                  ok++;\n                  if (ok + fail == total) finish();\n                };\n\n                putRequest.onerror = function putRequest_onerror() {\n                  fail++;\n                  if (ok + fail == total) finish();\n                };\n              });\n              transaction.onerror = onerror;\n            };\n\n            openRequest.onerror = onerror;\n          },\n          loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {\n            onload = onload || function () {};\n\n            onerror = onerror || function () {};\n\n            var indexedDB = FS.indexedDB();\n\n            try {\n              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n            } catch (e) {\n              return onerror(e);\n            }\n\n            openRequest.onupgradeneeded = onerror;\n\n            openRequest.onsuccess = function openRequest_onsuccess() {\n              var db = openRequest.result;\n\n              try {\n                var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n              } catch (e) {\n                onerror(e);\n                return;\n              }\n\n              var files = transaction.objectStore(FS.DB_STORE_NAME);\n              var ok = 0,\n                  fail = 0,\n                  total = paths.length;\n\n              function finish() {\n                if (fail == 0) onload();else onerror();\n              }\n\n              paths.forEach(function (path) {\n                var getRequest = files.get(path);\n\n                getRequest.onsuccess = function getRequest_onsuccess() {\n                  if (FS.analyzePath(path).exists) {\n                    FS.unlink(path);\n                  }\n\n                  FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                  ok++;\n                  if (ok + fail == total) finish();\n                };\n\n                getRequest.onerror = function getRequest_onerror() {\n                  fail++;\n                  if (ok + fail == total) finish();\n                };\n              });\n              transaction.onerror = onerror;\n            };\n\n            openRequest.onerror = onerror;\n          }\n        };\n        var SYSCALLS = {\n          mappings: {},\n          DEFAULT_POLLMASK: 5,\n          calculateAt: function calculateAt(dirfd, path, allowEmpty) {\n            if (path[0] === \"/\") {\n              return path;\n            }\n\n            var dir;\n\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream) throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n\n            if (path.length == 0) {\n              if (!allowEmpty) {\n                throw new FS.ErrnoError(44);\n              }\n\n              return dir;\n            }\n\n            return PATH.join2(dir, path);\n          },\n          doStat: function doStat(func, path, buf) {\n            try {\n              var stat = func(path);\n            } catch (e) {\n              if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                return -54;\n              }\n\n              throw e;\n            }\n\n            HEAP32[buf >> 2] = stat.dev;\n            HEAP32[buf + 4 >> 2] = 0;\n            HEAP32[buf + 8 >> 2] = stat.ino;\n            HEAP32[buf + 12 >> 2] = stat.mode;\n            HEAP32[buf + 16 >> 2] = stat.nlink;\n            HEAP32[buf + 20 >> 2] = stat.uid;\n            HEAP32[buf + 24 >> 2] = stat.gid;\n            HEAP32[buf + 28 >> 2] = stat.rdev;\n            HEAP32[buf + 32 >> 2] = 0;\n            tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n            HEAP32[buf + 48 >> 2] = 4096;\n            HEAP32[buf + 52 >> 2] = stat.blocks;\n            HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n            HEAP32[buf + 60 >> 2] = 0;\n            HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n            HEAP32[buf + 68 >> 2] = 0;\n            HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n            HEAP32[buf + 76 >> 2] = 0;\n            tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n            return 0;\n          },\n          doMsync: function doMsync(addr, stream, len, flags, offset) {\n            var buffer = HEAPU8.slice(addr, addr + len);\n            FS.msync(stream, buffer, offset, len, flags);\n          },\n          doMkdir: function doMkdir(path, mode) {\n            path = PATH.normalize(path);\n            if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n            FS.mkdir(path, mode, 0);\n            return 0;\n          },\n          doMknod: function doMknod(path, mode, dev) {\n            switch (mode & 61440) {\n              case 32768:\n              case 8192:\n              case 24576:\n              case 4096:\n              case 49152:\n                break;\n\n              default:\n                return -28;\n            }\n\n            FS.mknod(path, mode, dev);\n            return 0;\n          },\n          doReadlink: function doReadlink(path, buf, bufsize) {\n            if (bufsize <= 0) return -28;\n            var ret = FS.readlink(path);\n            var len = Math.min(bufsize, lengthBytesUTF8(ret));\n            var endChar = HEAP8[buf + len];\n            stringToUTF8(ret, buf, bufsize + 1);\n            HEAP8[buf + len] = endChar;\n            return len;\n          },\n          doAccess: function doAccess(path, amode) {\n            if (amode & ~7) {\n              return -28;\n            }\n\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n\n            if (!node) {\n              return -44;\n            }\n\n            var perms = \"\";\n            if (amode & 4) perms += \"r\";\n            if (amode & 2) perms += \"w\";\n            if (amode & 1) perms += \"x\";\n\n            if (perms && FS.nodePermissions(node, perms)) {\n              return -2;\n            }\n\n            return 0;\n          },\n          doDup: function doDup(path, flags, suggestFD) {\n            var suggest = FS.getStream(suggestFD);\n            if (suggest) FS.close(suggest);\n            return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n          },\n          doReadv: function doReadv(stream, iov, iovcnt, offset) {\n            var ret = 0;\n\n            for (var i = 0; i < iovcnt; i++) {\n              var ptr = HEAP32[iov + i * 8 >> 2];\n              var len = HEAP32[iov + (i * 8 + 4) >> 2];\n              var curr = FS.read(stream, HEAP8, ptr, len, offset);\n              if (curr < 0) return -1;\n              ret += curr;\n              if (curr < len) break;\n            }\n\n            return ret;\n          },\n          doWritev: function doWritev(stream, iov, iovcnt, offset) {\n            var ret = 0;\n\n            for (var i = 0; i < iovcnt; i++) {\n              var ptr = HEAP32[iov + i * 8 >> 2];\n              var len = HEAP32[iov + (i * 8 + 4) >> 2];\n              var curr = FS.write(stream, HEAP8, ptr, len, offset);\n              if (curr < 0) return -1;\n              ret += curr;\n            }\n\n            return ret;\n          },\n          varargs: undefined,\n          get: function get() {\n            SYSCALLS.varargs += 4;\n            var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n            return ret;\n          },\n          getStr: function getStr(ptr) {\n            var ret = UTF8ToString(ptr);\n            return ret;\n          },\n          getStreamFromFD: function getStreamFromFD(fd) {\n            var stream = FS.getStream(fd);\n            if (!stream) throw new FS.ErrnoError(8);\n            return stream;\n          },\n          get64: function get64(low, high) {\n            return low;\n          }\n        };\n\n        function ___syscall_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function _abort() {\n          abort(\"\");\n        }\n\n        var readAsmConstArgsArray = [];\n\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n\n          while (ch = HEAPU8[sigPtr++]) {\n            var readAsmConstArgsDouble = ch < 105;\n            if (readAsmConstArgsDouble && buf & 1) buf++;\n            readAsmConstArgsArray.push(readAsmConstArgsDouble ? HEAPF64[buf++ >> 1] : HEAP32[buf]);\n            ++buf;\n          }\n\n          return readAsmConstArgsArray;\n        }\n\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest, src, src + num);\n        }\n\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {}\n        }\n\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = HEAPU8.length;\n          requestedSize = requestedSize >>> 0;\n          var maxHeapSize = 2147483648;\n\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n\n            if (replacement) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        var ENV = {};\n\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = {\n              \"USER\": \"web_user\",\n              \"LOGNAME\": \"web_user\",\n              \"PATH\": \"/\",\n              \"PWD\": \"/\",\n              \"HOME\": \"/home/web_user\",\n              \"LANG\": lang,\n              \"_\": getExecutableName()\n            };\n\n            for (var x in ENV) {\n              if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n            }\n\n            var strings = [];\n\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n\n            getEnvStrings.strings = strings;\n          }\n\n          return getEnvStrings.strings;\n        }\n\n        function _environ_get(__environ, environ_buf) {\n          var bufSize = 0;\n          getEnvStrings().forEach(function (string, i) {\n            var ptr = environ_buf + bufSize;\n            HEAP32[__environ + i * 4 >> 2] = ptr;\n            writeAsciiToMemory(string, ptr);\n            bufSize += string.length + 1;\n          });\n          return 0;\n        }\n\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          var strings = getEnvStrings();\n          HEAP32[penviron_count >> 2] = strings.length;\n          var bufSize = 0;\n          strings.forEach(function (string) {\n            bufSize += string.length + 1;\n          });\n          HEAP32[penviron_buf_size >> 2] = bufSize;\n          return 0;\n        }\n\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _gettimeofday(ptr) {\n          var now = Date.now();\n          HEAP32[ptr >> 2] = now / 1e3 | 0;\n          HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;\n          return 0;\n        }\n\n        var FSNode = function FSNode(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, {\n          read: {\n            get: function get() {\n              return (this.mode & readMode) === readMode;\n            },\n            set: function set(val) {\n              val ? this.mode |= readMode : this.mode &= ~readMode;\n            }\n          },\n          write: {\n            get: function get() {\n              return (this.mode & writeMode) === writeMode;\n            },\n            set: function set(val) {\n              val ? this.mode |= writeMode : this.mode &= ~writeMode;\n            }\n          },\n          isFolder: {\n            get: function get() {\n              return FS.isDir(this.mode);\n            }\n          },\n          isDevice: {\n            get: function get() {\n              return FS.isChrdev(this.mode);\n            }\n          }\n        });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull) u8array.length = numBytesWritten;\n          return u8array;\n        }\n\n        var asmLibraryArg = {\n          \"h\": ___syscall_open,\n          \"b\": _abort,\n          \"a\": _emscripten_asm_const_int,\n          \"k\": _emscripten_memcpy_big,\n          \"e\": _emscripten_resize_heap,\n          \"f\": _environ_get,\n          \"g\": _environ_sizes_get,\n          \"d\": _fd_close,\n          \"i\": _fd_read,\n          \"j\": _fd_seek,\n          \"c\": _fd_write,\n          \"l\": _gettimeofday\n        };\n        createWasm();\n\n        Module[\"___wasm_call_ctors\"] = function () {\n          return (Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"n\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_CExpat_0 = Module[\"_emscripten_bind_CExpat_CExpat_0\"] = function () {\n          return (_emscripten_bind_CExpat_CExpat_0 = Module[\"_emscripten_bind_CExpat_CExpat_0\"] = Module[\"asm\"][\"o\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_version_0 = Module[\"_emscripten_bind_CExpat_version_0\"] = function () {\n          return (_emscripten_bind_CExpat_version_0 = Module[\"_emscripten_bind_CExpat_version_0\"] = Module[\"asm\"][\"p\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_create_0 = Module[\"_emscripten_bind_CExpat_create_0\"] = function () {\n          return (_emscripten_bind_CExpat_create_0 = Module[\"_emscripten_bind_CExpat_create_0\"] = Module[\"asm\"][\"q\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_destroy_0 = Module[\"_emscripten_bind_CExpat_destroy_0\"] = function () {\n          return (_emscripten_bind_CExpat_destroy_0 = Module[\"_emscripten_bind_CExpat_destroy_0\"] = Module[\"asm\"][\"r\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_parse_1 = Module[\"_emscripten_bind_CExpat_parse_1\"] = function () {\n          return (_emscripten_bind_CExpat_parse_1 = Module[\"_emscripten_bind_CExpat_parse_1\"] = Module[\"asm\"][\"s\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_tag_0 = Module[\"_emscripten_bind_CExpat_tag_0\"] = function () {\n          return (_emscripten_bind_CExpat_tag_0 = Module[\"_emscripten_bind_CExpat_tag_0\"] = Module[\"asm\"][\"t\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_attrs_0 = Module[\"_emscripten_bind_CExpat_attrs_0\"] = function () {\n          return (_emscripten_bind_CExpat_attrs_0 = Module[\"_emscripten_bind_CExpat_attrs_0\"] = Module[\"asm\"][\"u\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_content_0 = Module[\"_emscripten_bind_CExpat_content_0\"] = function () {\n          return (_emscripten_bind_CExpat_content_0 = Module[\"_emscripten_bind_CExpat_content_0\"] = Module[\"asm\"][\"v\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_startElement_0 = Module[\"_emscripten_bind_CExpat_startElement_0\"] = function () {\n          return (_emscripten_bind_CExpat_startElement_0 = Module[\"_emscripten_bind_CExpat_startElement_0\"] = Module[\"asm\"][\"w\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_endElement_0 = Module[\"_emscripten_bind_CExpat_endElement_0\"] = function () {\n          return (_emscripten_bind_CExpat_endElement_0 = Module[\"_emscripten_bind_CExpat_endElement_0\"] = Module[\"asm\"][\"x\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat_characterData_0 = Module[\"_emscripten_bind_CExpat_characterData_0\"] = function () {\n          return (_emscripten_bind_CExpat_characterData_0 = Module[\"_emscripten_bind_CExpat_characterData_0\"] = Module[\"asm\"][\"y\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpat___destroy___0 = Module[\"_emscripten_bind_CExpat___destroy___0\"] = function () {\n          return (_emscripten_bind_CExpat___destroy___0 = Module[\"_emscripten_bind_CExpat___destroy___0\"] = Module[\"asm\"][\"z\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = function () {\n          return (_emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = Module[\"asm\"][\"A\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpatJS_CExpatJS_0 = Module[\"_emscripten_bind_CExpatJS_CExpatJS_0\"] = function () {\n          return (_emscripten_bind_CExpatJS_CExpatJS_0 = Module[\"_emscripten_bind_CExpatJS_CExpatJS_0\"] = Module[\"asm\"][\"B\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpatJS_startElement_0 = Module[\"_emscripten_bind_CExpatJS_startElement_0\"] = function () {\n          return (_emscripten_bind_CExpatJS_startElement_0 = Module[\"_emscripten_bind_CExpatJS_startElement_0\"] = Module[\"asm\"][\"C\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpatJS_endElement_0 = Module[\"_emscripten_bind_CExpatJS_endElement_0\"] = function () {\n          return (_emscripten_bind_CExpatJS_endElement_0 = Module[\"_emscripten_bind_CExpatJS_endElement_0\"] = Module[\"asm\"][\"D\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpatJS_characterData_0 = Module[\"_emscripten_bind_CExpatJS_characterData_0\"] = function () {\n          return (_emscripten_bind_CExpatJS_characterData_0 = Module[\"_emscripten_bind_CExpatJS_characterData_0\"] = Module[\"asm\"][\"E\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_CExpatJS___destroy___0 = Module[\"_emscripten_bind_CExpatJS___destroy___0\"] = function () {\n          return (_emscripten_bind_CExpatJS___destroy___0 = Module[\"_emscripten_bind_CExpatJS___destroy___0\"] = Module[\"asm\"][\"F\"]).apply(null, arguments);\n        };\n\n        Module[\"_malloc\"] = function () {\n          return (Module[\"_malloc\"] = Module[\"asm\"][\"H\"]).apply(null, arguments);\n        };\n\n        var calledRun;\n\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun) run();\n          if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n\n        function run(args) {\n          if (runDependencies > 0) {\n            return;\n          }\n\n          preRun();\n\n          if (runDependencies > 0) {\n            return;\n          }\n\n          function doRun() {\n            if (calledRun) return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT) return;\n            initRuntime();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n            postRun();\n          }\n\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function () {\n              setTimeout(function () {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n\n        Module[\"run\"] = run;\n\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n\n        run();\n\n        function WrapperObject() {}\n\n        WrapperObject.prototype = Object.create(WrapperObject.prototype);\n        WrapperObject.prototype.constructor = WrapperObject;\n        WrapperObject.prototype.__class__ = WrapperObject;\n        WrapperObject.__cache__ = {};\n        Module[\"WrapperObject\"] = WrapperObject;\n\n        function getCache(__class__) {\n          return (__class__ || WrapperObject).__cache__;\n        }\n\n        Module[\"getCache\"] = getCache;\n\n        function wrapPointer(ptr, __class__) {\n          var cache = getCache(__class__);\n          var ret = cache[ptr];\n          if (ret) return ret;\n          ret = Object.create((__class__ || WrapperObject).prototype);\n          ret.ptr = ptr;\n          return cache[ptr] = ret;\n        }\n\n        Module[\"wrapPointer\"] = wrapPointer;\n\n        function castObject(obj, __class__) {\n          return wrapPointer(obj.ptr, __class__);\n        }\n\n        Module[\"castObject\"] = castObject;\n        Module[\"NULL\"] = wrapPointer(0);\n\n        function destroy(obj) {\n          if (!obj[\"__destroy__\"]) throw \"Error: Cannot destroy object. (Did you create it yourself?)\";\n          obj[\"__destroy__\"]();\n          delete getCache(obj.__class__)[obj.ptr];\n        }\n\n        Module[\"destroy\"] = destroy;\n\n        function compare(obj1, obj2) {\n          return obj1.ptr === obj2.ptr;\n        }\n\n        Module[\"compare\"] = compare;\n\n        function getPointer(obj) {\n          return obj.ptr;\n        }\n\n        Module[\"getPointer\"] = getPointer;\n\n        function getClass(obj) {\n          return obj.__class__;\n        }\n\n        Module[\"getClass\"] = getClass;\n        var ensureCache = {\n          buffer: 0,\n          size: 0,\n          pos: 0,\n          temps: [],\n          needed: 0,\n          prepare: function prepare() {\n            if (ensureCache.needed) {\n              for (var i = 0; i < ensureCache.temps.length; i++) {\n                Module[\"_free\"](ensureCache.temps[i]);\n              }\n\n              ensureCache.temps.length = 0;\n              Module[\"_free\"](ensureCache.buffer);\n              ensureCache.buffer = 0;\n              ensureCache.size += ensureCache.needed;\n              ensureCache.needed = 0;\n            }\n\n            if (!ensureCache.buffer) {\n              ensureCache.size += 128;\n              ensureCache.buffer = Module[\"_malloc\"](ensureCache.size);\n              assert(ensureCache.buffer);\n            }\n\n            ensureCache.pos = 0;\n          },\n          alloc: function alloc(array, view) {\n            assert(ensureCache.buffer);\n            var bytes = view.BYTES_PER_ELEMENT;\n            var len = array.length * bytes;\n            len = len + 7 & -8;\n            var ret;\n\n            if (ensureCache.pos + len >= ensureCache.size) {\n              assert(len > 0);\n              ensureCache.needed += len;\n              ret = Module[\"_malloc\"](len);\n              ensureCache.temps.push(ret);\n            } else {\n              ret = ensureCache.buffer + ensureCache.pos;\n              ensureCache.pos += len;\n            }\n\n            return ret;\n          },\n          copy: function copy(array, view, offset) {\n            offset >>>= 0;\n            var bytes = view.BYTES_PER_ELEMENT;\n\n            switch (bytes) {\n              case 2:\n                offset >>>= 1;\n                break;\n\n              case 4:\n                offset >>>= 2;\n                break;\n\n              case 8:\n                offset >>>= 3;\n                break;\n            }\n\n            for (var i = 0; i < array.length; i++) {\n              view[offset + i] = array[i];\n            }\n          }\n        };\n\n        function ensureString(value) {\n          if (typeof value === \"string\") {\n            var intArray = intArrayFromString(value);\n            var offset = ensureCache.alloc(intArray, HEAP8);\n            ensureCache.copy(intArray, HEAP8, offset);\n            return offset;\n          }\n\n          return value;\n        }\n\n        function CExpat() {\n          this.ptr = _emscripten_bind_CExpat_CExpat_0();\n          getCache(CExpat)[this.ptr] = this;\n        }\n\n        CExpat.prototype = Object.create(WrapperObject.prototype);\n        CExpat.prototype.constructor = CExpat;\n        CExpat.prototype.__class__ = CExpat;\n        CExpat.__cache__ = {};\n        Module[\"CExpat\"] = CExpat;\n\n        CExpat.prototype[\"version\"] = CExpat.prototype.version = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_CExpat_version_0(self));\n        };\n\n        CExpat.prototype[\"create\"] = CExpat.prototype.create = function () {\n          var self = this.ptr;\n          return !!_emscripten_bind_CExpat_create_0(self);\n        };\n\n        CExpat.prototype[\"destroy\"] = CExpat.prototype.destroy = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpat_destroy_0(self);\n        };\n\n        CExpat.prototype[\"parse\"] = CExpat.prototype.parse = function (xml) {\n          var self = this.ptr;\n          ensureCache.prepare();\n          if (xml && typeof xml === \"object\") xml = xml.ptr;else xml = ensureString(xml);\n          return !!_emscripten_bind_CExpat_parse_1(self, xml);\n        };\n\n        CExpat.prototype[\"tag\"] = CExpat.prototype.tag = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_CExpat_tag_0(self));\n        };\n\n        CExpat.prototype[\"attrs\"] = CExpat.prototype.attrs = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_CExpat_attrs_0(self));\n        };\n\n        CExpat.prototype[\"content\"] = CExpat.prototype.content = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_CExpat_content_0(self));\n        };\n\n        CExpat.prototype[\"startElement\"] = CExpat.prototype.startElement = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpat_startElement_0(self);\n        };\n\n        CExpat.prototype[\"endElement\"] = CExpat.prototype.endElement = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpat_endElement_0(self);\n        };\n\n        CExpat.prototype[\"characterData\"] = CExpat.prototype.characterData = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpat_characterData_0(self);\n        };\n\n        CExpat.prototype[\"__destroy__\"] = CExpat.prototype.__destroy__ = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpat___destroy___0(self);\n        };\n\n        function VoidPtr() {\n          throw \"cannot construct a VoidPtr, no constructor in IDL\";\n        }\n\n        VoidPtr.prototype = Object.create(WrapperObject.prototype);\n        VoidPtr.prototype.constructor = VoidPtr;\n        VoidPtr.prototype.__class__ = VoidPtr;\n        VoidPtr.__cache__ = {};\n        Module[\"VoidPtr\"] = VoidPtr;\n\n        VoidPtr.prototype[\"__destroy__\"] = VoidPtr.prototype.__destroy__ = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_VoidPtr___destroy___0(self);\n        };\n\n        function CExpatJS() {\n          this.ptr = _emscripten_bind_CExpatJS_CExpatJS_0();\n          getCache(CExpatJS)[this.ptr] = this;\n        }\n\n        CExpatJS.prototype = Object.create(CExpat.prototype);\n        CExpatJS.prototype.constructor = CExpatJS;\n        CExpatJS.prototype.__class__ = CExpatJS;\n        CExpatJS.__cache__ = {};\n        Module[\"CExpatJS\"] = CExpatJS;\n\n        CExpatJS.prototype[\"startElement\"] = CExpatJS.prototype.startElement = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpatJS_startElement_0(self);\n        };\n\n        CExpatJS.prototype[\"endElement\"] = CExpatJS.prototype.endElement = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpatJS_endElement_0(self);\n        };\n\n        CExpatJS.prototype[\"characterData\"] = CExpatJS.prototype.characterData = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpatJS_characterData_0(self);\n        };\n\n        CExpatJS.prototype[\"__destroy__\"] = CExpatJS.prototype.__destroy__ = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_CExpatJS___destroy___0(self);\n        };\n\n        return cpp.ready;\n      };\n    }();\n\n    module.exports = cpp;\n  })(expatlib$2);\n\n  var expatlib = expatlib$2.exports;\n  var expatlib$1 =\n  /*#__PURE__*/\n  Object.freeze(\n  /*#__PURE__*/\n  _mergeNamespaces({\n    __proto__: null,\n    'default': expatlib\n  }, [expatlib$2.exports]));\n\n  function getGlobal() {\n    if (typeof self !== \"undefined\") {\n      return self;\n    }\n\n    if (typeof window !== \"undefined\") {\n      return window;\n    }\n\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n\n    throw new Error(\"unable to locate global object\");\n  }\n\n  var globalNS = getGlobal();\n\n  var _wasmFolder = globalNS.__hpcc_wasmFolder || undefined;\n\n  function wasmFolder(_) {\n    if (!arguments.length) return _wasmFolder;\n    var retVal = _wasmFolder;\n    _wasmFolder = _;\n    return retVal;\n  }\n\n  function trimEnd(str, charToRemove) {\n    while (str.charAt(str.length - 1) === charToRemove) {\n      str = str.substring(0, str.length - 1);\n    }\n\n    return str;\n  }\n\n  function trimStart(str, charToRemove) {\n    while (str.charAt(0) === charToRemove) {\n      str = str.substring(1);\n    }\n\n    return str;\n  }\n\n  function loadWasm(_wasmLib, wf, wasmBinary) {\n    var wasmLib = _wasmLib.default || _wasmLib; //  Prevent double load ---\n\n    if (!wasmLib.__hpcc_promise) {\n      wasmLib.__hpcc_promise = wasmLib({\n        wasmBinary: wasmBinary,\n        locateFile: function locateFile(path, prefix) {\n          return \"\".concat(trimEnd(wf || wasmFolder() || prefix || \".\", \"/\"), \"/\").concat(trimStart(path, \"/\"));\n        }\n      });\n    }\n\n    return wasmLib.__hpcc_promise;\n  } // @ts-ignore\n\n\n  var StackElement =\n  /** @class */\n  function () {\n    function StackElement(tag, attrs) {\n      this.tag = tag;\n      this.attrs = attrs;\n      this._content = \"\";\n    }\n\n    Object.defineProperty(StackElement.prototype, \"content\", {\n      get: function get() {\n        return this._content;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    StackElement.prototype.appendContent = function (content) {\n      this._content += content;\n    };\n\n    return StackElement;\n  }();\n\n  var StackParser =\n  /** @class */\n  function () {\n    function StackParser() {\n      this._stack = [];\n    }\n\n    StackParser.prototype.parse = function (xml, wasmFolder, wasmBinary) {\n      return parse(xml, this, wasmFolder, wasmBinary);\n    };\n\n    StackParser.prototype.top = function () {\n      return this._stack[this._stack.length - 1];\n    };\n\n    StackParser.prototype.startElement = function (tag, attrs) {\n      var retVal = new StackElement(tag, attrs);\n\n      this._stack.push(retVal);\n\n      return retVal;\n    };\n\n    StackParser.prototype.endElement = function (tag) {\n      return this._stack.pop();\n    };\n\n    StackParser.prototype.characterData = function (content) {\n      this.top().appendContent(content);\n    };\n\n    return StackParser;\n  }();\n\n  function parseAttrs(attrs) {\n    var retVal = {};\n    var keys = attrs;\n    var sep = \"\".concat(String.fromCharCode(1));\n    var sep2 = \"\".concat(sep).concat(sep);\n    keys.split(sep2).filter(function (key) {\n      return !!key;\n    }).forEach(function (key) {\n      var parts = key.split(sep);\n      retVal[parts[0]] = parts[1];\n    });\n    return retVal;\n  }\n\n  function expatVersion(wasmFolder, wasmBinary) {\n    return loadWasm(expatlib$1, wasmFolder, wasmBinary).then(function (module) {\n      return module.CExpat.prototype.version();\n    });\n  }\n\n  function parse(xml, callback, wasmFolder, wasmBinary) {\n    return loadWasm(expatlib$1, wasmFolder, wasmBinary).then(function (module) {\n      var parser = new module.CExpatJS();\n\n      parser.startElement = function () {\n        callback.startElement(this.tag(), parseAttrs(this.attrs()));\n      };\n\n      parser.endElement = function () {\n        callback.endElement(this.tag());\n      };\n\n      parser.characterData = function () {\n        callback.characterData(this.content());\n      };\n\n      parser.create();\n      var retVal = parser.parse(xml);\n      parser.destroy();\n      module.destroy(parser);\n      return retVal;\n    });\n  }\n\n  var graphvizlib$2 = {\n    exports: {}\n  };\n\n  (function (module, exports) {\n    var cpp = function () {\n      var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n      return function (cpp) {\n        cpp = cpp || {};\n        var Module = typeof cpp !== \"undefined\" ? cpp : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function (resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n\n        var thisProgram = \"./this.program\";\n\n        var quit_ = function quit_(status, toThrow) {\n          throw toThrow;\n        };\n\n        var ENVIRONMENT_IS_WEB = true;\n        var scriptDirectory = \"\";\n\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n\n          return scriptDirectory + path;\n        }\n\n        var read_, readAsync, readBinary;\n        {\n          if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n\n          {\n            read_ = function read_(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n\n            readAsync = function readAsync(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n\n              xhr.onload = function () {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n\n                onerror();\n              };\n\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n\n        moduleOverrides = null;\n        if (Module[\"arguments\"]) ;\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n        var tempRet0 = 0;\n\n        var setTempRet0 = function setTempRet0(value) {\n          tempRet0 = value;\n        };\n\n        var getTempRet0 = function getTempRet0() {\n          return tempRet0;\n        };\n\n        var wasmBinary;\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n\n        var wasmMemory;\n        var ABORT = false;\n\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n\n          while (heap[endPtr] && !(endPtr >= endIdx)) {\n            ++endPtr;\n          }\n\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n          } else {\n            var str = \"\";\n\n            while (idx < endPtr) {\n              var u0 = heap[idx++];\n\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n\n              var u1 = heap[idx++] & 63;\n\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n\n              var u2 = heap[idx++] & 63;\n\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n              }\n\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n\n          return str;\n        }\n\n        function UTF8ToString(ptr, maxBytesToRead) {\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          if (!(maxBytesToWrite > 0)) return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n\n            if (u <= 127) {\n              if (outIdx >= endIdx) break;\n              heap[outIdx++] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx) break;\n              heap[outIdx++] = 192 | u >> 6;\n              heap[outIdx++] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx) break;\n              heap[outIdx++] = 224 | u >> 12;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx) break;\n              heap[outIdx++] = 240 | u >> 18;\n              heap[outIdx++] = 128 | u >> 12 & 63;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            }\n          }\n\n          heap[outIdx] = 0;\n          return outIdx - startIdx;\n        }\n\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n\n        function lengthBytesUTF8(str) {\n          var len = 0;\n\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n          }\n\n          return len;\n        }\n\n        function writeAsciiToMemory(str, buffer, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n          }\n\n          if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n        }\n\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n\n          return x;\n        }\n\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAP32, HEAPF64;\n\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n\n        Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeKeepaliveCounter = 0;\n\n        function keepRuntimeAlive() {\n          return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n\n        function initRuntime() {\n          if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATINIT__);\n        }\n\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n\n        var runDependencies = 0;\n        var dependenciesFulfilled = null;\n\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n\n        function addRunDependency(id) {\n          runDependencies++;\n\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n\n        function removeRunDependency(id) {\n          runDependencies--;\n\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n\n          if (runDependencies == 0) {\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n\n        function abort(what) {\n          {\n            if (Module[\"onAbort\"]) {\n              Module[\"onAbort\"](what);\n            }\n          }\n          what = \"Aborted(\" + what + \")\";\n          err(what);\n          ABORT = true;\n          what += \". Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n\n        var wasmBinaryFile;\n        wasmBinaryFile = \"graphvizlib.wasm\";\n\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n\n            if (readBinary) ;else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err) {\n            abort(err);\n          }\n        }\n\n        function getBinaryPromise() {\n          if (!wasmBinary && ENVIRONMENT_IS_WEB) {\n            if (typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n              }).then(function (response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n\n                return response[\"arrayBuffer\"]();\n              }).catch(function () {\n                return getBinary(wasmBinaryFile);\n              });\n            }\n          }\n\n          return Promise.resolve().then(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n\n        function createWasm() {\n          var info = {\n            \"a\": asmLibraryArg\n          };\n\n          function receiveInstance(instance, module) {\n            var exports = instance.exports;\n            Module[\"asm\"] = exports;\n            wasmMemory = Module[\"asm\"][\"D\"];\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            wasmTable = Module[\"asm\"][\"M\"];\n            addOnInit(Module[\"asm\"][\"E\"]);\n            removeRunDependency();\n          }\n\n          addRunDependency();\n\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"]);\n          }\n\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function (binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(function (instance) {\n              return instance;\n            }).then(receiver, function (reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n              }).then(function (response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function (reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = {\n          161580: function _($0, $1) {\n            var path = UTF8ToString($0);\n            var data = UTF8ToString($1);\n            FS.createPath(\"/\", PATH.dirname(path));\n            FS.writeFile(PATH.join(\"/\", path), data);\n          }\n        };\n\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n\n            var func = callback.func;\n\n            if (typeof func === \"number\") {\n              if (callback.arg === undefined) {\n                getWasmTableEntry(func)();\n              } else {\n                getWasmTableEntry(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === undefined ? null : callback.arg);\n            }\n          }\n        }\n\n        function getWasmTableEntry(funcPtr) {\n          return wasmTable.get(funcPtr);\n        }\n\n        var _emscripten_get_now;\n\n        _emscripten_get_now = function _emscripten_get_now() {\n          return performance.now();\n        };\n\n        var _emscripten_get_now_is_monotonic = true;\n\n        function setErrNo(value) {\n          HEAP32[___errno_location() >> 2] = value;\n          return value;\n        }\n\n        function _clock_gettime(clk_id, tp) {\n          var now;\n\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n\n          HEAP32[tp >> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n\n        function ___clock_gettime(a0, a1) {\n          return _clock_gettime(a0, a1);\n        }\n\n        var PATH = {\n          splitPath: function splitPath(filename) {\n            var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n            return splitPathRe.exec(filename).slice(1);\n          },\n          normalizeArray: function normalizeArray(parts, allowAboveRoot) {\n            var up = 0;\n\n            for (var i = parts.length - 1; i >= 0; i--) {\n              var last = parts[i];\n\n              if (last === \".\") {\n                parts.splice(i, 1);\n              } else if (last === \"..\") {\n                parts.splice(i, 1);\n                up++;\n              } else if (up) {\n                parts.splice(i, 1);\n                up--;\n              }\n            }\n\n            if (allowAboveRoot) {\n              for (; up; up--) {\n                parts.unshift(\"..\");\n              }\n            }\n\n            return parts;\n          },\n          normalize: function normalize(path) {\n            var isAbsolute = path.charAt(0) === \"/\",\n                trailingSlash = path.substr(-1) === \"/\";\n            path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n              return !!p;\n            }), !isAbsolute).join(\"/\");\n\n            if (!path && !isAbsolute) {\n              path = \".\";\n            }\n\n            if (path && trailingSlash) {\n              path += \"/\";\n            }\n\n            return (isAbsolute ? \"/\" : \"\") + path;\n          },\n          dirname: function dirname(path) {\n            var result = PATH.splitPath(path),\n                root = result[0],\n                dir = result[1];\n\n            if (!root && !dir) {\n              return \".\";\n            }\n\n            if (dir) {\n              dir = dir.substr(0, dir.length - 1);\n            }\n\n            return root + dir;\n          },\n          basename: function basename(path) {\n            if (path === \"/\") return \"/\";\n            path = PATH.normalize(path);\n            path = path.replace(/\\/$/, \"\");\n            var lastSlash = path.lastIndexOf(\"/\");\n            if (lastSlash === -1) return path;\n            return path.substr(lastSlash + 1);\n          },\n          extname: function extname(path) {\n            return PATH.splitPath(path)[3];\n          },\n          join: function join() {\n            var paths = Array.prototype.slice.call(arguments, 0);\n            return PATH.normalize(paths.join(\"/\"));\n          },\n          join2: function join2(l, r) {\n            return PATH.normalize(l + \"/\" + r);\n          }\n        };\n\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function () {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else return function () {\n            abort(\"randomDevice\");\n          };\n        }\n\n        var PATH_FS = {\n          resolve: function resolve() {\n            var resolvedPath = \"\",\n                resolvedAbsolute = false;\n\n            for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n              var path = i >= 0 ? arguments[i] : FS.cwd();\n\n              if (typeof path !== \"string\") {\n                throw new TypeError(\"Arguments to path.resolve must be strings\");\n              } else if (!path) {\n                return \"\";\n              }\n\n              resolvedPath = path + \"/\" + resolvedPath;\n              resolvedAbsolute = path.charAt(0) === \"/\";\n            }\n\n            resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n              return !!p;\n            }), !resolvedAbsolute).join(\"/\");\n            return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n          },\n          relative: function relative(from, to) {\n            from = PATH_FS.resolve(from).substr(1);\n            to = PATH_FS.resolve(to).substr(1);\n\n            function trim(arr) {\n              var start = 0;\n\n              for (; start < arr.length; start++) {\n                if (arr[start] !== \"\") break;\n              }\n\n              var end = arr.length - 1;\n\n              for (; end >= 0; end--) {\n                if (arr[end] !== \"\") break;\n              }\n\n              if (start > end) return [];\n              return arr.slice(start, end - start + 1);\n            }\n\n            var fromParts = trim(from.split(\"/\"));\n            var toParts = trim(to.split(\"/\"));\n            var length = Math.min(fromParts.length, toParts.length);\n            var samePartsLength = length;\n\n            for (var i = 0; i < length; i++) {\n              if (fromParts[i] !== toParts[i]) {\n                samePartsLength = i;\n                break;\n              }\n            }\n\n            var outputParts = [];\n\n            for (var i = samePartsLength; i < fromParts.length; i++) {\n              outputParts.push(\"..\");\n            }\n\n            outputParts = outputParts.concat(toParts.slice(samePartsLength));\n            return outputParts.join(\"/\");\n          }\n        };\n        var TTY = {\n          ttys: [],\n          init: function init() {},\n          shutdown: function shutdown() {},\n          register: function register(dev, ops) {\n            TTY.ttys[dev] = {\n              input: [],\n              output: [],\n              ops: ops\n            };\n            FS.registerDevice(dev, TTY.stream_ops);\n          },\n          stream_ops: {\n            open: function open(stream) {\n              var tty = TTY.ttys[stream.node.rdev];\n\n              if (!tty) {\n                throw new FS.ErrnoError(43);\n              }\n\n              stream.tty = tty;\n              stream.seekable = false;\n            },\n            close: function close(stream) {\n              stream.tty.ops.flush(stream.tty);\n            },\n            flush: function flush(stream) {\n              stream.tty.ops.flush(stream.tty);\n            },\n            read: function read(stream, buffer, offset, length, pos) {\n              if (!stream.tty || !stream.tty.ops.get_char) {\n                throw new FS.ErrnoError(60);\n              }\n\n              var bytesRead = 0;\n\n              for (var i = 0; i < length; i++) {\n                var result;\n\n                try {\n                  result = stream.tty.ops.get_char(stream.tty);\n                } catch (e) {\n                  throw new FS.ErrnoError(29);\n                }\n\n                if (result === undefined && bytesRead === 0) {\n                  throw new FS.ErrnoError(6);\n                }\n\n                if (result === null || result === undefined) break;\n                bytesRead++;\n                buffer[offset + i] = result;\n              }\n\n              if (bytesRead) {\n                stream.node.timestamp = Date.now();\n              }\n\n              return bytesRead;\n            },\n            write: function write(stream, buffer, offset, length, pos) {\n              if (!stream.tty || !stream.tty.ops.put_char) {\n                throw new FS.ErrnoError(60);\n              }\n\n              try {\n                for (var i = 0; i < length; i++) {\n                  stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                }\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n\n              if (length) {\n                stream.node.timestamp = Date.now();\n              }\n\n              return i;\n            }\n          },\n          default_tty_ops: {\n            get_char: function get_char(tty) {\n              if (!tty.input.length) {\n                var result = null;\n\n                if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                  result = window.prompt(\"Input: \");\n\n                  if (result !== null) {\n                    result += \"\\n\";\n                  }\n                } else if (typeof readline == \"function\") {\n                  result = readline();\n\n                  if (result !== null) {\n                    result += \"\\n\";\n                  }\n                }\n\n                if (!result) {\n                  return null;\n                }\n\n                tty.input = intArrayFromString(result, true);\n              }\n\n              return tty.input.shift();\n            },\n            put_char: function put_char(tty, val) {\n              if (val === null || val === 10) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              } else {\n                if (val != 0) tty.output.push(val);\n              }\n            },\n            flush: function flush(tty) {\n              if (tty.output && tty.output.length > 0) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              }\n            }\n          },\n          default_tty1_ops: {\n            put_char: function put_char(tty, val) {\n              if (val === null || val === 10) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              } else {\n                if (val != 0) tty.output.push(val);\n              }\n            },\n            flush: function flush(tty) {\n              if (tty.output && tty.output.length > 0) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n              }\n            }\n          }\n        };\n\n        function zeroMemory(address, size) {\n          HEAPU8.fill(0, address, address + size);\n        }\n\n        function alignMemory(size, alignment) {\n          return Math.ceil(size / alignment) * alignment;\n        }\n\n        function mmapAlloc(size) {\n          size = alignMemory(size, 65536);\n\n          var ptr = _memalign(65536, size);\n\n          if (!ptr) return 0;\n          zeroMemory(ptr, size);\n          return ptr;\n        }\n\n        var MEMFS = {\n          ops_table: null,\n          mount: function mount(_mount2) {\n            return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n          },\n          createNode: function createNode(parent, name, mode, dev) {\n            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (!MEMFS.ops_table) {\n              MEMFS.ops_table = {\n                dir: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr,\n                    lookup: MEMFS.node_ops.lookup,\n                    mknod: MEMFS.node_ops.mknod,\n                    rename: MEMFS.node_ops.rename,\n                    unlink: MEMFS.node_ops.unlink,\n                    rmdir: MEMFS.node_ops.rmdir,\n                    readdir: MEMFS.node_ops.readdir,\n                    symlink: MEMFS.node_ops.symlink\n                  },\n                  stream: {\n                    llseek: MEMFS.stream_ops.llseek\n                  }\n                },\n                file: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr\n                  },\n                  stream: {\n                    llseek: MEMFS.stream_ops.llseek,\n                    read: MEMFS.stream_ops.read,\n                    write: MEMFS.stream_ops.write,\n                    allocate: MEMFS.stream_ops.allocate,\n                    mmap: MEMFS.stream_ops.mmap,\n                    msync: MEMFS.stream_ops.msync\n                  }\n                },\n                link: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr,\n                    readlink: MEMFS.node_ops.readlink\n                  },\n                  stream: {}\n                },\n                chrdev: {\n                  node: {\n                    getattr: MEMFS.node_ops.getattr,\n                    setattr: MEMFS.node_ops.setattr\n                  },\n                  stream: FS.chrdev_stream_ops\n                }\n              };\n            }\n\n            var node = FS.createNode(parent, name, mode, dev);\n\n            if (FS.isDir(node.mode)) {\n              node.node_ops = MEMFS.ops_table.dir.node;\n              node.stream_ops = MEMFS.ops_table.dir.stream;\n              node.contents = {};\n            } else if (FS.isFile(node.mode)) {\n              node.node_ops = MEMFS.ops_table.file.node;\n              node.stream_ops = MEMFS.ops_table.file.stream;\n              node.usedBytes = 0;\n              node.contents = null;\n            } else if (FS.isLink(node.mode)) {\n              node.node_ops = MEMFS.ops_table.link.node;\n              node.stream_ops = MEMFS.ops_table.link.stream;\n            } else if (FS.isChrdev(node.mode)) {\n              node.node_ops = MEMFS.ops_table.chrdev.node;\n              node.stream_ops = MEMFS.ops_table.chrdev.stream;\n            }\n\n            node.timestamp = Date.now();\n\n            if (parent) {\n              parent.contents[name] = node;\n              parent.timestamp = node.timestamp;\n            }\n\n            return node;\n          },\n          getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {\n            if (!node.contents) return new Uint8Array(0);\n            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n            return new Uint8Array(node.contents);\n          },\n          expandFileStorage: function expandFileStorage(node, newCapacity) {\n            var prevCapacity = node.contents ? node.contents.length : 0;\n            if (prevCapacity >= newCapacity) return;\n            var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n            newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newCapacity);\n            if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          },\n          resizeFileStorage: function resizeFileStorage(node, newSize) {\n            if (node.usedBytes == newSize) return;\n\n            if (newSize == 0) {\n              node.contents = null;\n              node.usedBytes = 0;\n            } else {\n              var oldContents = node.contents;\n              node.contents = new Uint8Array(newSize);\n\n              if (oldContents) {\n                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n              }\n\n              node.usedBytes = newSize;\n            }\n          },\n          node_ops: {\n            getattr: function getattr(node) {\n              var attr = {};\n              attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n              attr.ino = node.id;\n              attr.mode = node.mode;\n              attr.nlink = 1;\n              attr.uid = 0;\n              attr.gid = 0;\n              attr.rdev = node.rdev;\n\n              if (FS.isDir(node.mode)) {\n                attr.size = 4096;\n              } else if (FS.isFile(node.mode)) {\n                attr.size = node.usedBytes;\n              } else if (FS.isLink(node.mode)) {\n                attr.size = node.link.length;\n              } else {\n                attr.size = 0;\n              }\n\n              attr.atime = new Date(node.timestamp);\n              attr.mtime = new Date(node.timestamp);\n              attr.ctime = new Date(node.timestamp);\n              attr.blksize = 4096;\n              attr.blocks = Math.ceil(attr.size / attr.blksize);\n              return attr;\n            },\n            setattr: function setattr(node, attr) {\n              if (attr.mode !== undefined) {\n                node.mode = attr.mode;\n              }\n\n              if (attr.timestamp !== undefined) {\n                node.timestamp = attr.timestamp;\n              }\n\n              if (attr.size !== undefined) {\n                MEMFS.resizeFileStorage(node, attr.size);\n              }\n            },\n            lookup: function lookup(parent, name) {\n              throw FS.genericErrors[44];\n            },\n            mknod: function mknod(parent, name, mode, dev) {\n              return MEMFS.createNode(parent, name, mode, dev);\n            },\n            rename: function rename(old_node, new_dir, new_name) {\n              if (FS.isDir(old_node.mode)) {\n                var new_node;\n\n                try {\n                  new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {}\n\n                if (new_node) {\n                  for (var i in new_node.contents) {\n                    throw new FS.ErrnoError(55);\n                  }\n                }\n              }\n\n              delete old_node.parent.contents[old_node.name];\n              old_node.parent.timestamp = Date.now();\n              old_node.name = new_name;\n              new_dir.contents[new_name] = old_node;\n              new_dir.timestamp = old_node.parent.timestamp;\n              old_node.parent = new_dir;\n            },\n            unlink: function unlink(parent, name) {\n              delete parent.contents[name];\n              parent.timestamp = Date.now();\n            },\n            rmdir: function rmdir(parent, name) {\n              var node = FS.lookupNode(parent, name);\n\n              for (var i in node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n\n              delete parent.contents[name];\n              parent.timestamp = Date.now();\n            },\n            readdir: function readdir(node) {\n              var entries = [\".\", \"..\"];\n\n              for (var key in node.contents) {\n                if (!node.contents.hasOwnProperty(key)) {\n                  continue;\n                }\n\n                entries.push(key);\n              }\n\n              return entries;\n            },\n            symlink: function symlink(parent, newname, oldpath) {\n              var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n              node.link = oldpath;\n              return node;\n            },\n            readlink: function readlink(node) {\n              if (!FS.isLink(node.mode)) {\n                throw new FS.ErrnoError(28);\n              }\n\n              return node.link;\n            }\n          },\n          stream_ops: {\n            read: function read(stream, buffer, offset, length, position) {\n              var contents = stream.node.contents;\n              if (position >= stream.node.usedBytes) return 0;\n              var size = Math.min(stream.node.usedBytes - position, length);\n\n              if (size > 8 && contents.subarray) {\n                buffer.set(contents.subarray(position, position + size), offset);\n              } else {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents[position + i];\n                }\n              }\n\n              return size;\n            },\n            write: function write(stream, buffer, offset, length, position, canOwn) {\n              if (buffer.buffer === HEAP8.buffer) {\n                canOwn = false;\n              }\n\n              if (!length) return 0;\n              var node = stream.node;\n              node.timestamp = Date.now();\n\n              if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                if (canOwn) {\n                  node.contents = buffer.subarray(offset, offset + length);\n                  node.usedBytes = length;\n                  return length;\n                } else if (node.usedBytes === 0 && position === 0) {\n                  node.contents = buffer.slice(offset, offset + length);\n                  node.usedBytes = length;\n                  return length;\n                } else if (position + length <= node.usedBytes) {\n                  node.contents.set(buffer.subarray(offset, offset + length), position);\n                  return length;\n                }\n              }\n\n              MEMFS.expandFileStorage(node, position + length);\n\n              if (node.contents.subarray && buffer.subarray) {\n                node.contents.set(buffer.subarray(offset, offset + length), position);\n              } else {\n                for (var i = 0; i < length; i++) {\n                  node.contents[position + i] = buffer[offset + i];\n                }\n              }\n\n              node.usedBytes = Math.max(node.usedBytes, position + length);\n              return length;\n            },\n            llseek: function llseek(stream, offset, whence) {\n              var position = offset;\n\n              if (whence === 1) {\n                position += stream.position;\n              } else if (whence === 2) {\n                if (FS.isFile(stream.node.mode)) {\n                  position += stream.node.usedBytes;\n                }\n              }\n\n              if (position < 0) {\n                throw new FS.ErrnoError(28);\n              }\n\n              return position;\n            },\n            allocate: function allocate(stream, offset, length) {\n              MEMFS.expandFileStorage(stream.node, offset + length);\n              stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n            },\n            mmap: function mmap(stream, address, length, position, prot, flags) {\n              if (address !== 0) {\n                throw new FS.ErrnoError(28);\n              }\n\n              if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n              }\n\n              var ptr;\n              var allocated;\n              var contents = stream.node.contents;\n\n              if (!(flags & 2) && contents.buffer === buffer) {\n                allocated = false;\n                ptr = contents.byteOffset;\n              } else {\n                if (position > 0 || position + length < contents.length) {\n                  if (contents.subarray) {\n                    contents = contents.subarray(position, position + length);\n                  } else {\n                    contents = Array.prototype.slice.call(contents, position, position + length);\n                  }\n                }\n\n                allocated = true;\n                ptr = mmapAlloc(length);\n\n                if (!ptr) {\n                  throw new FS.ErrnoError(48);\n                }\n\n                HEAP8.set(contents, ptr);\n              }\n\n              return {\n                ptr: ptr,\n                allocated: allocated\n              };\n            },\n            msync: function msync(stream, buffer, offset, length, mmapFlags) {\n              if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n              }\n\n              if (mmapFlags & 2) {\n                return 0;\n              }\n\n              MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n              return 0;\n            }\n          }\n        };\n\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function (arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep) removeRunDependency();\n          }, function (event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep) addRunDependency();\n        }\n\n        var FS = {\n          root: null,\n          mounts: [],\n          devices: {},\n          streams: [],\n          nextInode: 1,\n          nameTable: null,\n          currentPath: \"/\",\n          initialized: false,\n          ignorePermissions: true,\n          ErrnoError: null,\n          genericErrors: {},\n          filesystems: null,\n          syncFSRequests: 0,\n          lookupPath: function lookupPath(path, opts) {\n            path = PATH_FS.resolve(FS.cwd(), path);\n            opts = opts || {};\n            if (!path) return {\n              path: \"\",\n              node: null\n            };\n            var defaults = {\n              follow_mount: true,\n              recurse_count: 0\n            };\n\n            for (var key in defaults) {\n              if (opts[key] === undefined) {\n                opts[key] = defaults[key];\n              }\n            }\n\n            if (opts.recurse_count > 8) {\n              throw new FS.ErrnoError(32);\n            }\n\n            var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n              return !!p;\n            }), false);\n            var current = FS.root;\n            var current_path = \"/\";\n\n            for (var i = 0; i < parts.length; i++) {\n              var islast = i === parts.length - 1;\n\n              if (islast && opts.parent) {\n                break;\n              }\n\n              current = FS.lookupNode(current, parts[i]);\n              current_path = PATH.join2(current_path, parts[i]);\n\n              if (FS.isMountpoint(current)) {\n                if (!islast || islast && opts.follow_mount) {\n                  current = current.mounted.root;\n                }\n              }\n\n              if (!islast || opts.follow) {\n                var count = 0;\n\n                while (FS.isLink(current.mode)) {\n                  var link = FS.readlink(current_path);\n                  current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                  var lookup = FS.lookupPath(current_path, {\n                    recurse_count: opts.recurse_count\n                  });\n                  current = lookup.node;\n\n                  if (count++ > 40) {\n                    throw new FS.ErrnoError(32);\n                  }\n                }\n              }\n            }\n\n            return {\n              path: current_path,\n              node: current\n            };\n          },\n          getPath: function getPath(node) {\n            var path;\n\n            while (true) {\n              if (FS.isRoot(node)) {\n                var mount = node.mount.mountpoint;\n                if (!path) return mount;\n                return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n              }\n\n              path = path ? node.name + \"/\" + path : node.name;\n              node = node.parent;\n            }\n          },\n          hashName: function hashName(parentid, name) {\n            var hash = 0;\n\n            for (var i = 0; i < name.length; i++) {\n              hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n            }\n\n            return (parentid + hash >>> 0) % FS.nameTable.length;\n          },\n          hashAddNode: function hashAddNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n            node.name_next = FS.nameTable[hash];\n            FS.nameTable[hash] = node;\n          },\n          hashRemoveNode: function hashRemoveNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n\n            if (FS.nameTable[hash] === node) {\n              FS.nameTable[hash] = node.name_next;\n            } else {\n              var current = FS.nameTable[hash];\n\n              while (current) {\n                if (current.name_next === node) {\n                  current.name_next = node.name_next;\n                  break;\n                }\n\n                current = current.name_next;\n              }\n            }\n          },\n          lookupNode: function lookupNode(parent, name) {\n            var errCode = FS.mayLookup(parent);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode, parent);\n            }\n\n            var hash = FS.hashName(parent.id, name);\n\n            for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n              var nodeName = node.name;\n\n              if (node.parent.id === parent.id && nodeName === name) {\n                return node;\n              }\n            }\n\n            return FS.lookup(parent, name);\n          },\n          createNode: function createNode(parent, name, mode, rdev) {\n            var node = new FS.FSNode(parent, name, mode, rdev);\n            FS.hashAddNode(node);\n            return node;\n          },\n          destroyNode: function destroyNode(node) {\n            FS.hashRemoveNode(node);\n          },\n          isRoot: function isRoot(node) {\n            return node === node.parent;\n          },\n          isMountpoint: function isMountpoint(node) {\n            return !!node.mounted;\n          },\n          isFile: function isFile(mode) {\n            return (mode & 61440) === 32768;\n          },\n          isDir: function isDir(mode) {\n            return (mode & 61440) === 16384;\n          },\n          isLink: function isLink(mode) {\n            return (mode & 61440) === 40960;\n          },\n          isChrdev: function isChrdev(mode) {\n            return (mode & 61440) === 8192;\n          },\n          isBlkdev: function isBlkdev(mode) {\n            return (mode & 61440) === 24576;\n          },\n          isFIFO: function isFIFO(mode) {\n            return (mode & 61440) === 4096;\n          },\n          isSocket: function isSocket(mode) {\n            return (mode & 49152) === 49152;\n          },\n          flagModes: {\n            \"r\": 0,\n            \"r+\": 2,\n            \"w\": 577,\n            \"w+\": 578,\n            \"a\": 1089,\n            \"a+\": 1090\n          },\n          modeStringToFlags: function modeStringToFlags(str) {\n            var flags = FS.flagModes[str];\n\n            if (typeof flags === \"undefined\") {\n              throw new Error(\"Unknown file open mode: \" + str);\n            }\n\n            return flags;\n          },\n          flagsToPermissionString: function flagsToPermissionString(flag) {\n            var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n\n            if (flag & 512) {\n              perms += \"w\";\n            }\n\n            return perms;\n          },\n          nodePermissions: function nodePermissions(node, perms) {\n            if (FS.ignorePermissions) {\n              return 0;\n            }\n\n            if (perms.includes(\"r\") && !(node.mode & 292)) {\n              return 2;\n            } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n              return 2;\n            } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n              return 2;\n            }\n\n            return 0;\n          },\n          mayLookup: function mayLookup(dir) {\n            var errCode = FS.nodePermissions(dir, \"x\");\n            if (errCode) return errCode;\n            if (!dir.node_ops.lookup) return 2;\n            return 0;\n          },\n          mayCreate: function mayCreate(dir, name) {\n            try {\n              var node = FS.lookupNode(dir, name);\n              return 20;\n            } catch (e) {}\n\n            return FS.nodePermissions(dir, \"wx\");\n          },\n          mayDelete: function mayDelete(dir, name, isdir) {\n            var node;\n\n            try {\n              node = FS.lookupNode(dir, name);\n            } catch (e) {\n              return e.errno;\n            }\n\n            var errCode = FS.nodePermissions(dir, \"wx\");\n\n            if (errCode) {\n              return errCode;\n            }\n\n            if (isdir) {\n              if (!FS.isDir(node.mode)) {\n                return 54;\n              }\n\n              if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                return 10;\n              }\n            } else {\n              if (FS.isDir(node.mode)) {\n                return 31;\n              }\n            }\n\n            return 0;\n          },\n          mayOpen: function mayOpen(node, flags) {\n            if (!node) {\n              return 44;\n            }\n\n            if (FS.isLink(node.mode)) {\n              return 32;\n            } else if (FS.isDir(node.mode)) {\n              if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n                return 31;\n              }\n            }\n\n            return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n          },\n          MAX_OPEN_FDS: 4096,\n          nextfd: function nextfd(fd_start, fd_end) {\n            fd_start = fd_start || 0;\n            fd_end = fd_end || FS.MAX_OPEN_FDS;\n\n            for (var fd = fd_start; fd <= fd_end; fd++) {\n              if (!FS.streams[fd]) {\n                return fd;\n              }\n            }\n\n            throw new FS.ErrnoError(33);\n          },\n          getStream: function getStream(fd) {\n            return FS.streams[fd];\n          },\n          createStream: function createStream(stream, fd_start, fd_end) {\n            if (!FS.FSStream) {\n              FS.FSStream = function () {};\n\n              FS.FSStream.prototype = {\n                object: {\n                  get: function get() {\n                    return this.node;\n                  },\n                  set: function set(val) {\n                    this.node = val;\n                  }\n                },\n                isRead: {\n                  get: function get() {\n                    return (this.flags & 2097155) !== 1;\n                  }\n                },\n                isWrite: {\n                  get: function get() {\n                    return (this.flags & 2097155) !== 0;\n                  }\n                },\n                isAppend: {\n                  get: function get() {\n                    return this.flags & 1024;\n                  }\n                }\n              };\n            }\n\n            var newStream = new FS.FSStream();\n\n            for (var p in stream) {\n              newStream[p] = stream[p];\n            }\n\n            stream = newStream;\n            var fd = FS.nextfd(fd_start, fd_end);\n            stream.fd = fd;\n            FS.streams[fd] = stream;\n            return stream;\n          },\n          closeStream: function closeStream(fd) {\n            FS.streams[fd] = null;\n          },\n          chrdev_stream_ops: {\n            open: function open(stream) {\n              var device = FS.getDevice(stream.node.rdev);\n              stream.stream_ops = device.stream_ops;\n\n              if (stream.stream_ops.open) {\n                stream.stream_ops.open(stream);\n              }\n            },\n            llseek: function llseek() {\n              throw new FS.ErrnoError(70);\n            }\n          },\n          major: function major(dev) {\n            return dev >> 8;\n          },\n          minor: function minor(dev) {\n            return dev & 255;\n          },\n          makedev: function makedev(ma, mi) {\n            return ma << 8 | mi;\n          },\n          registerDevice: function registerDevice(dev, ops) {\n            FS.devices[dev] = {\n              stream_ops: ops\n            };\n          },\n          getDevice: function getDevice(dev) {\n            return FS.devices[dev];\n          },\n          getMounts: function getMounts(mount) {\n            var mounts = [];\n            var check = [mount];\n\n            while (check.length) {\n              var m = check.pop();\n              mounts.push(m);\n              check.push.apply(check, m.mounts);\n            }\n\n            return mounts;\n          },\n          syncfs: function syncfs(populate, callback) {\n            if (typeof populate === \"function\") {\n              callback = populate;\n              populate = false;\n            }\n\n            FS.syncFSRequests++;\n\n            if (FS.syncFSRequests > 1) {\n              err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n            }\n\n            var mounts = FS.getMounts(FS.root.mount);\n            var completed = 0;\n\n            function doCallback(errCode) {\n              FS.syncFSRequests--;\n              return callback(errCode);\n            }\n\n            function done(errCode) {\n              if (errCode) {\n                if (!done.errored) {\n                  done.errored = true;\n                  return doCallback(errCode);\n                }\n\n                return;\n              }\n\n              if (++completed >= mounts.length) {\n                doCallback(null);\n              }\n            }\n\n            mounts.forEach(function (mount) {\n              if (!mount.type.syncfs) {\n                return done(null);\n              }\n\n              mount.type.syncfs(mount, populate, done);\n            });\n          },\n          mount: function mount(type, opts, mountpoint) {\n            var root = mountpoint === \"/\";\n            var pseudo = !mountpoint;\n            var node;\n\n            if (root && FS.root) {\n              throw new FS.ErrnoError(10);\n            } else if (!root && !pseudo) {\n              var lookup = FS.lookupPath(mountpoint, {\n                follow_mount: false\n              });\n              mountpoint = lookup.path;\n              node = lookup.node;\n\n              if (FS.isMountpoint(node)) {\n                throw new FS.ErrnoError(10);\n              }\n\n              if (!FS.isDir(node.mode)) {\n                throw new FS.ErrnoError(54);\n              }\n            }\n\n            var mount = {\n              type: type,\n              opts: opts,\n              mountpoint: mountpoint,\n              mounts: []\n            };\n            var mountRoot = type.mount(mount);\n            mountRoot.mount = mount;\n            mount.root = mountRoot;\n\n            if (root) {\n              FS.root = mountRoot;\n            } else if (node) {\n              node.mounted = mount;\n\n              if (node.mount) {\n                node.mount.mounts.push(mount);\n              }\n            }\n\n            return mountRoot;\n          },\n          unmount: function unmount(mountpoint) {\n            var lookup = FS.lookupPath(mountpoint, {\n              follow_mount: false\n            });\n\n            if (!FS.isMountpoint(lookup.node)) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var node = lookup.node;\n            var mount = node.mounted;\n            var mounts = FS.getMounts(mount);\n            Object.keys(FS.nameTable).forEach(function (hash) {\n              var current = FS.nameTable[hash];\n\n              while (current) {\n                var next = current.name_next;\n\n                if (mounts.includes(current.mount)) {\n                  FS.destroyNode(current);\n                }\n\n                current = next;\n              }\n            });\n            node.mounted = null;\n            var idx = node.mount.mounts.indexOf(mount);\n            node.mount.mounts.splice(idx, 1);\n          },\n          lookup: function lookup(parent, name) {\n            return parent.node_ops.lookup(parent, name);\n          },\n          mknod: function mknod(path, mode, dev) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n\n            if (!name || name === \".\" || name === \"..\") {\n              throw new FS.ErrnoError(28);\n            }\n\n            var errCode = FS.mayCreate(parent, name);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.mknod) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return parent.node_ops.mknod(parent, name, mode, dev);\n          },\n          create: function create(path, mode) {\n            mode = mode !== undefined ? mode : 438;\n            mode &= 4095;\n            mode |= 32768;\n            return FS.mknod(path, mode, 0);\n          },\n          mkdir: function mkdir(path, mode) {\n            mode = mode !== undefined ? mode : 511;\n            mode &= 511 | 512;\n            mode |= 16384;\n            return FS.mknod(path, mode, 0);\n          },\n          mkdirTree: function mkdirTree(path, mode) {\n            var dirs = path.split(\"/\");\n            var d = \"\";\n\n            for (var i = 0; i < dirs.length; ++i) {\n              if (!dirs[i]) continue;\n              d += \"/\" + dirs[i];\n\n              try {\n                FS.mkdir(d, mode);\n              } catch (e) {\n                if (e.errno != 20) throw e;\n              }\n            }\n          },\n          mkdev: function mkdev(path, mode, dev) {\n            if (typeof dev === \"undefined\") {\n              dev = mode;\n              mode = 438;\n            }\n\n            mode |= 8192;\n            return FS.mknod(path, mode, dev);\n          },\n          symlink: function symlink(oldpath, newpath) {\n            if (!PATH_FS.resolve(oldpath)) {\n              throw new FS.ErrnoError(44);\n            }\n\n            var lookup = FS.lookupPath(newpath, {\n              parent: true\n            });\n            var parent = lookup.node;\n\n            if (!parent) {\n              throw new FS.ErrnoError(44);\n            }\n\n            var newname = PATH.basename(newpath);\n            var errCode = FS.mayCreate(parent, newname);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.symlink) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return parent.node_ops.symlink(parent, newname, oldpath);\n          },\n          rename: function rename(old_path, new_path) {\n            var old_dirname = PATH.dirname(old_path);\n            var new_dirname = PATH.dirname(new_path);\n            var old_name = PATH.basename(old_path);\n            var new_name = PATH.basename(new_path);\n            var lookup, old_dir, new_dir;\n            lookup = FS.lookupPath(old_path, {\n              parent: true\n            });\n            old_dir = lookup.node;\n            lookup = FS.lookupPath(new_path, {\n              parent: true\n            });\n            new_dir = lookup.node;\n            if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n            if (old_dir.mount !== new_dir.mount) {\n              throw new FS.ErrnoError(75);\n            }\n\n            var old_node = FS.lookupNode(old_dir, old_name);\n            var relative = PATH_FS.relative(old_path, new_dirname);\n\n            if (relative.charAt(0) !== \".\") {\n              throw new FS.ErrnoError(28);\n            }\n\n            relative = PATH_FS.relative(new_path, old_dirname);\n\n            if (relative.charAt(0) !== \".\") {\n              throw new FS.ErrnoError(55);\n            }\n\n            var new_node;\n\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n\n            if (old_node === new_node) {\n              return;\n            }\n\n            var isdir = FS.isDir(old_node.mode);\n            var errCode = FS.mayDelete(old_dir, old_name, isdir);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!old_dir.node_ops.rename) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            if (new_dir !== old_dir) {\n              errCode = FS.nodePermissions(old_dir, \"w\");\n\n              if (errCode) {\n                throw new FS.ErrnoError(errCode);\n              }\n            }\n\n            FS.hashRemoveNode(old_node);\n\n            try {\n              old_dir.node_ops.rename(old_node, new_dir, new_name);\n            } catch (e) {\n              throw e;\n            } finally {\n              FS.hashAddNode(old_node);\n            }\n          },\n          rmdir: function rmdir(path) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, true);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.rmdir) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            parent.node_ops.rmdir(parent, name);\n            FS.destroyNode(node);\n          },\n          readdir: function readdir(path) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n\n            if (!node.node_ops.readdir) {\n              throw new FS.ErrnoError(54);\n            }\n\n            return node.node_ops.readdir(node);\n          },\n          unlink: function unlink(path) {\n            var lookup = FS.lookupPath(path, {\n              parent: true\n            });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, false);\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            if (!parent.node_ops.unlink) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n\n            parent.node_ops.unlink(parent, name);\n            FS.destroyNode(node);\n          },\n          readlink: function readlink(path) {\n            var lookup = FS.lookupPath(path);\n            var link = lookup.node;\n\n            if (!link) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!link.node_ops.readlink) {\n              throw new FS.ErrnoError(28);\n            }\n\n            return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n          },\n          stat: function stat(path, dontFollow) {\n            var lookup = FS.lookupPath(path, {\n              follow: !dontFollow\n            });\n            var node = lookup.node;\n\n            if (!node) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!node.node_ops.getattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            return node.node_ops.getattr(node);\n          },\n          lstat: function lstat(path) {\n            return FS.stat(path, true);\n          },\n          chmod: function chmod(path, mode, dontFollow) {\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontFollow\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            node.node_ops.setattr(node, {\n              mode: mode & 4095 | node.mode & ~4095,\n              timestamp: Date.now()\n            });\n          },\n          lchmod: function lchmod(path, mode) {\n            FS.chmod(path, mode, true);\n          },\n          fchmod: function fchmod(fd, mode) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            FS.chmod(stream.node, mode);\n          },\n          chown: function chown(path, uid, gid, dontFollow) {\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontFollow\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            node.node_ops.setattr(node, {\n              timestamp: Date.now()\n            });\n          },\n          lchown: function lchown(path, uid, gid) {\n            FS.chown(path, uid, gid, true);\n          },\n          fchown: function fchown(fd, uid, gid) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            FS.chown(stream.node, uid, gid);\n          },\n          truncate: function truncate(path, len) {\n            if (len < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var node;\n\n            if (typeof path === \"string\") {\n              var lookup = FS.lookupPath(path, {\n                follow: true\n              });\n              node = lookup.node;\n            } else {\n              node = path;\n            }\n\n            if (!node.node_ops.setattr) {\n              throw new FS.ErrnoError(63);\n            }\n\n            if (FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!FS.isFile(node.mode)) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var errCode = FS.nodePermissions(node, \"w\");\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            node.node_ops.setattr(node, {\n              size: len,\n              timestamp: Date.now()\n            });\n          },\n          ftruncate: function ftruncate(fd, len) {\n            var stream = FS.getStream(fd);\n\n            if (!stream) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            FS.truncate(stream.node, len);\n          },\n          utime: function utime(path, atime, mtime) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n            node.node_ops.setattr(node, {\n              timestamp: Math.max(atime, mtime)\n            });\n          },\n          open: function open(path, flags, mode, fd_start, fd_end) {\n            if (path === \"\") {\n              throw new FS.ErrnoError(44);\n            }\n\n            flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n            mode = typeof mode === \"undefined\" ? 438 : mode;\n\n            if (flags & 64) {\n              mode = mode & 4095 | 32768;\n            } else {\n              mode = 0;\n            }\n\n            var node;\n\n            if (typeof path === \"object\") {\n              node = path;\n            } else {\n              path = PATH.normalize(path);\n\n              try {\n                var lookup = FS.lookupPath(path, {\n                  follow: !(flags & 131072)\n                });\n                node = lookup.node;\n              } catch (e) {}\n            }\n\n            var created = false;\n\n            if (flags & 64) {\n              if (node) {\n                if (flags & 128) {\n                  throw new FS.ErrnoError(20);\n                }\n              } else {\n                node = FS.mknod(path, mode, 0);\n                created = true;\n              }\n            }\n\n            if (!node) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (FS.isChrdev(node.mode)) {\n              flags &= ~512;\n            }\n\n            if (flags & 65536 && !FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n\n            if (!created) {\n              var errCode = FS.mayOpen(node, flags);\n\n              if (errCode) {\n                throw new FS.ErrnoError(errCode);\n              }\n            }\n\n            if (flags & 512) {\n              FS.truncate(node, 0);\n            }\n\n            flags &= ~(128 | 512 | 131072);\n            var stream = FS.createStream({\n              node: node,\n              path: FS.getPath(node),\n              id: node.id,\n              flags: flags,\n              mode: node.mode,\n              seekable: true,\n              position: 0,\n              stream_ops: node.stream_ops,\n              node_ops: node.node_ops,\n              ungotten: [],\n              error: false\n            }, fd_start, fd_end);\n\n            if (stream.stream_ops.open) {\n              stream.stream_ops.open(stream);\n            }\n\n            if (Module[\"logReadFiles\"] && !(flags & 1)) {\n              if (!FS.readFiles) FS.readFiles = {};\n\n              if (!(path in FS.readFiles)) {\n                FS.readFiles[path] = 1;\n              }\n            }\n\n            return stream;\n          },\n          close: function close(stream) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (stream.getdents) stream.getdents = null;\n\n            try {\n              if (stream.stream_ops.close) {\n                stream.stream_ops.close(stream);\n              }\n            } catch (e) {\n              throw e;\n            } finally {\n              FS.closeStream(stream.fd);\n            }\n\n            stream.fd = null;\n          },\n          isClosed: function isClosed(stream) {\n            return stream.fd === null;\n          },\n          llseek: function llseek(stream, offset, whence) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (!stream.seekable || !stream.stream_ops.llseek) {\n              throw new FS.ErrnoError(70);\n            }\n\n            if (whence != 0 && whence != 1 && whence != 2) {\n              throw new FS.ErrnoError(28);\n            }\n\n            stream.position = stream.stream_ops.llseek(stream, offset, whence);\n            stream.ungotten = [];\n            return stream.position;\n          },\n          read: function read(stream, buffer, offset, length, position) {\n            if (length < 0 || position < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 1) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!stream.stream_ops.read) {\n              throw new FS.ErrnoError(28);\n            }\n\n            var seeking = typeof position !== \"undefined\";\n\n            if (!seeking) {\n              position = stream.position;\n            } else if (!stream.seekable) {\n              throw new FS.ErrnoError(70);\n            }\n\n            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n            if (!seeking) stream.position += bytesRead;\n            return bytesRead;\n          },\n          write: function write(stream, buffer, offset, length, position, canOwn) {\n            if (length < 0 || position < 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(31);\n            }\n\n            if (!stream.stream_ops.write) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if (stream.seekable && stream.flags & 1024) {\n              FS.llseek(stream, 0, 2);\n            }\n\n            var seeking = typeof position !== \"undefined\";\n\n            if (!seeking) {\n              position = stream.position;\n            } else if (!stream.seekable) {\n              throw new FS.ErrnoError(70);\n            }\n\n            var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n            if (!seeking) stream.position += bytesWritten;\n            return bytesWritten;\n          },\n          allocate: function allocate(stream, offset, length) {\n            if (FS.isClosed(stream)) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (offset < 0 || length <= 0) {\n              throw new FS.ErrnoError(28);\n            }\n\n            if ((stream.flags & 2097155) === 0) {\n              throw new FS.ErrnoError(8);\n            }\n\n            if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n              throw new FS.ErrnoError(43);\n            }\n\n            if (!stream.stream_ops.allocate) {\n              throw new FS.ErrnoError(138);\n            }\n\n            stream.stream_ops.allocate(stream, offset, length);\n          },\n          mmap: function mmap(stream, address, length, position, prot, flags) {\n            if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n              throw new FS.ErrnoError(2);\n            }\n\n            if ((stream.flags & 2097155) === 1) {\n              throw new FS.ErrnoError(2);\n            }\n\n            if (!stream.stream_ops.mmap) {\n              throw new FS.ErrnoError(43);\n            }\n\n            return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n          },\n          msync: function msync(stream, buffer, offset, length, mmapFlags) {\n            if (!stream || !stream.stream_ops.msync) {\n              return 0;\n            }\n\n            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n          },\n          munmap: function munmap(stream) {\n            return 0;\n          },\n          ioctl: function ioctl(stream, cmd, arg) {\n            if (!stream.stream_ops.ioctl) {\n              throw new FS.ErrnoError(59);\n            }\n\n            return stream.stream_ops.ioctl(stream, cmd, arg);\n          },\n          readFile: function readFile(path, opts) {\n            opts = opts || {};\n            opts.flags = opts.flags || 0;\n            opts.encoding = opts.encoding || \"binary\";\n\n            if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n              throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n            }\n\n            var ret;\n            var stream = FS.open(path, opts.flags);\n            var stat = FS.stat(path);\n            var length = stat.size;\n            var buf = new Uint8Array(length);\n            FS.read(stream, buf, 0, length, 0);\n\n            if (opts.encoding === \"utf8\") {\n              ret = UTF8ArrayToString(buf, 0);\n            } else if (opts.encoding === \"binary\") {\n              ret = buf;\n            }\n\n            FS.close(stream);\n            return ret;\n          },\n          writeFile: function writeFile(path, data, opts) {\n            opts = opts || {};\n            opts.flags = opts.flags || 577;\n            var stream = FS.open(path, opts.flags, opts.mode);\n\n            if (typeof data === \"string\") {\n              var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n              var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n              FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n            } else if (ArrayBuffer.isView(data)) {\n              FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n            } else {\n              throw new Error(\"Unsupported data type\");\n            }\n\n            FS.close(stream);\n          },\n          cwd: function cwd() {\n            return FS.currentPath;\n          },\n          chdir: function chdir(path) {\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n\n            if (lookup.node === null) {\n              throw new FS.ErrnoError(44);\n            }\n\n            if (!FS.isDir(lookup.node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n\n            var errCode = FS.nodePermissions(lookup.node, \"x\");\n\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n\n            FS.currentPath = lookup.path;\n          },\n          createDefaultDirectories: function createDefaultDirectories() {\n            FS.mkdir(\"/tmp\");\n            FS.mkdir(\"/home\");\n            FS.mkdir(\"/home/web_user\");\n          },\n          createDefaultDevices: function createDefaultDevices() {\n            FS.mkdir(\"/dev\");\n            FS.registerDevice(FS.makedev(1, 3), {\n              read: function read() {\n                return 0;\n              },\n              write: function write(stream, buffer, offset, length, pos) {\n                return length;\n              }\n            });\n            FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n            FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n            FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n            var random_device = getRandomDevice();\n            FS.createDevice(\"/dev\", \"random\", random_device);\n            FS.createDevice(\"/dev\", \"urandom\", random_device);\n            FS.mkdir(\"/dev/shm\");\n            FS.mkdir(\"/dev/shm/tmp\");\n          },\n          createSpecialDirectories: function createSpecialDirectories() {\n            FS.mkdir(\"/proc\");\n            var proc_self = FS.mkdir(\"/proc/self\");\n            FS.mkdir(\"/proc/self/fd\");\n            FS.mount({\n              mount: function mount() {\n                var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n                node.node_ops = {\n                  lookup: function lookup(parent, name) {\n                    var fd = +name;\n                    var stream = FS.getStream(fd);\n                    if (!stream) throw new FS.ErrnoError(8);\n                    var ret = {\n                      parent: null,\n                      mount: {\n                        mountpoint: \"fake\"\n                      },\n                      node_ops: {\n                        readlink: function readlink() {\n                          return stream.path;\n                        }\n                      }\n                    };\n                    ret.parent = ret;\n                    return ret;\n                  }\n                };\n                return node;\n              }\n            }, {}, \"/proc/self/fd\");\n          },\n          createStandardStreams: function createStandardStreams() {\n            if (Module[\"stdin\"]) {\n              FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n            } else {\n              FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n            }\n\n            if (Module[\"stdout\"]) {\n              FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n            } else {\n              FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n            }\n\n            if (Module[\"stderr\"]) {\n              FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n            } else {\n              FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n            }\n\n            FS.open(\"/dev/stdin\", 0);\n            FS.open(\"/dev/stdout\", 1);\n            FS.open(\"/dev/stderr\", 1);\n          },\n          ensureErrnoError: function ensureErrnoError() {\n            if (FS.ErrnoError) return;\n\n            FS.ErrnoError = function ErrnoError(errno, node) {\n              this.node = node;\n\n              this.setErrno = function (errno) {\n                this.errno = errno;\n              };\n\n              this.setErrno(errno);\n              this.message = \"FS error\";\n            };\n\n            FS.ErrnoError.prototype = new Error();\n            FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n            [44].forEach(function (code) {\n              FS.genericErrors[code] = new FS.ErrnoError(code);\n              FS.genericErrors[code].stack = \"<generic error, no stack>\";\n            });\n          },\n          staticInit: function staticInit() {\n            FS.ensureErrnoError();\n            FS.nameTable = new Array(4096);\n            FS.mount(MEMFS, {}, \"/\");\n            FS.createDefaultDirectories();\n            FS.createDefaultDevices();\n            FS.createSpecialDirectories();\n            FS.filesystems = {\n              \"MEMFS\": MEMFS\n            };\n          },\n          init: function init(input, output, error) {\n            FS.init.initialized = true;\n            FS.ensureErrnoError();\n            Module[\"stdin\"] = input || Module[\"stdin\"];\n            Module[\"stdout\"] = output || Module[\"stdout\"];\n            Module[\"stderr\"] = error || Module[\"stderr\"];\n            FS.createStandardStreams();\n          },\n          quit: function quit() {\n            FS.init.initialized = false;\n            var fflush = Module[\"_fflush\"];\n            if (fflush) fflush(0);\n\n            for (var i = 0; i < FS.streams.length; i++) {\n              var stream = FS.streams[i];\n\n              if (!stream) {\n                continue;\n              }\n\n              FS.close(stream);\n            }\n          },\n          getMode: function getMode(canRead, canWrite) {\n            var mode = 0;\n            if (canRead) mode |= 292 | 73;\n            if (canWrite) mode |= 146;\n            return mode;\n          },\n          findObject: function findObject(path, dontResolveLastLink) {\n            var ret = FS.analyzePath(path, dontResolveLastLink);\n\n            if (ret.exists) {\n              return ret.object;\n            } else {\n              return null;\n            }\n          },\n          analyzePath: function analyzePath(path, dontResolveLastLink) {\n            try {\n              var lookup = FS.lookupPath(path, {\n                follow: !dontResolveLastLink\n              });\n              path = lookup.path;\n            } catch (e) {}\n\n            var ret = {\n              isRoot: false,\n              exists: false,\n              error: 0,\n              name: null,\n              path: null,\n              object: null,\n              parentExists: false,\n              parentPath: null,\n              parentObject: null\n            };\n\n            try {\n              var lookup = FS.lookupPath(path, {\n                parent: true\n              });\n              ret.parentExists = true;\n              ret.parentPath = lookup.path;\n              ret.parentObject = lookup.node;\n              ret.name = PATH.basename(path);\n              lookup = FS.lookupPath(path, {\n                follow: !dontResolveLastLink\n              });\n              ret.exists = true;\n              ret.path = lookup.path;\n              ret.object = lookup.node;\n              ret.name = lookup.node.name;\n              ret.isRoot = lookup.path === \"/\";\n            } catch (e) {\n              ret.error = e.errno;\n            }\n\n            return ret;\n          },\n          createPath: function createPath(parent, path, canRead, canWrite) {\n            parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n            var parts = path.split(\"/\").reverse();\n\n            while (parts.length) {\n              var part = parts.pop();\n              if (!part) continue;\n              var current = PATH.join2(parent, part);\n\n              try {\n                FS.mkdir(current);\n              } catch (e) {}\n\n              parent = current;\n            }\n\n            return current;\n          },\n          createFile: function createFile(parent, name, properties, canRead, canWrite) {\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS.getMode(canRead, canWrite);\n            return FS.create(path, mode);\n          },\n          createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n            var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n            var mode = FS.getMode(canRead, canWrite);\n            var node = FS.create(path, mode);\n\n            if (data) {\n              if (typeof data === \"string\") {\n                var arr = new Array(data.length);\n\n                for (var i = 0, len = data.length; i < len; ++i) {\n                  arr[i] = data.charCodeAt(i);\n                }\n\n                data = arr;\n              }\n\n              FS.chmod(node, mode | 146);\n              var stream = FS.open(node, 577);\n              FS.write(stream, data, 0, data.length, 0, canOwn);\n              FS.close(stream);\n              FS.chmod(node, mode);\n            }\n\n            return node;\n          },\n          createDevice: function createDevice(parent, name, input, output) {\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS.getMode(!!input, !!output);\n            if (!FS.createDevice.major) FS.createDevice.major = 64;\n            var dev = FS.makedev(FS.createDevice.major++, 0);\n            FS.registerDevice(dev, {\n              open: function open(stream) {\n                stream.seekable = false;\n              },\n              close: function close(stream) {\n                if (output && output.buffer && output.buffer.length) {\n                  output(10);\n                }\n              },\n              read: function read(stream, buffer, offset, length, pos) {\n                var bytesRead = 0;\n\n                for (var i = 0; i < length; i++) {\n                  var result;\n\n                  try {\n                    result = input();\n                  } catch (e) {\n                    throw new FS.ErrnoError(29);\n                  }\n\n                  if (result === undefined && bytesRead === 0) {\n                    throw new FS.ErrnoError(6);\n                  }\n\n                  if (result === null || result === undefined) break;\n                  bytesRead++;\n                  buffer[offset + i] = result;\n                }\n\n                if (bytesRead) {\n                  stream.node.timestamp = Date.now();\n                }\n\n                return bytesRead;\n              },\n              write: function write(stream, buffer, offset, length, pos) {\n                for (var i = 0; i < length; i++) {\n                  try {\n                    output(buffer[offset + i]);\n                  } catch (e) {\n                    throw new FS.ErrnoError(29);\n                  }\n                }\n\n                if (length) {\n                  stream.node.timestamp = Date.now();\n                }\n\n                return i;\n              }\n            });\n            return FS.mkdev(path, mode, dev);\n          },\n          forceLoadFile: function forceLoadFile(obj) {\n            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n\n            if (typeof XMLHttpRequest !== \"undefined\") {\n              throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n            } else if (read_) {\n              try {\n                obj.contents = intArrayFromString(read_(obj.url), true);\n                obj.usedBytes = obj.contents.length;\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            } else {\n              throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n            }\n          },\n          createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {\n            function LazyUint8Array() {\n              this.lengthKnown = false;\n              this.chunks = [];\n            }\n\n            LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n              if (idx > this.length - 1 || idx < 0) {\n                return undefined;\n              }\n\n              var chunkOffset = idx % this.chunkSize;\n              var chunkNum = idx / this.chunkSize | 0;\n              return this.getter(chunkNum)[chunkOffset];\n            };\n\n            LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n              this.getter = getter;\n            };\n\n            LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"HEAD\", url, false);\n              xhr.send(null);\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n              var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n              var header;\n              var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n              var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n              var chunkSize = 1024 * 1024;\n              if (!hasByteServing) chunkSize = datalength;\n\n              var doXHR = function doXHR(from, to) {\n                if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n\n                if (xhr.overrideMimeType) {\n                  xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n                }\n\n                xhr.send(null);\n                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n\n                if (xhr.response !== undefined) {\n                  return new Uint8Array(xhr.response || []);\n                } else {\n                  return intArrayFromString(xhr.responseText || \"\", true);\n                }\n              };\n\n              var lazyArray = this;\n              lazyArray.setDataGetter(function (chunkNum) {\n                var start = chunkNum * chunkSize;\n                var end = (chunkNum + 1) * chunkSize - 1;\n                end = Math.min(end, datalength - 1);\n\n                if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n                  lazyArray.chunks[chunkNum] = doXHR(start, end);\n                }\n\n                if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n                return lazyArray.chunks[chunkNum];\n              });\n\n              if (usesGzip || !datalength) {\n                chunkSize = datalength = 1;\n                datalength = this.getter(0).length;\n                chunkSize = datalength;\n                out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n              }\n\n              this._length = datalength;\n              this._chunkSize = chunkSize;\n              this.lengthKnown = true;\n            };\n\n            if (typeof XMLHttpRequest !== \"undefined\") {\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n              var lazyArray = new LazyUint8Array();\n              var properties = {\n                isDevice: false,\n                contents: lazyArray\n              };\n            } else {\n              var properties = {\n                isDevice: false,\n                url: url\n              };\n            }\n\n            var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n            if (properties.contents) {\n              node.contents = properties.contents;\n            } else if (properties.url) {\n              node.contents = null;\n              node.url = properties.url;\n            }\n\n            Object.defineProperties(node, {\n              usedBytes: {\n                get: function get() {\n                  return this.contents.length;\n                }\n              }\n            });\n            var stream_ops = {};\n            var keys = Object.keys(node.stream_ops);\n            keys.forEach(function (key) {\n              var fn = node.stream_ops[key];\n\n              stream_ops[key] = function forceLoadLazyFile() {\n                FS.forceLoadFile(node);\n                return fn.apply(null, arguments);\n              };\n            });\n\n            stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n              FS.forceLoadFile(node);\n              var contents = stream.node.contents;\n              if (position >= contents.length) return 0;\n              var size = Math.min(contents.length - position, length);\n\n              if (contents.slice) {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents[position + i];\n                }\n              } else {\n                for (var i = 0; i < size; i++) {\n                  buffer[offset + i] = contents.get(position + i);\n                }\n              }\n\n              return size;\n            };\n\n            node.stream_ops = stream_ops;\n            return node;\n          },\n          createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n            Browser.init();\n            var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n\n            function processData(byteArray) {\n              function finish(byteArray) {\n                if (preFinish) preFinish();\n\n                if (!dontCreateFile) {\n                  FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                }\n\n                if (onload) onload();\n                removeRunDependency();\n              }\n\n              var handled = false;\n              Module[\"preloadPlugins\"].forEach(function (plugin) {\n                if (handled) return;\n\n                if (plugin[\"canHandle\"](fullname)) {\n                  plugin[\"handle\"](byteArray, fullname, finish, function () {\n                    if (onerror) onerror();\n                    removeRunDependency();\n                  });\n                  handled = true;\n                }\n              });\n              if (!handled) finish(byteArray);\n            }\n\n            addRunDependency();\n\n            if (typeof url == \"string\") {\n              asyncLoad(url, function (byteArray) {\n                processData(byteArray);\n              }, onerror);\n            } else {\n              processData(url);\n            }\n          },\n          indexedDB: function indexedDB() {\n            return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n          },\n          DB_NAME: function DB_NAME() {\n            return \"EM_FS_\" + window.location.pathname;\n          },\n          DB_VERSION: 20,\n          DB_STORE_NAME: \"FILE_DATA\",\n          saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {\n            onload = onload || function () {};\n\n            onerror = onerror || function () {};\n\n            var indexedDB = FS.indexedDB();\n\n            try {\n              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n            } catch (e) {\n              return onerror(e);\n            }\n\n            openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n              out(\"creating db\");\n              var db = openRequest.result;\n              db.createObjectStore(FS.DB_STORE_NAME);\n            };\n\n            openRequest.onsuccess = function openRequest_onsuccess() {\n              var db = openRequest.result;\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n              var files = transaction.objectStore(FS.DB_STORE_NAME);\n              var ok = 0,\n                  fail = 0,\n                  total = paths.length;\n\n              function finish() {\n                if (fail == 0) onload();else onerror();\n              }\n\n              paths.forEach(function (path) {\n                var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n\n                putRequest.onsuccess = function putRequest_onsuccess() {\n                  ok++;\n                  if (ok + fail == total) finish();\n                };\n\n                putRequest.onerror = function putRequest_onerror() {\n                  fail++;\n                  if (ok + fail == total) finish();\n                };\n              });\n              transaction.onerror = onerror;\n            };\n\n            openRequest.onerror = onerror;\n          },\n          loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {\n            onload = onload || function () {};\n\n            onerror = onerror || function () {};\n\n            var indexedDB = FS.indexedDB();\n\n            try {\n              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n            } catch (e) {\n              return onerror(e);\n            }\n\n            openRequest.onupgradeneeded = onerror;\n\n            openRequest.onsuccess = function openRequest_onsuccess() {\n              var db = openRequest.result;\n\n              try {\n                var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n              } catch (e) {\n                onerror(e);\n                return;\n              }\n\n              var files = transaction.objectStore(FS.DB_STORE_NAME);\n              var ok = 0,\n                  fail = 0,\n                  total = paths.length;\n\n              function finish() {\n                if (fail == 0) onload();else onerror();\n              }\n\n              paths.forEach(function (path) {\n                var getRequest = files.get(path);\n\n                getRequest.onsuccess = function getRequest_onsuccess() {\n                  if (FS.analyzePath(path).exists) {\n                    FS.unlink(path);\n                  }\n\n                  FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                  ok++;\n                  if (ok + fail == total) finish();\n                };\n\n                getRequest.onerror = function getRequest_onerror() {\n                  fail++;\n                  if (ok + fail == total) finish();\n                };\n              });\n              transaction.onerror = onerror;\n            };\n\n            openRequest.onerror = onerror;\n          }\n        };\n        var SYSCALLS = {\n          mappings: {},\n          DEFAULT_POLLMASK: 5,\n          calculateAt: function calculateAt(dirfd, path, allowEmpty) {\n            if (path[0] === \"/\") {\n              return path;\n            }\n\n            var dir;\n\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream) throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n\n            if (path.length == 0) {\n              if (!allowEmpty) {\n                throw new FS.ErrnoError(44);\n              }\n\n              return dir;\n            }\n\n            return PATH.join2(dir, path);\n          },\n          doStat: function doStat(func, path, buf) {\n            try {\n              var stat = func(path);\n            } catch (e) {\n              if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                return -54;\n              }\n\n              throw e;\n            }\n\n            HEAP32[buf >> 2] = stat.dev;\n            HEAP32[buf + 4 >> 2] = 0;\n            HEAP32[buf + 8 >> 2] = stat.ino;\n            HEAP32[buf + 12 >> 2] = stat.mode;\n            HEAP32[buf + 16 >> 2] = stat.nlink;\n            HEAP32[buf + 20 >> 2] = stat.uid;\n            HEAP32[buf + 24 >> 2] = stat.gid;\n            HEAP32[buf + 28 >> 2] = stat.rdev;\n            HEAP32[buf + 32 >> 2] = 0;\n            tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n            HEAP32[buf + 48 >> 2] = 4096;\n            HEAP32[buf + 52 >> 2] = stat.blocks;\n            HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n            HEAP32[buf + 60 >> 2] = 0;\n            HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n            HEAP32[buf + 68 >> 2] = 0;\n            HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n            HEAP32[buf + 76 >> 2] = 0;\n            tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n            return 0;\n          },\n          doMsync: function doMsync(addr, stream, len, flags, offset) {\n            var buffer = HEAPU8.slice(addr, addr + len);\n            FS.msync(stream, buffer, offset, len, flags);\n          },\n          doMkdir: function doMkdir(path, mode) {\n            path = PATH.normalize(path);\n            if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n            FS.mkdir(path, mode, 0);\n            return 0;\n          },\n          doMknod: function doMknod(path, mode, dev) {\n            switch (mode & 61440) {\n              case 32768:\n              case 8192:\n              case 24576:\n              case 4096:\n              case 49152:\n                break;\n\n              default:\n                return -28;\n            }\n\n            FS.mknod(path, mode, dev);\n            return 0;\n          },\n          doReadlink: function doReadlink(path, buf, bufsize) {\n            if (bufsize <= 0) return -28;\n            var ret = FS.readlink(path);\n            var len = Math.min(bufsize, lengthBytesUTF8(ret));\n            var endChar = HEAP8[buf + len];\n            stringToUTF8(ret, buf, bufsize + 1);\n            HEAP8[buf + len] = endChar;\n            return len;\n          },\n          doAccess: function doAccess(path, amode) {\n            if (amode & ~7) {\n              return -28;\n            }\n\n            var lookup = FS.lookupPath(path, {\n              follow: true\n            });\n            var node = lookup.node;\n\n            if (!node) {\n              return -44;\n            }\n\n            var perms = \"\";\n            if (amode & 4) perms += \"r\";\n            if (amode & 2) perms += \"w\";\n            if (amode & 1) perms += \"x\";\n\n            if (perms && FS.nodePermissions(node, perms)) {\n              return -2;\n            }\n\n            return 0;\n          },\n          doDup: function doDup(path, flags, suggestFD) {\n            var suggest = FS.getStream(suggestFD);\n            if (suggest) FS.close(suggest);\n            return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n          },\n          doReadv: function doReadv(stream, iov, iovcnt, offset) {\n            var ret = 0;\n\n            for (var i = 0; i < iovcnt; i++) {\n              var ptr = HEAP32[iov + i * 8 >> 2];\n              var len = HEAP32[iov + (i * 8 + 4) >> 2];\n              var curr = FS.read(stream, HEAP8, ptr, len, offset);\n              if (curr < 0) return -1;\n              ret += curr;\n              if (curr < len) break;\n            }\n\n            return ret;\n          },\n          doWritev: function doWritev(stream, iov, iovcnt, offset) {\n            var ret = 0;\n\n            for (var i = 0; i < iovcnt; i++) {\n              var ptr = HEAP32[iov + i * 8 >> 2];\n              var len = HEAP32[iov + (i * 8 + 4) >> 2];\n              var curr = FS.write(stream, HEAP8, ptr, len, offset);\n              if (curr < 0) return -1;\n              ret += curr;\n            }\n\n            return ret;\n          },\n          varargs: undefined,\n          get: function get() {\n            SYSCALLS.varargs += 4;\n            var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n            return ret;\n          },\n          getStr: function getStr(ptr) {\n            var ret = UTF8ToString(ptr);\n            return ret;\n          },\n          getStreamFromFD: function getStreamFromFD(fd) {\n            var stream = FS.getStream(fd);\n            if (!stream) throw new FS.ErrnoError(8);\n            return stream;\n          },\n          get64: function get64(low, high) {\n            return low;\n          }\n        };\n\n        function ___syscall_access(path, amode) {\n          try {\n            path = SYSCALLS.getStr(path);\n            return SYSCALLS.doAccess(path, amode);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_fcntl64(fd, cmd, varargs) {\n          SYSCALLS.varargs = varargs;\n\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n\n            switch (cmd) {\n              case 0:\n                {\n                  var arg = SYSCALLS.get();\n\n                  if (arg < 0) {\n                    return -28;\n                  }\n\n                  var newStream;\n                  newStream = FS.open(stream.path, stream.flags, 0, arg);\n                  return newStream.fd;\n                }\n\n              case 1:\n              case 2:\n                return 0;\n\n              case 3:\n                return stream.flags;\n\n              case 4:\n                {\n                  var arg = SYSCALLS.get();\n                  stream.flags |= arg;\n                  return 0;\n                }\n\n              case 5:\n                {\n                  var arg = SYSCALLS.get();\n                  var offset = 0;\n                  HEAP16[arg + offset >> 1] = 2;\n                  return 0;\n                }\n\n              case 6:\n              case 7:\n                return 0;\n\n              case 16:\n              case 8:\n                return -28;\n\n              case 9:\n                setErrNo(28);\n                return -1;\n\n              default:\n                {\n                  return -28;\n                }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_fstat64(fd, buf) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            return SYSCALLS.doStat(FS.stat, stream.path, buf);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_fstatat64(dirfd, path, buf, flags) {\n          try {\n            path = SYSCALLS.getStr(path);\n            var nofollow = flags & 256;\n            var allowEmpty = flags & 4096;\n            flags = flags & ~4352;\n            path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n            return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n\n            switch (op) {\n              case 21509:\n              case 21505:\n                {\n                  if (!stream.tty) return -59;\n                  return 0;\n                }\n\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508:\n                {\n                  if (!stream.tty) return -59;\n                  return 0;\n                }\n\n              case 21519:\n                {\n                  if (!stream.tty) return -59;\n                  var argp = SYSCALLS.get();\n                  HEAP32[argp >> 2] = 0;\n                  return 0;\n                }\n\n              case 21520:\n                {\n                  if (!stream.tty) return -59;\n                  return -28;\n                }\n\n              case 21531:\n                {\n                  var argp = SYSCALLS.get();\n                  return FS.ioctl(stream, op, argp);\n                }\n\n              case 21523:\n                {\n                  if (!stream.tty) return -59;\n                  return 0;\n                }\n\n              case 21524:\n                {\n                  if (!stream.tty) return -59;\n                  return 0;\n                }\n\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function syscallMmap2(addr, len, prot, flags, fd, off) {\n          off <<= 12;\n          var ptr;\n          var allocated = false;\n\n          if ((flags & 16) !== 0 && addr % 65536 !== 0) {\n            return -28;\n          }\n\n          if ((flags & 32) !== 0) {\n            ptr = mmapAlloc(len);\n            if (!ptr) return -48;\n            allocated = true;\n          } else {\n            var info = FS.getStream(fd);\n            if (!info) return -8;\n            var res = FS.mmap(info, addr, len, off, prot, flags);\n            ptr = res.ptr;\n            allocated = res.allocated;\n          }\n\n          SYSCALLS.mappings[ptr] = {\n            malloc: ptr,\n            len: len,\n            allocated: allocated,\n            fd: fd,\n            prot: prot,\n            flags: flags,\n            offset: off\n          };\n          return ptr;\n        }\n\n        function ___syscall_mmap2(addr, len, prot, flags, fd, off) {\n          try {\n            return syscallMmap2(addr, len, prot, flags, fd, off);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function syscallMunmap(addr, len) {\n          var info = SYSCALLS.mappings[addr];\n\n          if (len === 0 || !info) {\n            return -28;\n          }\n\n          if (len === info.len) {\n            var stream = FS.getStream(info.fd);\n\n            if (stream) {\n              if (info.prot & 2) {\n                SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\n              }\n            }\n\n            SYSCALLS.mappings[addr] = null;\n\n            if (info.allocated) {\n              _free(info.malloc);\n            }\n          }\n\n          return 0;\n        }\n\n        function ___syscall_munmap(addr, len) {\n          try {\n            return syscallMunmap(addr, len);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_stat64(path, buf) {\n          try {\n            path = SYSCALLS.getStr(path);\n            return SYSCALLS.doStat(FS.stat, path, buf);\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function ___syscall_unlink(path) {\n          try {\n            path = SYSCALLS.getStr(path);\n            FS.unlink(path);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return -e.errno;\n          }\n        }\n\n        function __emscripten_throw_longjmp() {\n          throw \"longjmp\";\n        }\n\n        function _abort() {\n          abort(\"\");\n        }\n\n        var readAsmConstArgsArray = [];\n\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n\n          while (ch = HEAPU8[sigPtr++]) {\n            var readAsmConstArgsDouble = ch < 105;\n            if (readAsmConstArgsDouble && buf & 1) buf++;\n            readAsmConstArgsArray.push(readAsmConstArgsDouble ? HEAPF64[buf++ >> 1] : HEAP32[buf]);\n            ++buf;\n          }\n\n          return readAsmConstArgsArray;\n        }\n\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest, src, src + num);\n        }\n\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {}\n        }\n\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = HEAPU8.length;\n          requestedSize = requestedSize >>> 0;\n          var maxHeapSize = 2147483648;\n\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n\n            if (replacement) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        var ENV = {};\n\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = {\n              \"USER\": \"web_user\",\n              \"LOGNAME\": \"web_user\",\n              \"PATH\": \"/\",\n              \"PWD\": \"/\",\n              \"HOME\": \"/home/web_user\",\n              \"LANG\": lang,\n              \"_\": getExecutableName()\n            };\n\n            for (var x in ENV) {\n              if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n            }\n\n            var strings = [];\n\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n\n            getEnvStrings.strings = strings;\n          }\n\n          return getEnvStrings.strings;\n        }\n\n        function _environ_get(__environ, environ_buf) {\n          var bufSize = 0;\n          getEnvStrings().forEach(function (string, i) {\n            var ptr = environ_buf + bufSize;\n            HEAP32[__environ + i * 4 >> 2] = ptr;\n            writeAsciiToMemory(string, ptr);\n            bufSize += string.length + 1;\n          });\n          return 0;\n        }\n\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          var strings = getEnvStrings();\n          HEAP32[penviron_count >> 2] = strings.length;\n          var bufSize = 0;\n          strings.forEach(function (string) {\n            bufSize += string.length + 1;\n          });\n          HEAP32[penviron_buf_size >> 2] = bufSize;\n          return 0;\n        }\n\n        function _exit(status) {\n          exit(status);\n        }\n\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n            return e.errno;\n          }\n        }\n\n        function _getTempRet0() {\n          return getTempRet0();\n        }\n\n        function _gettimeofday(ptr) {\n          var now = Date.now();\n          HEAP32[ptr >> 2] = now / 1e3 | 0;\n          HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;\n          return 0;\n        }\n\n        function _setTempRet0(val) {\n          setTempRet0(val);\n        }\n\n        function _time(ptr) {\n          var ret = Date.now() / 1e3 | 0;\n\n          if (ptr) {\n            HEAP32[ptr >> 2] = ret;\n          }\n\n          return ret;\n        }\n\n        var FSNode = function FSNode(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, {\n          read: {\n            get: function get() {\n              return (this.mode & readMode) === readMode;\n            },\n            set: function set(val) {\n              val ? this.mode |= readMode : this.mode &= ~readMode;\n            }\n          },\n          write: {\n            get: function get() {\n              return (this.mode & writeMode) === writeMode;\n            },\n            set: function set(val) {\n              val ? this.mode |= writeMode : this.mode &= ~writeMode;\n            }\n          },\n          isFolder: {\n            get: function get() {\n              return FS.isDir(this.mode);\n            }\n          },\n          isDevice: {\n            get: function get() {\n              return FS.isChrdev(this.mode);\n            }\n          }\n        });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull) u8array.length = numBytesWritten;\n          return u8array;\n        }\n\n        var asmLibraryArg = {\n          \"A\": ___clock_gettime,\n          \"B\": ___syscall_access,\n          \"h\": ___syscall_fcntl64,\n          \"x\": ___syscall_fstat64,\n          \"u\": ___syscall_fstatat64,\n          \"y\": ___syscall_ioctl,\n          \"k\": ___syscall_mmap2,\n          \"j\": ___syscall_munmap,\n          \"e\": ___syscall_open,\n          \"v\": ___syscall_stat64,\n          \"z\": ___syscall_unlink,\n          \"r\": __emscripten_throw_longjmp,\n          \"q\": _abort,\n          \"C\": _emscripten_asm_const_int,\n          \"o\": _emscripten_memcpy_big,\n          \"p\": _emscripten_resize_heap,\n          \"s\": _environ_get,\n          \"t\": _environ_sizes_get,\n          \"a\": _exit,\n          \"d\": _fd_close,\n          \"i\": _fd_read,\n          \"n\": _fd_seek,\n          \"g\": _fd_write,\n          \"c\": _getTempRet0,\n          \"w\": _gettimeofday,\n          \"l\": invoke_iiiiiii,\n          \"m\": invoke_vi,\n          \"b\": _setTempRet0,\n          \"f\": _time\n        };\n        createWasm();\n\n        Module[\"___wasm_call_ctors\"] = function () {\n          return (Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"E\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = function () {\n          return (_emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = Module[\"asm\"][\"F\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz_Graphviz_2 = Module[\"_emscripten_bind_Graphviz_Graphviz_2\"] = function () {\n          return (_emscripten_bind_Graphviz_Graphviz_2 = Module[\"_emscripten_bind_Graphviz_Graphviz_2\"] = Module[\"asm\"][\"G\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz_version_0 = Module[\"_emscripten_bind_Graphviz_version_0\"] = function () {\n          return (_emscripten_bind_Graphviz_version_0 = Module[\"_emscripten_bind_Graphviz_version_0\"] = Module[\"asm\"][\"H\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz_lastError_0 = Module[\"_emscripten_bind_Graphviz_lastError_0\"] = function () {\n          return (_emscripten_bind_Graphviz_lastError_0 = Module[\"_emscripten_bind_Graphviz_lastError_0\"] = Module[\"asm\"][\"I\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz_layout_3 = Module[\"_emscripten_bind_Graphviz_layout_3\"] = function () {\n          return (_emscripten_bind_Graphviz_layout_3 = Module[\"_emscripten_bind_Graphviz_layout_3\"] = Module[\"asm\"][\"J\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz_createFile_2 = Module[\"_emscripten_bind_Graphviz_createFile_2\"] = function () {\n          return (_emscripten_bind_Graphviz_createFile_2 = Module[\"_emscripten_bind_Graphviz_createFile_2\"] = Module[\"asm\"][\"K\"]).apply(null, arguments);\n        };\n\n        var _emscripten_bind_Graphviz___destroy___0 = Module[\"_emscripten_bind_Graphviz___destroy___0\"] = function () {\n          return (_emscripten_bind_Graphviz___destroy___0 = Module[\"_emscripten_bind_Graphviz___destroy___0\"] = Module[\"asm\"][\"L\"]).apply(null, arguments);\n        };\n\n        Module[\"_malloc\"] = function () {\n          return (Module[\"_malloc\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n        };\n\n        var _free = Module[\"_free\"] = function () {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"O\"]).apply(null, arguments);\n        };\n\n        var ___errno_location = Module[\"___errno_location\"] = function () {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n        };\n\n        var stackSave = Module[\"stackSave\"] = function () {\n          return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n        };\n\n        var stackRestore = Module[\"stackRestore\"] = function () {\n          return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n        };\n\n        var _setThrew = Module[\"_setThrew\"] = function () {\n          return (_setThrew = Module[\"_setThrew\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n        };\n\n        var _memalign = Module[\"_memalign\"] = function () {\n          return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n        };\n\n        function invoke_vi(index, a1) {\n          var sp = stackSave();\n\n          try {\n            getWasmTableEntry(index)(a1);\n          } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n            _setThrew(1, 0);\n          }\n        }\n\n        function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n          var sp = stackSave();\n\n          try {\n            return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n          } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0 && e !== \"longjmp\") throw e;\n\n            _setThrew(1, 0);\n          }\n        }\n\n        var calledRun;\n\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun) run();\n          if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n\n        function run(args) {\n          if (runDependencies > 0) {\n            return;\n          }\n\n          preRun();\n\n          if (runDependencies > 0) {\n            return;\n          }\n\n          function doRun() {\n            if (calledRun) return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT) return;\n            initRuntime();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n            postRun();\n          }\n\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function () {\n              setTimeout(function () {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n\n        Module[\"run\"] = run;\n\n        function exit(status, implicit) {\n          procExit(status);\n        }\n\n        function procExit(code) {\n          if (!keepRuntimeAlive()) {\n            if (Module[\"onExit\"]) Module[\"onExit\"](code);\n            ABORT = true;\n          }\n\n          quit_(code, new ExitStatus(code));\n        }\n\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n\n        run();\n\n        function WrapperObject() {}\n\n        WrapperObject.prototype = Object.create(WrapperObject.prototype);\n        WrapperObject.prototype.constructor = WrapperObject;\n        WrapperObject.prototype.__class__ = WrapperObject;\n        WrapperObject.__cache__ = {};\n        Module[\"WrapperObject\"] = WrapperObject;\n\n        function getCache(__class__) {\n          return (__class__ || WrapperObject).__cache__;\n        }\n\n        Module[\"getCache\"] = getCache;\n\n        function wrapPointer(ptr, __class__) {\n          var cache = getCache(__class__);\n          var ret = cache[ptr];\n          if (ret) return ret;\n          ret = Object.create((__class__ || WrapperObject).prototype);\n          ret.ptr = ptr;\n          return cache[ptr] = ret;\n        }\n\n        Module[\"wrapPointer\"] = wrapPointer;\n\n        function castObject(obj, __class__) {\n          return wrapPointer(obj.ptr, __class__);\n        }\n\n        Module[\"castObject\"] = castObject;\n        Module[\"NULL\"] = wrapPointer(0);\n\n        function destroy(obj) {\n          if (!obj[\"__destroy__\"]) throw \"Error: Cannot destroy object. (Did you create it yourself?)\";\n          obj[\"__destroy__\"]();\n          delete getCache(obj.__class__)[obj.ptr];\n        }\n\n        Module[\"destroy\"] = destroy;\n\n        function compare(obj1, obj2) {\n          return obj1.ptr === obj2.ptr;\n        }\n\n        Module[\"compare\"] = compare;\n\n        function getPointer(obj) {\n          return obj.ptr;\n        }\n\n        Module[\"getPointer\"] = getPointer;\n\n        function getClass(obj) {\n          return obj.__class__;\n        }\n\n        Module[\"getClass\"] = getClass;\n        var ensureCache = {\n          buffer: 0,\n          size: 0,\n          pos: 0,\n          temps: [],\n          needed: 0,\n          prepare: function prepare() {\n            if (ensureCache.needed) {\n              for (var i = 0; i < ensureCache.temps.length; i++) {\n                Module[\"_free\"](ensureCache.temps[i]);\n              }\n\n              ensureCache.temps.length = 0;\n              Module[\"_free\"](ensureCache.buffer);\n              ensureCache.buffer = 0;\n              ensureCache.size += ensureCache.needed;\n              ensureCache.needed = 0;\n            }\n\n            if (!ensureCache.buffer) {\n              ensureCache.size += 128;\n              ensureCache.buffer = Module[\"_malloc\"](ensureCache.size);\n              assert(ensureCache.buffer);\n            }\n\n            ensureCache.pos = 0;\n          },\n          alloc: function alloc(array, view) {\n            assert(ensureCache.buffer);\n            var bytes = view.BYTES_PER_ELEMENT;\n            var len = array.length * bytes;\n            len = len + 7 & -8;\n            var ret;\n\n            if (ensureCache.pos + len >= ensureCache.size) {\n              assert(len > 0);\n              ensureCache.needed += len;\n              ret = Module[\"_malloc\"](len);\n              ensureCache.temps.push(ret);\n            } else {\n              ret = ensureCache.buffer + ensureCache.pos;\n              ensureCache.pos += len;\n            }\n\n            return ret;\n          },\n          copy: function copy(array, view, offset) {\n            offset >>>= 0;\n            var bytes = view.BYTES_PER_ELEMENT;\n\n            switch (bytes) {\n              case 2:\n                offset >>>= 1;\n                break;\n\n              case 4:\n                offset >>>= 2;\n                break;\n\n              case 8:\n                offset >>>= 3;\n                break;\n            }\n\n            for (var i = 0; i < array.length; i++) {\n              view[offset + i] = array[i];\n            }\n          }\n        };\n\n        function ensureString(value) {\n          if (typeof value === \"string\") {\n            var intArray = intArrayFromString(value);\n            var offset = ensureCache.alloc(intArray, HEAP8);\n            ensureCache.copy(intArray, HEAP8, offset);\n            return offset;\n          }\n\n          return value;\n        }\n\n        function VoidPtr() {\n          throw \"cannot construct a VoidPtr, no constructor in IDL\";\n        }\n\n        VoidPtr.prototype = Object.create(WrapperObject.prototype);\n        VoidPtr.prototype.constructor = VoidPtr;\n        VoidPtr.prototype.__class__ = VoidPtr;\n        VoidPtr.__cache__ = {};\n        Module[\"VoidPtr\"] = VoidPtr;\n\n        VoidPtr.prototype[\"__destroy__\"] = VoidPtr.prototype.__destroy__ = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_VoidPtr___destroy___0(self);\n        };\n\n        function Graphviz(yInvert, nop) {\n          if (yInvert && typeof yInvert === \"object\") yInvert = yInvert.ptr;\n          if (nop && typeof nop === \"object\") nop = nop.ptr;\n          this.ptr = _emscripten_bind_Graphviz_Graphviz_2(yInvert, nop);\n          getCache(Graphviz)[this.ptr] = this;\n        }\n\n        Graphviz.prototype = Object.create(WrapperObject.prototype);\n        Graphviz.prototype.constructor = Graphviz;\n        Graphviz.prototype.__class__ = Graphviz;\n        Graphviz.__cache__ = {};\n        Module[\"Graphviz\"] = Graphviz;\n\n        Graphviz.prototype[\"version\"] = Graphviz.prototype.version = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_Graphviz_version_0(self));\n        };\n\n        Graphviz.prototype[\"lastError\"] = Graphviz.prototype.lastError = function () {\n          var self = this.ptr;\n          return UTF8ToString(_emscripten_bind_Graphviz_lastError_0(self));\n        };\n\n        Graphviz.prototype[\"layout\"] = Graphviz.prototype.layout = function (dot, format, engine) {\n          var self = this.ptr;\n          ensureCache.prepare();\n          if (dot && typeof dot === \"object\") dot = dot.ptr;else dot = ensureString(dot);\n          if (format && typeof format === \"object\") format = format.ptr;else format = ensureString(format);\n          if (engine && typeof engine === \"object\") engine = engine.ptr;else engine = ensureString(engine);\n          return UTF8ToString(_emscripten_bind_Graphviz_layout_3(self, dot, format, engine));\n        };\n\n        Graphviz.prototype[\"createFile\"] = Graphviz.prototype.createFile = function (file, data) {\n          var self = this.ptr;\n          ensureCache.prepare();\n          if (file && typeof file === \"object\") file = file.ptr;else file = ensureString(file);\n          if (data && typeof data === \"object\") data = data.ptr;else data = ensureString(data);\n\n          _emscripten_bind_Graphviz_createFile_2(self, file, data);\n        };\n\n        Graphviz.prototype[\"__destroy__\"] = Graphviz.prototype.__destroy__ = function () {\n          var self = this.ptr;\n\n          _emscripten_bind_Graphviz___destroy___0(self);\n        };\n\n        return cpp.ready;\n      };\n    }();\n\n    module.exports = cpp;\n  })(graphvizlib$2);\n\n  var graphvizlib = graphvizlib$2.exports;\n  var graphvizlib$1 =\n  /*#__PURE__*/\n  Object.freeze(\n  /*#__PURE__*/\n  _mergeNamespaces({\n    __proto__: null,\n    'default': graphvizlib\n  }, [graphvizlib$2.exports]));\n\n  var __assign = undefined && undefined.__assign || function () {\n    __assign = Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) {\n          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n        if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n        ar[i] = from[i];\n      }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  };\n\n  function imageToFile(image) {\n    return {\n      path: image.path,\n      data: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n<svg width=\\\"\".concat(image.width, \"\\\" height=\\\"\").concat(image.height, \"\\\"></svg>\")\n    };\n  }\n\n  function imagesToFiles(images) {\n    return images.map(imageToFile);\n  }\n\n  function createFiles(graphviz, _ext) {\n    var ext = __assign({\n      images: [],\n      files: []\n    }, _ext);\n\n    __spreadArray(__spreadArray([], ext.files, true), imagesToFiles(ext.images), true).forEach(function (file) {\n      return graphviz.createFile(file.path, file.data);\n    });\n  }\n\n  function graphvizVersion(wasmFolder, wasmBinary) {\n    return loadWasm(graphvizlib$1, wasmFolder, wasmBinary).then(function (module) {\n      return module.Graphviz.prototype.version();\n    });\n  }\n\n  var graphviz = {\n    layout: function layout(dotSource, outputFormat, layoutEngine, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      if (layoutEngine === void 0) {\n        layoutEngine = \"dot\";\n      }\n\n      if (!dotSource) return Promise.resolve(\"\");\n      return loadWasm(graphvizlib$1, ext === null || ext === void 0 ? void 0 : ext.wasmFolder, ext === null || ext === void 0 ? void 0 : ext.wasmBinary).then(function (module) {\n        var graphViz = new module.Graphviz((ext === null || ext === void 0 ? void 0 : ext.yInvert) !== undefined ? ext === null || ext === void 0 ? void 0 : ext.yInvert : false, (ext === null || ext === void 0 ? void 0 : ext.nop) !== undefined ? ext === null || ext === void 0 ? void 0 : ext.nop : 0);\n        createFiles(graphViz, ext);\n        var retVal = graphViz.layout(dotSource, outputFormat, layoutEngine);\n        module.destroy(graphViz);\n\n        if (!retVal) {\n          throw new Error(module.Graphviz.prototype.lastError());\n        }\n\n        return retVal;\n      });\n    },\n    circo: function circo(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"circo\", ext);\n    },\n    dot: function dot(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"dot\", ext);\n    },\n    fdp: function fdp(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"fdp\", ext);\n    },\n    sfdp: function sfdp(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"sfdp\", ext);\n    },\n    neato: function neato(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"neato\", ext);\n    },\n    osage: function osage(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"osage\", ext);\n    },\n    patchwork: function patchwork(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"patchwork\", ext);\n    },\n    twopi: function twopi(dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"twopi\", ext);\n    }\n  };\n\n  var GraphvizSync =\n  /** @class */\n  function () {\n    function GraphvizSync(_wasm) {\n      this._wasm = _wasm;\n    }\n\n    GraphvizSync.prototype.layout = function (dotSource, outputFormat, layoutEngine, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      if (layoutEngine === void 0) {\n        layoutEngine = \"dot\";\n      }\n\n      if (!dotSource) return \"\";\n      var graphViz = new this._wasm.Graphviz((ext === null || ext === void 0 ? void 0 : ext.yInvert) ? 1 : 0, (ext === null || ext === void 0 ? void 0 : ext.nop) ? ext === null || ext === void 0 ? void 0 : ext.nop : 0);\n      createFiles(graphViz, ext);\n      var retVal = graphViz.layout(dotSource, outputFormat, layoutEngine);\n\n      this._wasm.destroy(graphViz);\n\n      if (!retVal) {\n        throw new Error(this._wasm.Graphviz.prototype.lastError());\n      }\n\n      return retVal;\n    };\n\n    GraphvizSync.prototype.circo = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"circo\", ext);\n    };\n\n    GraphvizSync.prototype.dot = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"dot\", ext);\n    };\n\n    GraphvizSync.prototype.fdp = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"fdp\", ext);\n    };\n\n    GraphvizSync.prototype.sfdp = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"sfdp\", ext);\n    };\n\n    GraphvizSync.prototype.neato = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"neato\", ext);\n    };\n\n    GraphvizSync.prototype.osage = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"osage\", ext);\n    };\n\n    GraphvizSync.prototype.patchwork = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"patchwork\", ext);\n    };\n\n    GraphvizSync.prototype.twopi = function (dotSource, outputFormat, ext) {\n      if (outputFormat === void 0) {\n        outputFormat = \"svg\";\n      }\n\n      return this.layout(dotSource, outputFormat, \"twopi\", ext);\n    };\n\n    return GraphvizSync;\n  }();\n\n  function graphvizSync(wasmFolder, wasmBinary) {\n    return loadWasm(graphvizlib$1, wasmFolder, wasmBinary).then(function (wasm) {\n      return new GraphvizSync(wasm);\n    });\n  }\n\n  exports.GraphvizSync = GraphvizSync;\n  exports.StackElement = StackElement;\n  exports.StackParser = StackParser;\n  exports.expatVersion = expatVersion;\n  exports.graphviz = graphviz;\n  exports.graphvizSync = graphvizSync;\n  exports.graphvizVersion = graphvizVersion;\n  exports.parse = parse;\n  exports.wasmFolder = wasmFolder;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../build/expat/expatlib/expatlib.js","../src/util.ts","../src/expat.ts","../build/graphviz/graphvizlib/graphvizlib.js","../src/graphviz.ts"],"names":["expatlib","graphvizlib"],"mappings":"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","sourcesContent":["\nvar cpp = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(cpp) {\n  cpp = cpp || {};\n\nvar Module=typeof cpp!==\"undefined\"?cpp:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"expatlib.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"m\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"G\"];addOnInit(Module[\"asm\"][\"n\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={11694:function($0){var self=Module[\"getCache\"](Module[\"CExpatJS\"])[$0];if(!self.hasOwnProperty(\"startElement\"))throw\"a JSImplementation must implement all functions, you forgot CExpatJS::startElement.\";self[\"startElement\"]()},11912:function($0){var self=Module[\"getCache\"](Module[\"CExpatJS\"])[$0];if(!self.hasOwnProperty(\"endElement\"))throw\"a JSImplementation must implement all functions, you forgot CExpatJS::endElement.\";self[\"endElement\"]()},12124:function($0){var self=Module[\"getCache\"](Module[\"CExpatJS\"])[$0];if(!self.hasOwnProperty(\"characterData\"))throw\"a JSImplementation must implement all functions, you forgot CExpatJS::characterData.\";self[\"characterData\"]()}};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function getWasmTableEntry(funcPtr){return wasmTable.get(funcPtr)}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return function(){abort(\"randomDevice\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort()}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),id:node.id,flags:flags,mode:node.mode,seekable:true,position:0,stream_ops:node.stream_ops,node_ops:node.node_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(path[0]===\"/\"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___syscall_open(path,flags,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(path);var mode=varargs?SYSCALLS.get():0;var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function _abort(){abort(\"\")}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var readAsmConstArgsDouble=ch<105;if(readAsmConstArgsDouble&&buf&1)buf++;readAsmConstArgsArray.push(readAsmConstArgsDouble?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"h\":___syscall_open,\"b\":_abort,\"a\":_emscripten_asm_const_int,\"k\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_environ_get,\"g\":_environ_sizes_get,\"d\":_fd_close,\"i\":_fd_read,\"j\":_fd_seek,\"c\":_fd_write,\"l\":_gettimeofday};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _emscripten_bind_CExpat_CExpat_0=Module[\"_emscripten_bind_CExpat_CExpat_0\"]=function(){return(_emscripten_bind_CExpat_CExpat_0=Module[\"_emscripten_bind_CExpat_CExpat_0\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _emscripten_bind_CExpat_version_0=Module[\"_emscripten_bind_CExpat_version_0\"]=function(){return(_emscripten_bind_CExpat_version_0=Module[\"_emscripten_bind_CExpat_version_0\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _emscripten_bind_CExpat_create_0=Module[\"_emscripten_bind_CExpat_create_0\"]=function(){return(_emscripten_bind_CExpat_create_0=Module[\"_emscripten_bind_CExpat_create_0\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _emscripten_bind_CExpat_destroy_0=Module[\"_emscripten_bind_CExpat_destroy_0\"]=function(){return(_emscripten_bind_CExpat_destroy_0=Module[\"_emscripten_bind_CExpat_destroy_0\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _emscripten_bind_CExpat_parse_1=Module[\"_emscripten_bind_CExpat_parse_1\"]=function(){return(_emscripten_bind_CExpat_parse_1=Module[\"_emscripten_bind_CExpat_parse_1\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _emscripten_bind_CExpat_tag_0=Module[\"_emscripten_bind_CExpat_tag_0\"]=function(){return(_emscripten_bind_CExpat_tag_0=Module[\"_emscripten_bind_CExpat_tag_0\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _emscripten_bind_CExpat_attrs_0=Module[\"_emscripten_bind_CExpat_attrs_0\"]=function(){return(_emscripten_bind_CExpat_attrs_0=Module[\"_emscripten_bind_CExpat_attrs_0\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _emscripten_bind_CExpat_content_0=Module[\"_emscripten_bind_CExpat_content_0\"]=function(){return(_emscripten_bind_CExpat_content_0=Module[\"_emscripten_bind_CExpat_content_0\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _emscripten_bind_CExpat_startElement_0=Module[\"_emscripten_bind_CExpat_startElement_0\"]=function(){return(_emscripten_bind_CExpat_startElement_0=Module[\"_emscripten_bind_CExpat_startElement_0\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _emscripten_bind_CExpat_endElement_0=Module[\"_emscripten_bind_CExpat_endElement_0\"]=function(){return(_emscripten_bind_CExpat_endElement_0=Module[\"_emscripten_bind_CExpat_endElement_0\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _emscripten_bind_CExpat_characterData_0=Module[\"_emscripten_bind_CExpat_characterData_0\"]=function(){return(_emscripten_bind_CExpat_characterData_0=Module[\"_emscripten_bind_CExpat_characterData_0\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _emscripten_bind_CExpat___destroy___0=Module[\"_emscripten_bind_CExpat___destroy___0\"]=function(){return(_emscripten_bind_CExpat___destroy___0=Module[\"_emscripten_bind_CExpat___destroy___0\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=function(){return(_emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _emscripten_bind_CExpatJS_CExpatJS_0=Module[\"_emscripten_bind_CExpatJS_CExpatJS_0\"]=function(){return(_emscripten_bind_CExpatJS_CExpatJS_0=Module[\"_emscripten_bind_CExpatJS_CExpatJS_0\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _emscripten_bind_CExpatJS_startElement_0=Module[\"_emscripten_bind_CExpatJS_startElement_0\"]=function(){return(_emscripten_bind_CExpatJS_startElement_0=Module[\"_emscripten_bind_CExpatJS_startElement_0\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _emscripten_bind_CExpatJS_endElement_0=Module[\"_emscripten_bind_CExpatJS_endElement_0\"]=function(){return(_emscripten_bind_CExpatJS_endElement_0=Module[\"_emscripten_bind_CExpatJS_endElement_0\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _emscripten_bind_CExpatJS_characterData_0=Module[\"_emscripten_bind_CExpatJS_characterData_0\"]=function(){return(_emscripten_bind_CExpatJS_characterData_0=Module[\"_emscripten_bind_CExpatJS_characterData_0\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _emscripten_bind_CExpatJS___destroy___0=Module[\"_emscripten_bind_CExpatJS___destroy___0\"]=function(){return(_emscripten_bind_CExpatJS___destroy___0=Module[\"_emscripten_bind_CExpatJS___destroy___0\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();function WrapperObject(){}WrapperObject.prototype=Object.create(WrapperObject.prototype);WrapperObject.prototype.constructor=WrapperObject;WrapperObject.prototype.__class__=WrapperObject;WrapperObject.__cache__={};Module[\"WrapperObject\"]=WrapperObject;function getCache(__class__){return(__class__||WrapperObject).__cache__}Module[\"getCache\"]=getCache;function wrapPointer(ptr,__class__){var cache=getCache(__class__);var ret=cache[ptr];if(ret)return ret;ret=Object.create((__class__||WrapperObject).prototype);ret.ptr=ptr;return cache[ptr]=ret}Module[\"wrapPointer\"]=wrapPointer;function castObject(obj,__class__){return wrapPointer(obj.ptr,__class__)}Module[\"castObject\"]=castObject;Module[\"NULL\"]=wrapPointer(0);function destroy(obj){if(!obj[\"__destroy__\"])throw\"Error: Cannot destroy object. (Did you create it yourself?)\";obj[\"__destroy__\"]();delete getCache(obj.__class__)[obj.ptr]}Module[\"destroy\"]=destroy;function compare(obj1,obj2){return obj1.ptr===obj2.ptr}Module[\"compare\"]=compare;function getPointer(obj){return obj.ptr}Module[\"getPointer\"]=getPointer;function getClass(obj){return obj.__class__}Module[\"getClass\"]=getClass;var ensureCache={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(ensureCache.needed){for(var i=0;i<ensureCache.temps.length;i++){Module[\"_free\"](ensureCache.temps[i])}ensureCache.temps.length=0;Module[\"_free\"](ensureCache.buffer);ensureCache.buffer=0;ensureCache.size+=ensureCache.needed;ensureCache.needed=0}if(!ensureCache.buffer){ensureCache.size+=128;ensureCache.buffer=Module[\"_malloc\"](ensureCache.size);assert(ensureCache.buffer)}ensureCache.pos=0},alloc:function(array,view){assert(ensureCache.buffer);var bytes=view.BYTES_PER_ELEMENT;var len=array.length*bytes;len=len+7&-8;var ret;if(ensureCache.pos+len>=ensureCache.size){assert(len>0);ensureCache.needed+=len;ret=Module[\"_malloc\"](len);ensureCache.temps.push(ret)}else{ret=ensureCache.buffer+ensureCache.pos;ensureCache.pos+=len}return ret},copy:function(array,view,offset){offset>>>=0;var bytes=view.BYTES_PER_ELEMENT;switch(bytes){case 2:offset>>>=1;break;case 4:offset>>>=2;break;case 8:offset>>>=3;break}for(var i=0;i<array.length;i++){view[offset+i]=array[i]}}};function ensureString(value){if(typeof value===\"string\"){var intArray=intArrayFromString(value);var offset=ensureCache.alloc(intArray,HEAP8);ensureCache.copy(intArray,HEAP8,offset);return offset}return value}function CExpat(){this.ptr=_emscripten_bind_CExpat_CExpat_0();getCache(CExpat)[this.ptr]=this}CExpat.prototype=Object.create(WrapperObject.prototype);CExpat.prototype.constructor=CExpat;CExpat.prototype.__class__=CExpat;CExpat.__cache__={};Module[\"CExpat\"]=CExpat;CExpat.prototype[\"version\"]=CExpat.prototype.version=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_CExpat_version_0(self))};CExpat.prototype[\"create\"]=CExpat.prototype.create=function(){var self=this.ptr;return!!_emscripten_bind_CExpat_create_0(self)};CExpat.prototype[\"destroy\"]=CExpat.prototype.destroy=function(){var self=this.ptr;_emscripten_bind_CExpat_destroy_0(self)};CExpat.prototype[\"parse\"]=CExpat.prototype.parse=function(xml){var self=this.ptr;ensureCache.prepare();if(xml&&typeof xml===\"object\")xml=xml.ptr;else xml=ensureString(xml);return!!_emscripten_bind_CExpat_parse_1(self,xml)};CExpat.prototype[\"tag\"]=CExpat.prototype.tag=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_CExpat_tag_0(self))};CExpat.prototype[\"attrs\"]=CExpat.prototype.attrs=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_CExpat_attrs_0(self))};CExpat.prototype[\"content\"]=CExpat.prototype.content=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_CExpat_content_0(self))};CExpat.prototype[\"startElement\"]=CExpat.prototype.startElement=function(){var self=this.ptr;_emscripten_bind_CExpat_startElement_0(self)};CExpat.prototype[\"endElement\"]=CExpat.prototype.endElement=function(){var self=this.ptr;_emscripten_bind_CExpat_endElement_0(self)};CExpat.prototype[\"characterData\"]=CExpat.prototype.characterData=function(){var self=this.ptr;_emscripten_bind_CExpat_characterData_0(self)};CExpat.prototype[\"__destroy__\"]=CExpat.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_CExpat___destroy___0(self)};function VoidPtr(){throw\"cannot construct a VoidPtr, no constructor in IDL\"}VoidPtr.prototype=Object.create(WrapperObject.prototype);VoidPtr.prototype.constructor=VoidPtr;VoidPtr.prototype.__class__=VoidPtr;VoidPtr.__cache__={};Module[\"VoidPtr\"]=VoidPtr;VoidPtr.prototype[\"__destroy__\"]=VoidPtr.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_VoidPtr___destroy___0(self)};function CExpatJS(){this.ptr=_emscripten_bind_CExpatJS_CExpatJS_0();getCache(CExpatJS)[this.ptr]=this}CExpatJS.prototype=Object.create(CExpat.prototype);CExpatJS.prototype.constructor=CExpatJS;CExpatJS.prototype.__class__=CExpatJS;CExpatJS.__cache__={};Module[\"CExpatJS\"]=CExpatJS;CExpatJS.prototype[\"startElement\"]=CExpatJS.prototype.startElement=function(){var self=this.ptr;_emscripten_bind_CExpatJS_startElement_0(self)};CExpatJS.prototype[\"endElement\"]=CExpatJS.prototype.endElement=function(){var self=this.ptr;_emscripten_bind_CExpatJS_endElement_0(self)};CExpatJS.prototype[\"characterData\"]=CExpatJS.prototype.characterData=function(){var self=this.ptr;_emscripten_bind_CExpatJS_characterData_0(self)};CExpatJS.prototype[\"__destroy__\"]=CExpatJS.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_CExpatJS___destroy___0(self)};\n\n\n  return cpp.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = cpp;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return cpp; });\nelse if (typeof exports === 'object')\n  exports[\"cpp\"] = cpp;\n","function getGlobal() {\r\n    if (typeof self !== \"undefined\") { return self; }\r\n    if (typeof window !== \"undefined\") { return window; }\r\n    if (typeof global !== \"undefined\") { return global; }\r\n    throw new Error(\"unable to locate global object\");\r\n}\r\n\r\nconst globalNS: any = getGlobal();\r\n  \r\nlet _wasmFolder: string | undefined = globalNS.__hpcc_wasmFolder || undefined;\r\nexport function wasmFolder(_?: string): string | undefined {\r\n    if (!arguments.length) return _wasmFolder;\r\n    const retVal: string | undefined = _wasmFolder;\r\n    _wasmFolder = _;\r\n    return retVal;\r\n}\r\n\r\nfunction trimEnd(str: string, charToRemove: string) {\r\n    while (str.charAt(str.length - 1) === charToRemove) {\r\n        str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction trimStart(str: string, charToRemove: string) {\r\n    while (str.charAt(0) === charToRemove) {\r\n        str = str.substring(1);\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function loadWasm(_wasmLib: any, wf?: string, wasmBinary?: Uint8Array): Promise<any> {\r\n    const wasmLib = _wasmLib.default || _wasmLib;\r\n    //  Prevent double load ---\r\n    if (!wasmLib.__hpcc_promise) {\r\n        wasmLib.__hpcc_promise = wasmLib({\r\n                wasmBinary,\r\n                locateFile: (path: string, prefix: string) => {\r\n                    return `${trimEnd(wf || wasmFolder() || prefix || \".\", \"/\")}/${trimStart(path, \"/\")}`;\r\n                }\r\n        });\r\n    }\r\n    return wasmLib.__hpcc_promise;\r\n}\r\n","// @ts-ignore\nimport * as expatlib from \"../build/expat/expatlib/expatlib\";\nimport { loadWasm } from \"./util\";\n\nexport type Attributes = { [key: string]: string };\nexport interface IParser {\n    startElement(tag: string, attrs: Attributes): void;\n    endElement(tag: string): void;\n    characterData(content: string): void;\n}\n\nexport class StackElement {\n\n    private _content = \"\";\n    get content(): string {\n        return this._content;\n    }\n\n    constructor(readonly tag: string, readonly attrs: Attributes) {\n    }\n\n    appendContent(content: string) {\n        this._content += content;\n    }\n}\n\nexport class StackParser implements IParser {\n    private _stack: StackElement[] = [];\n\n    parse(xml: string, wasmFolder?: string, wasmBinary?: Uint8Array): Promise<boolean> {\n        return parse(xml, this, wasmFolder, wasmBinary);\n    }\n\n    top(): StackElement {\n        return this._stack[this._stack.length - 1];\n    }\n\n    startElement(tag: string, attrs: Attributes): StackElement {\n        const retVal = new StackElement(tag, attrs);\n        this._stack.push(retVal);\n        return retVal;\n    }\n\n    endElement(tag: string): StackElement {\n        return this._stack.pop()!;\n    }\n\n    characterData(content: string): void {\n        this.top().appendContent(content);\n    }\n}\n\nfunction parseAttrs(attrs: string): Attributes {\n    const retVal: Attributes = {};\n    const keys = attrs;\n    const sep = `${String.fromCharCode(1)}`;\n    const sep2 = `${sep}${sep}`;\n    keys.split(sep2).filter((key: string) => !!key).forEach((key: string) => {\n        const parts = key.split(sep);\n        retVal[parts[0]] = parts[1];\n    });\n    return retVal;\n}\n\nexport function expatVersion(wasmFolder?: string, wasmBinary?: Uint8Array) {\n    return loadWasm(expatlib, wasmFolder, wasmBinary).then(module => {\n        return module.CExpat.prototype.version();\n    });\n}\n\nexport function parse(xml: string, callback: IParser, wasmFolder?: string, wasmBinary?: Uint8Array): Promise<boolean> {\n    return loadWasm(expatlib, wasmFolder, wasmBinary).then(module => {\n        const parser = new module.CExpatJS();\n        parser.startElement = function () {\n            callback.startElement(this.tag(), parseAttrs(this.attrs()));\n        };\n        parser.endElement = function () {\n            callback.endElement(this.tag());\n        };\n        parser.characterData = function () {\n            callback.characterData(this.content());\n        };\n        parser.create();\n        const retVal = parser.parse(xml);\n        parser.destroy();\n        module.destroy(parser);\n        return retVal;\n    });\n}\n","\nvar cpp = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(cpp) {\n  cpp = cpp || {};\n\nvar Module=typeof cpp!==\"undefined\"?cpp:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"graphvizlib.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"D\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"M\"];addOnInit(Module[\"asm\"][\"E\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={161580:function($0,$1){var path=UTF8ToString($0);var data=UTF8ToString($1);FS.createPath(\"/\",PATH.dirname(path));FS.writeFile(PATH.join(\"/\",path),data)}};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function getWasmTableEntry(funcPtr){return wasmTable.get(funcPtr)}var _emscripten_get_now;_emscripten_get_now=function(){return performance.now()};var _emscripten_get_now_is_monotonic=true;function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return function(){abort(\"randomDevice\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function zeroMemory(address,size){HEAPU8.fill(0,address,address+size)}function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment}function mmapAlloc(size){size=alignMemory(size,65536);var ptr=_memalign(65536,size);if(!ptr)return 0;zeroMemory(ptr,size);return ptr}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),id:node.id,flags:flags,mode:node.mode,seekable:true,position:0,stream_ops:node.stream_ops,node_ops:node.node_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(path[0]===\"/\"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___syscall_access(path,amode){try{path=SYSCALLS.getStr(path);return SYSCALLS.doAccess(path,amode)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fstatat64(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~4352;path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function syscallMmap2(addr,len,prot,flags,fd,off){off<<=12;var ptr;var allocated=false;if((flags&16)!==0&&addr%65536!==0){return-28}if((flags&32)!==0){ptr=mmapAlloc(len);if(!ptr)return-48;allocated=true}else{var info=FS.getStream(fd);if(!info)return-8;var res=FS.mmap(info,addr,len,off,prot,flags);ptr=res.ptr;allocated=res.allocated}SYSCALLS.mappings[ptr]={malloc:ptr,len:len,allocated:allocated,fd:fd,prot:prot,flags:flags,offset:off};return ptr}function ___syscall_mmap2(addr,len,prot,flags,fd,off){try{return syscallMmap2(addr,len,prot,flags,fd,off)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function syscallMunmap(addr,len){var info=SYSCALLS.mappings[addr];if(len===0||!info){return-28}if(len===info.len){var stream=FS.getStream(info.fd);if(stream){if(info.prot&2){SYSCALLS.doMsync(addr,stream,len,info.flags,info.offset)}FS.munmap(stream)}SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}function ___syscall_munmap(addr,len){try{return syscallMunmap(addr,len)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_open(path,flags,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(path);var mode=varargs?SYSCALLS.get():0;var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_unlink(path){try{path=SYSCALLS.getStr(path);FS.unlink(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __emscripten_throw_longjmp(){throw\"longjmp\"}function _abort(){abort(\"\")}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var readAsmConstArgsDouble=ch<105;if(readAsmConstArgsDouble&&buf&1)buf++;readAsmConstArgsArray.push(readAsmConstArgsDouble?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _exit(status){exit(status)}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _getTempRet0(){return getTempRet0()}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _setTempRet0(val){setTempRet0(val)}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"A\":___clock_gettime,\"B\":___syscall_access,\"h\":___syscall_fcntl64,\"x\":___syscall_fstat64,\"u\":___syscall_fstatat64,\"y\":___syscall_ioctl,\"k\":___syscall_mmap2,\"j\":___syscall_munmap,\"e\":___syscall_open,\"v\":___syscall_stat64,\"z\":___syscall_unlink,\"r\":__emscripten_throw_longjmp,\"q\":_abort,\"C\":_emscripten_asm_const_int,\"o\":_emscripten_memcpy_big,\"p\":_emscripten_resize_heap,\"s\":_environ_get,\"t\":_environ_sizes_get,\"a\":_exit,\"d\":_fd_close,\"i\":_fd_read,\"n\":_fd_seek,\"g\":_fd_write,\"c\":_getTempRet0,\"w\":_gettimeofday,\"l\":invoke_iiiiiii,\"m\":invoke_vi,\"b\":_setTempRet0,\"f\":_time};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=function(){return(_emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _emscripten_bind_Graphviz_Graphviz_2=Module[\"_emscripten_bind_Graphviz_Graphviz_2\"]=function(){return(_emscripten_bind_Graphviz_Graphviz_2=Module[\"_emscripten_bind_Graphviz_Graphviz_2\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _emscripten_bind_Graphviz_version_0=Module[\"_emscripten_bind_Graphviz_version_0\"]=function(){return(_emscripten_bind_Graphviz_version_0=Module[\"_emscripten_bind_Graphviz_version_0\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _emscripten_bind_Graphviz_lastError_0=Module[\"_emscripten_bind_Graphviz_lastError_0\"]=function(){return(_emscripten_bind_Graphviz_lastError_0=Module[\"_emscripten_bind_Graphviz_lastError_0\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _emscripten_bind_Graphviz_layout_3=Module[\"_emscripten_bind_Graphviz_layout_3\"]=function(){return(_emscripten_bind_Graphviz_layout_3=Module[\"_emscripten_bind_Graphviz_layout_3\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _emscripten_bind_Graphviz_createFile_2=Module[\"_emscripten_bind_Graphviz_createFile_2\"]=function(){return(_emscripten_bind_Graphviz_createFile_2=Module[\"_emscripten_bind_Graphviz_createFile_2\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _emscripten_bind_Graphviz___destroy___0=Module[\"_emscripten_bind_Graphviz___destroy___0\"]=function(){return(_emscripten_bind_Graphviz___destroy___0=Module[\"_emscripten_bind_Graphviz___destroy___0\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return(_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();function WrapperObject(){}WrapperObject.prototype=Object.create(WrapperObject.prototype);WrapperObject.prototype.constructor=WrapperObject;WrapperObject.prototype.__class__=WrapperObject;WrapperObject.__cache__={};Module[\"WrapperObject\"]=WrapperObject;function getCache(__class__){return(__class__||WrapperObject).__cache__}Module[\"getCache\"]=getCache;function wrapPointer(ptr,__class__){var cache=getCache(__class__);var ret=cache[ptr];if(ret)return ret;ret=Object.create((__class__||WrapperObject).prototype);ret.ptr=ptr;return cache[ptr]=ret}Module[\"wrapPointer\"]=wrapPointer;function castObject(obj,__class__){return wrapPointer(obj.ptr,__class__)}Module[\"castObject\"]=castObject;Module[\"NULL\"]=wrapPointer(0);function destroy(obj){if(!obj[\"__destroy__\"])throw\"Error: Cannot destroy object. (Did you create it yourself?)\";obj[\"__destroy__\"]();delete getCache(obj.__class__)[obj.ptr]}Module[\"destroy\"]=destroy;function compare(obj1,obj2){return obj1.ptr===obj2.ptr}Module[\"compare\"]=compare;function getPointer(obj){return obj.ptr}Module[\"getPointer\"]=getPointer;function getClass(obj){return obj.__class__}Module[\"getClass\"]=getClass;var ensureCache={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(ensureCache.needed){for(var i=0;i<ensureCache.temps.length;i++){Module[\"_free\"](ensureCache.temps[i])}ensureCache.temps.length=0;Module[\"_free\"](ensureCache.buffer);ensureCache.buffer=0;ensureCache.size+=ensureCache.needed;ensureCache.needed=0}if(!ensureCache.buffer){ensureCache.size+=128;ensureCache.buffer=Module[\"_malloc\"](ensureCache.size);assert(ensureCache.buffer)}ensureCache.pos=0},alloc:function(array,view){assert(ensureCache.buffer);var bytes=view.BYTES_PER_ELEMENT;var len=array.length*bytes;len=len+7&-8;var ret;if(ensureCache.pos+len>=ensureCache.size){assert(len>0);ensureCache.needed+=len;ret=Module[\"_malloc\"](len);ensureCache.temps.push(ret)}else{ret=ensureCache.buffer+ensureCache.pos;ensureCache.pos+=len}return ret},copy:function(array,view,offset){offset>>>=0;var bytes=view.BYTES_PER_ELEMENT;switch(bytes){case 2:offset>>>=1;break;case 4:offset>>>=2;break;case 8:offset>>>=3;break}for(var i=0;i<array.length;i++){view[offset+i]=array[i]}}};function ensureString(value){if(typeof value===\"string\"){var intArray=intArrayFromString(value);var offset=ensureCache.alloc(intArray,HEAP8);ensureCache.copy(intArray,HEAP8,offset);return offset}return value}function VoidPtr(){throw\"cannot construct a VoidPtr, no constructor in IDL\"}VoidPtr.prototype=Object.create(WrapperObject.prototype);VoidPtr.prototype.constructor=VoidPtr;VoidPtr.prototype.__class__=VoidPtr;VoidPtr.__cache__={};Module[\"VoidPtr\"]=VoidPtr;VoidPtr.prototype[\"__destroy__\"]=VoidPtr.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_VoidPtr___destroy___0(self)};function Graphviz(yInvert,nop){if(yInvert&&typeof yInvert===\"object\")yInvert=yInvert.ptr;if(nop&&typeof nop===\"object\")nop=nop.ptr;this.ptr=_emscripten_bind_Graphviz_Graphviz_2(yInvert,nop);getCache(Graphviz)[this.ptr]=this}Graphviz.prototype=Object.create(WrapperObject.prototype);Graphviz.prototype.constructor=Graphviz;Graphviz.prototype.__class__=Graphviz;Graphviz.__cache__={};Module[\"Graphviz\"]=Graphviz;Graphviz.prototype[\"version\"]=Graphviz.prototype.version=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_Graphviz_version_0(self))};Graphviz.prototype[\"lastError\"]=Graphviz.prototype.lastError=function(){var self=this.ptr;return UTF8ToString(_emscripten_bind_Graphviz_lastError_0(self))};Graphviz.prototype[\"layout\"]=Graphviz.prototype.layout=function(dot,format,engine){var self=this.ptr;ensureCache.prepare();if(dot&&typeof dot===\"object\")dot=dot.ptr;else dot=ensureString(dot);if(format&&typeof format===\"object\")format=format.ptr;else format=ensureString(format);if(engine&&typeof engine===\"object\")engine=engine.ptr;else engine=ensureString(engine);return UTF8ToString(_emscripten_bind_Graphviz_layout_3(self,dot,format,engine))};Graphviz.prototype[\"createFile\"]=Graphviz.prototype.createFile=function(file,data){var self=this.ptr;ensureCache.prepare();if(file&&typeof file===\"object\")file=file.ptr;else file=ensureString(file);if(data&&typeof data===\"object\")data=data.ptr;else data=ensureString(data);_emscripten_bind_Graphviz_createFile_2(self,file,data)};Graphviz.prototype[\"__destroy__\"]=Graphviz.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_Graphviz___destroy___0(self)};\n\n\n  return cpp.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = cpp;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return cpp; });\nelse if (typeof exports === 'object')\n  exports[\"cpp\"] = cpp;\n","// @ts-ignore\nimport * as graphvizlib from \"../build/graphviz/graphvizlib/graphvizlib\";\nimport { loadWasm } from \"./util\";\n\ntype Format = \"svg\" | \"dot\" | \"json\" | \"dot_json\" | \"xdot_json\" | \"plain\" | \"plain-ext\";\ntype Engine = \"circo\" | \"dot\" | \"fdp\" | \"sfdp\" | \"neato\" | \"osage\" | \"patchwork\" | \"twopi\";\n\ninterface Image {\n    path: string;\n    width: string;\n    height: string;\n}\n\ninterface File {\n    path: string;\n    data: string;\n}\n\ninterface Ext {\n    images?: Image[];\n    files?: File[];\n    wasmFolder?: string;\n    wasmBinary?: Uint8Array;\n    yInvert?: boolean;\n    nop?: number;\n}\n\nfunction imageToFile(image: Image): File {\n    return {\n        path: image.path,\n        data: `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg width=\"${image.width}\" height=\"${image.height}\"></svg>`\n    };\n}\n\nfunction imagesToFiles(images: Image[]) {\n    return images.map(imageToFile);\n}\n\nfunction createFiles(graphviz: any, _ext?: Ext) {\n    const ext = {\n        images: [],\n        files: [],\n        ..._ext\n    };\n    [...ext.files, ...imagesToFiles(ext.images)].forEach(file => graphviz.createFile(file.path, file.data));\n}\n\nexport function graphvizVersion(wasmFolder?: string, wasmBinary?: Uint8Array) {\n    return loadWasm(graphvizlib, wasmFolder, wasmBinary).then(module => {\n        return module.Graphviz.prototype.version();\n    });\n}\n\nexport const graphviz = {\n    layout(dotSource: string, outputFormat: Format = \"svg\", layoutEngine: Engine = \"dot\", ext?: Ext): Promise<string> {\n        if (!dotSource) return Promise.resolve(\"\");\n        return loadWasm(graphvizlib, ext?.wasmFolder, ext?.wasmBinary).then(module => {\n            const graphViz = new module.Graphviz(ext?.yInvert !== undefined ? ext?.yInvert : false, ext?.nop !== undefined ? ext?.nop : 0);\n            createFiles(graphViz, ext);\n            const retVal = graphViz.layout(dotSource, outputFormat, layoutEngine);\n            module.destroy(graphViz);\n            if (!retVal) {\n                throw new Error(module.Graphviz.prototype.lastError());\n            }\n            return retVal;\n        });\n    },\n    circo(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"circo\", ext);\n    },\n    dot(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"dot\", ext);\n    },\n    fdp(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"fdp\", ext);\n    },\n    sfdp(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"sfdp\", ext);\n    },\n    neato(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"neato\", ext);\n    },\n    osage(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"osage\", ext);\n    },\n    patchwork(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"patchwork\", ext);\n    },\n    twopi(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): Promise<string> {\n        return this.layout(dotSource, outputFormat, \"twopi\", ext);\n    }\n};\n\nexport class GraphvizSync {\n\n    constructor(private _wasm: any) {\n    }\n\n    layout(dotSource: string, outputFormat: Format = \"svg\", layoutEngine: Engine = \"dot\", ext?: Ext): string {\n        if (!dotSource) return \"\";\n        const graphViz = new this._wasm.Graphviz(ext?.yInvert ? 1 : 0, ext?.nop ? ext?.nop : 0);\n        createFiles(graphViz, ext);\n        const retVal = graphViz.layout(dotSource, outputFormat, layoutEngine);\n        this._wasm.destroy(graphViz);\n        if (!retVal) {\n            throw new Error(this._wasm.Graphviz.prototype.lastError());\n        }\n        return retVal;\n    }\n\n    circo(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"circo\", ext);\n    }\n\n    dot(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"dot\", ext);\n    }\n\n    fdp(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"fdp\", ext);\n    }\n\n    sfdp(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"sfdp\", ext);\n    }\n\n    neato(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"neato\", ext);\n    }\n\n    osage(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"osage\", ext);\n    }\n\n    patchwork(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"patchwork\", ext);\n    }\n\n    twopi(dotSource: string, outputFormat: Format = \"svg\", ext?: Ext): string {\n        return this.layout(dotSource, outputFormat, \"twopi\", ext);\n    }\n}\n\nexport function graphvizSync(wasmFolder?: string, wasmBinary?: Uint8Array): Promise<GraphvizSync> {\n    return loadWasm(graphvizlib, wasmFolder, wasmBinary).then(wasm => new GraphvizSync(wasm));\n}\n"]},"metadata":{},"sourceType":"script"}