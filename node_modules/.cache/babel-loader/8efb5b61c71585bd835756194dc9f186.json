{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import withRoot from'./withRoot';import CloseIcon from'@material-ui/icons/Close';import IconButton from'@material-ui/core/IconButton';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import DialogActions from'@material-ui/core/DialogActions';import TextField from'@material-ui/core/TextField';import DoYouWantToReplaceItDialog from'./DoYouWantToReplaceItDialog';var styles=function styles(theme){return{title:{display:'flex',justifyContent:'space-between'},content:{overflowY:'visible'}};};var SaveAsToBrowserDialog=/*#__PURE__*/function(_React$Component){_inherits(SaveAsToBrowserDialog,_React$Component);function SaveAsToBrowserDialog(props){var _this;_classCallCheck(this,SaveAsToBrowserDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(SaveAsToBrowserDialog).call(this,props));_this.handleClose=function(){_this.props.onClose();};_this.handleChange=function(event){_this.name=event.target.value;};_this.handleKeyPress=function(event){if(event.key==='Enter'){_this.handleSave();}};_this.handleSave=function(){var newName=_this.name;var currentName=_this.props.name;if(_this.props.projects[newName]==null||newName===currentName){_this.handleConfirmedSave();}else{_this.setState({doYouWantToReplaceItDialogIsOpen:true,replaceName:newName});}};_this.handleConfirmedSave=function(){_this.setState({doYouWantToReplaceItDialogIsOpen:false});_this.props.onSave(_this.name);};_this.handleDoYouWantToReplaceItClose=function(){_this.setState({doYouWantToReplaceItDialogIsOpen:false});};_this.state={doYouWantToReplaceItDialogIsOpen:false};_this.name=_this.props.defaultNewName;return _this;}_createClass(SaveAsToBrowserDialog,[{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(\"div\",null,React.createElement(Dialog,{id:\"save-to-browser-dialog\",className:classes.root,open:true,onClose:this.handleClose,\"aria-labelledby\":\"form-dialog-title\"},React.createElement(\"div\",{className:classes.title},React.createElement(DialogTitle,{id:\"form-dialog-title\"},this.props.rename?'Rename graph':'Save graph to browser'),React.createElement(IconButton,{\"aria-label\":\"Close\",onClick:this.handleClose},React.createElement(CloseIcon,null))),React.createElement(DialogContent,{classes:{root:classes.content}},React.createElement(DialogContentText,null,this.props.rename?\"Give the current graph a new name in the browser's local storage.\":\"Save a the current graph to the browser's local storage under a new name.\"),React.createElement(TextField,{autoFocus:true,margin:\"dense\",id:\"name\",label:\"New name\",type:\"text\",placeholder:this.props.defaultNewName,fullWidth:true,onChange:this.handleChange,onKeyPress:this.handleKeyPress})),React.createElement(DialogActions,null,React.createElement(Button,{onClick:this.props.onClose,color:\"secondary\"},\"Cancel\"),React.createElement(Button,{onClick:this.handleSave,color:\"secondary\",id:\"save\"},this.props.rename?'Rename':'Save'))),this.state.doYouWantToReplaceItDialogIsOpen&&React.createElement(DoYouWantToReplaceItDialog,{name:this.state.replaceName,onReplace:this.handleConfirmedSave,onClose:this.handleDoYouWantToReplaceItClose}));}}]);return SaveAsToBrowserDialog;}(React.Component);export default withRoot(withStyles(styles)(SaveAsToBrowserDialog));","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/SaveAsToBrowserDialog.js"],"names":["React","withStyles","withRoot","CloseIcon","IconButton","Button","Dialog","DialogContent","DialogContentText","DialogTitle","DialogActions","TextField","DoYouWantToReplaceItDialog","styles","theme","title","display","justifyContent","content","overflowY","SaveAsToBrowserDialog","props","handleClose","onClose","handleChange","event","name","target","value","handleKeyPress","key","handleSave","newName","currentName","projects","handleConfirmedSave","setState","doYouWantToReplaceItDialogIsOpen","replaceName","onSave","handleDoYouWantToReplaceItClose","state","defaultNewName","classes","root","rename","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DoYouWantToReplaceItDialog from './DoYouWantToReplaceItDialog';\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  content: {\r\n    overflowY: 'visible',\r\n  },\r\n});\r\n\r\nclass SaveAsToBrowserDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      doYouWantToReplaceItDialogIsOpen: false,\r\n    };\r\n    this.name = this.props.defaultNewName;\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.name = event.target.value;\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.handleSave();\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    const newName = this.name;\r\n    const currentName = this.props.name;\r\n    if (this.props.projects[newName] == null || newName === currentName) {\r\n      this.handleConfirmedSave();\r\n    } else {\r\n      this.setState({\r\n        doYouWantToReplaceItDialogIsOpen: true,\r\n        replaceName: newName,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleConfirmedSave = () => {\r\n    this.setState({\r\n      doYouWantToReplaceItDialogIsOpen: false,\r\n    });\r\n    this.props.onSave(this.name);\r\n  };\r\n\r\n  handleDoYouWantToReplaceItClose = () => {\r\n    this.setState({\r\n      doYouWantToReplaceItDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n           id=\"save-to-browser-dialog\"\r\n          className={classes.root}\r\n          open\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              {this.props.rename ? 'Rename graph' : 'Save graph to browser'}\r\n            </DialogTitle>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent classes={{root: classes.content}}>\r\n            <DialogContentText>\r\n              {this.props.rename ?\r\n                \"Give the current graph a new name in the browser's local storage.\" :\r\n                \"Save a the current graph to the browser's local storage under a new name.\"\r\n              }\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"New name\"\r\n              type=\"text\"\r\n              placeholder={this.props.defaultNewName}\r\n              fullWidth\r\n              onChange={this.handleChange}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.onClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSave} color=\"secondary\" id=\"save\">\r\n              {this.props.rename ? 'Rename' : 'Save'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {this.state.doYouWantToReplaceItDialogIsOpen &&\r\n          <DoYouWantToReplaceItDialog\r\n            name={this.state.replaceName}\r\n            onReplace={this.handleConfirmedSave}\r\n            onClose={this.handleDoYouWantToReplaceItClose}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSaveAsToBrowserDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  defaultNewName: PropTypes.string.isRequired,\r\n  projects: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(SaveAsToBrowserDialog));\r\n"]},"metadata":{},"sourceType":"module"}