{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\src\\\\DescriptionDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport AceEditor from 'react-ace';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n    height: 'calc(100vh - 64px - 2 * 12px)',\n    textAlign: 'left'\n  },\n  drawerHeader: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    textTransform: 'capitalize'\n  }, theme.mixins.toolbar)\n});\n\nclass DescriptionDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      this.props.onClick();\n    };\n\n    this.handleDrawerClose = () => {\n      this.props.onDescriptionDrawerClose();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      id: \"format-drawer\",\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: true,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Goal Descriptions\"), React.createElement(IconButton, {\n      id: \"close-button\",\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"/**\", React.createElement(AceEditor // FIXME: Remove workaround when https://github.com/securingsincity/react-ace/issues/767 is fixed\n    , {\n      key: this.props.holdOff,\n      theme: \"github\",\n      fontSize: this.props.fontSize + 'px',\n      tabSize: this.props.tabSize,\n      onChange: this.handleChange,\n      onBeforeLoad: this.handleBeforeLoad,\n      onLoad: this.handleLoad,\n      onFocus: this.props.onFocus,\n      onBlur: this.props.onBlur //name=\"text-editor\"\n      //value={this.props.dotSrc}\n      // viewport height - app bar - 2 * padding\n      ,\n      height: this.props.height - 10,\n      width: this.props.width,\n      wrapEnabled: true,\n      showPrintMargin: false,\n      debounceChangePeriod: this.props.holdOff * 1000,\n      editorProps: {\n        $blockScrolling: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"**/\", React.createElement(AceEditor, {\n      mode: \"txt\",\n      theme: \"github\",\n      value: props.contents,\n      width: null,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDescriptionDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(DescriptionDrawer);","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/DescriptionDrawer.js"],"names":["React","PropTypes","withStyles","Drawer","DialogTitle","Divider","IconButton","AceEditor","ChevronLeftIcon","ChevronRightIcon","drawerWidth","styles","theme","root","flexGrow","hide","display","drawerPaper","position","width","height","textAlign","drawerHeader","alignItems","justifyContent","padding","textTransform","mixins","toolbar","DescriptionDrawer","Component","handleClick","props","onClick","handleDrawerClose","onDescriptionDrawerClose","render","classes","paper","direction","holdOff","fontSize","tabSize","handleChange","handleBeforeLoad","handleLoad","onFocus","onBlur","$blockScrolling","contents","onChange","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AceEditor from 'react-ace';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nconst drawerWidth = '100%';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n    textAlign: 'left',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    textTransform: 'capitalize',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n});\r\n\r\n\r\nclass DescriptionDrawer extends React.Component {\r\n\r\n\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.onDescriptionDrawerClose();\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Drawer\r\n          id=\"format-drawer\"\r\n          variant=\"persistent\"\r\n          anchor='left'\r\n          open\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Goal Descriptions\r\n            </DialogTitle>\r\n            <IconButton id=\"close-button\" onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          /**\r\n          <AceEditor\r\n\t          // FIXME: Remove workaround when https://github.com/securingsincity/react-ace/issues/767 is fixed\r\n\t          key={this.props.holdOff}\r\n\t          theme=\"github\"\r\n\t          fontSize={this.props.fontSize + 'px'}\r\n\t          tabSize={this.props.tabSize}\r\n\t          onChange={this.handleChange}\r\n\t          onBeforeLoad={this.handleBeforeLoad}\r\n\t          onLoad={this.handleLoad}\r\n\t          onFocus={this.props.onFocus}\r\n\t          onBlur={this.props.onBlur}\r\n\t          //name=\"text-editor\"\r\n\t          //value={this.props.dotSrc}\r\n\t          // viewport height - app bar - 2 * padding\r\n\t          height={this.props.height -10}\r\n\t          width={this.props.width}\r\n\t          wrapEnabled\r\n\t          showPrintMargin={false}\r\n\t          debounceChangePeriod={this.props.holdOff * 1000}\r\n\t          editorProps={{\r\n\t            $blockScrolling: true\r\n\t          }}\r\n\t        />\r\n\t        **/\r\n\t       <AceEditor\r\n\t        mode=\"txt\"\r\n             theme=\"github\"\r\n\t        value={props.contents}\r\n\t        width={null}\r\n\t        onChange={onChange}\r\n\t      />\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDescriptionDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DescriptionDrawer);"]},"metadata":{},"sourceType":"module"}