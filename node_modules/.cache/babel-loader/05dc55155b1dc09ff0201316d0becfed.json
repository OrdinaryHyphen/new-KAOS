{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import parser from'./dotParser';var parse=parser.parse;var whitespaceWithinLine=' \\t\\r';var whitespace=whitespaceWithinLine+'\\n';var statementSeparators=whitespace+';';var DotGraph=/*#__PURE__*/function(){function DotGraph(dotSrc){_classCallCheck(this,DotGraph);this.dotSrc=dotSrc;this.reparse();}_createClass(DotGraph,[{key:\"reparse\",value:function reparse(){this.parseDot(this.dotSrc);}},{key:\"insertNode\",value:function insertNode(nodeName,attributes){var attributesString=toAttributesString(attributes);var newNodeString='    '+nodeName+attributesString;this.insertAtEndOfGraph(newNodeString+'\\n');}},{key:\"insertEdge\",value:function insertEdge(startNodeName,endNodeName,attributes){var attributesString=toAttributesString(attributes);var newEdgeString='    '+startNodeName+' -> '+endNodeName+attributesString;this.insertAtEndOfGraph(newEdgeString+'\\n');}},{key:\"deleteNode\",value:function deleteNode(nodeName){this.deleteComponent('node',nodeName);}},{key:\"deleteEdge\",value:function deleteEdge(edgeName){var nodeNames=edgeName.split('--');if(nodeNames.length!==2){nodeNames=edgeName.split('->');}this.deleteComponent.apply(this,['edge'].concat(_toConsumableArray(nodeNames)));}},{key:\"getNodeAttributes\",value:function getNodeAttributes(nodeName){if(this.nodes[nodeName]){return this.nodes[nodeName].attributes;}else{return null;}}},{key:\"getEdgeAttributes\",value:function getEdgeAttributes(edgeName){if(this.edges[edgeName]){return this.edges[edgeName].attributes;}else{return null;}}},{key:\"parseDot\",value:function parseDot(){this.ast=parse(this.dotSrc)[0];var children=this.ast.children;this.nodes={};this.edges={};this.edgeop=this.ast.type==='digraph'?'->':'--';this.parseChildren(children,this.ast);this.components=Object.assign({},this.nodes,this.edges);}},{key:\"parseChildren\",value:function parseChildren(children,parent){var _this=this;children.forEach(function(child,i){if(child.type==='node_stmt'){_this.parseChildren([child.node_id],child);var attributes=child.attr_list.reduce(function(attrs,attr,i){attrs[attr.id]=attr.eq;return attrs;},{});Object.assign(_this.nodes[child.node_id.id].attributes,attributes);}else if(child.type==='node_id'){var nodeId=child.id;if(_this.nodes[nodeId]==null){_this.nodes[nodeId]={locations:[],attributes:{}};}if(parent.type==='node_stmt'){_this.nodes[nodeId].locations.push(parent.location);}else{_this.nodes[nodeId].locations.push(child.location);}if(parent.type==='edge_stmt'){if(i>0){var nodeIds=[children[i-1],child];var nodeNames=nodeIds.map(function(nodeId){return nodeId.id+(nodeId.port?':'+nodeId.port.id:'');});var edgeId=nodeNames[0]+_this.edgeop+nodeNames[1];if(_this.edges[edgeId]==null){_this.edges[edgeId]={locations:[],attributes:{}};}var location={start:nodeIds[0].location.end,end:nodeIds[1].location.start};_this.edges[edgeId].locations.push(location);}}}else if(child.type==='edge_stmt'){_this.parseChildren(child.edge_list,child);// FIXME: add support for attributes\n}else if(child.type==='subgraph'){_this.parseChildren(child.children,child);}});}},{key:\"toString\",value:function toString(){this.str='';this.edgeop=this.ast.type==='digraph'?'->':'--';if(this.ast.strict){this.str+='strict ';}this.str+=this.ast.type+' ';if(this.ast.id){this.str+=quoteIdIfNecessary(this.ast.id)+' ';}this.str+='{';this.toStringChildren(this.ast.children);this.str+='}';return this.str;}},{key:\"toStringChildren\",value:function toStringChildren(children){var _this2=this;var separator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:' ';children.forEach(function(child,i){if(child.type==='pad'){return;}if(child.type==='newline'){return;}if(child.type==='comment'){return;}if(child.type==='stmt_sep'){return;}if(i>0){_this2.str+=separator;}if(child.type==='attr_stmt'){_this2.str+=quoteIdIfNecessary(child.target);if(child.attr_list.length>0){_this2.str+=' [';_this2.toStringChildren(child.attr_list);_this2.str+=']';}}if(child.type==='node_stmt'){_this2.toStringChildren([child.node_id]);if(child.attr_list.length>0){_this2.str+=' [';_this2.toStringChildren(child.attr_list);_this2.str+=']';}}else if(child.type==='node_id'){_this2.str+=quoteIdIfNecessary(child.id);if(typeof child.port==='object'){_this2.str+=':';_this2.toStringChildren([child.port]);}}else if(child.type==='id'){if(child.html){_this2.str+='<'+child.value+'>';}}else if(child.type==='port'){_this2.str+=child.id;if(child.compass_pt){_this2.str+=':'+child.compass_pt;}}else if(child.type==='attr'){if(typeof child.eq==='object'){_this2.str+=quoteIdIfNecessary(child.id)+'=';_this2.toStringChildren([child.eq]);}else{_this2.str+=quoteIdIfNecessary(child.id)+'='+quoteIdIfNecessary(child.eq);}}else if(child.type==='edge_stmt'){_this2.toStringChildren(child.edge_list,' '+_this2.edgeop+' ');if(child.attr_list.length>0){_this2.str+=' [';_this2.toStringChildren(child.attr_list);_this2.str+=']';}}else if(child.type==='subgraph'){if(child.id){_this2.str+='subgraph '+quoteIdIfNecessary(child.id);}_this2.str+='{';_this2.toStringChildren(child.children);_this2.str+='}';}});}},{key:\"insertAtEndOfGraph\",value:function insertAtEndOfGraph(string){this.deleteComponent(null);this.index-=1;this.insert(string);}},{key:\"deleteComponent\",value:function deleteComponent(type,id,edgeRHSId){this.numDeletedComponents=0;this.edgeop=this.ast.type==='digraph'?'->':'--';this.index=0;this.skippableIndex=0;this.erasedIndex=-1;this.numErased=0;if(this.ast.strict){this.skip('strict');}this.skip(this.ast.type);if(this.ast.id){this.skip(this.ast.id);}this.skip('{');this.deleteComponentInStatementList(this.ast.children,type,id,edgeRHSId);this.skip('}');}},{key:\"deleteComponentInStatementList\",value:function deleteComponentInStatementList(statementList,type,id,edgeRHSId,erase){var _this3=this;statementList.forEach(function(statement,i){var erasedStatement=false;if(statement.type==='attr_stmt'){var targetIsGraph=statement.target==='graph';_this3.skip(statement.target,false,{optional:targetIsGraph});_this3.skipAttrList(statement.attr_list,false,targetIsGraph);}else if(statement.type==='node_stmt'){var eraseNode=type==='node'&&statement.node_id.id===id;_this3.skipLocation(statement,eraseNode);if(eraseNode){erasedStatement=true;_this3.numDeletedComponents+=1;}}else if(statement.type==='edge_stmt'){var edgeList=statement.edge_list;var erasedLastEdgeStatement=true;var erasedAllEdgeConnections=true;edgeList.forEach(function(edgeConnection,i){if(edgeConnection.type==='subgraph'){var subgraph=edgeConnection;var isFirstStatement=i===0;if(!isFirstStatement){var eraseEdge=erasedAllEdgeConnections;_this3.skipLocationBetween(edgeList[i-1],subgraph,eraseEdge,true);if(eraseEdge){_this3.numDeletedComponents+=1;}else{erasedLastEdgeStatement=false;}_this3.skipLocationBetween(edgeList[i-1],subgraph,false,true);erasedLastEdgeStatement=false;}_this3.deleteComponentInStatementList([subgraph],type,id,edgeRHSId);erasedAllEdgeConnections=false;}else{var nodeId=edgeConnection;var _eraseNode=type==='node'&&nodeId.id===id;var _isFirstStatement=i===0;if(!_isFirstStatement){var nodeIdLeft=getNodeIdString(edgeList[i-1]);var nodeIdRight=getNodeIdString(nodeId);var splitEdge=type==='edge'&&nodeIdLeft===id&&nodeIdRight===edgeRHSId;var _eraseEdge=_eraseNode||erasedAllEdgeConnections||splitEdge;_this3.skipLocationBetween(edgeList[i-1],nodeId,_eraseEdge,true);if(splitEdge){_this3.insert(' ');erasedLastEdgeStatement=true;}if(_eraseEdge){_this3.numDeletedComponents+=1;}else{erasedAllEdgeConnections=false;erasedLastEdgeStatement=false;}}if(_eraseNode){_this3.numDeletedComponents+=1;}else{erasedAllEdgeConnections=false;}_this3.skipLocation(nodeId,_eraseNode,true);}});erasedStatement=erasedAllEdgeConnections;_this3.skipLocation(statement,erasedLastEdgeStatement,true);if(erasedLastEdgeStatement){_this3.skipPrevious(erasedLastEdgeStatement);if(statement.attr_list.length>0){if(!statementSeparators.includes(_this3.dotSrc[_this3.index-1])&&!statementSeparators.includes(_this3.dotSrc[_this3.index])){_this3.insert(' ');}}}}else if(statement.type==='subgraph'){_this3.skipOptional('subgraph');if(statement.id){_this3.skip(statement.id);}_this3.skip('{');_this3.deleteComponentInStatementList(statement.children,type,id,edgeRHSId);_this3.skip('}');}_this3.skipSeparators(erasedStatement,{skipSemicolon:true});});this.skipPrevious(true);}},{key:\"skipId\",value:function skipId(id,erase){if(id.html){this.skip('<',erase);this.skip(id.value,erase,{noSkipNewline:true});this.skip('>',erase);}else{this.skip(id.eq,erase);}}},{key:\"skipNodeId\",value:function skipNodeId(nodeId,erase){this.skip(nodeId.id,erase);if(nodeId.port){this.skip(':',erase);this.skipPort(nodeId.port,erase);}}},{key:\"skipPort\",value:function skipPort(port,erase){this.skip(port.id,erase);if(port.compass_pt){this.skip(':',erase);this.skip(port.compass_pt,erase);}}},{key:\"skipAttrList\",value:function skipAttrList(attrList,erase,optionalSquareBrackets){var _this4=this;var attrListOptions={skipComma:true,skipSemicolon:true};attrList.forEach(function(attr,i){_this4.skip('[',erase,{optional:optionalSquareBrackets||i>0});_this4.skip(attr.id,erase,attrListOptions);_this4.skip('=',erase);if(typeof attr.eq==='object'&&attr.eq.type==='id'){_this4.skipId(attr.eq,erase);}else{_this4.skip(attr.eq,erase);}_this4.skip(']',erase,{optional:optionalSquareBrackets||i<attrList.length-1});});}},{key:\"skipOptional\",value:function skipOptional(string){var erase=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options=Object.assign({optional:true},options);this.skip(string,erase,options);}},{key:\"skipSeparators\",value:function skipSeparators(){var erase=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var index=this.index;var skipIndex=this.index;var prevIndex=null;var prevLength=null;function skipPartially(nextIndex){if(erase){if(this.skippableIndex<=this.erasedIndex){if(this.dotSrc[index]==='\\n'){if(this.dotSrc[this.skippableIndex-1]==='\\n'){skipIndex=this.skippableIndex-1;}else{skipIndex=this.skippableIndex;}}}this.eraseBetween(skipIndex,index);nextIndex-=index-skipIndex;erase=false;}index=nextIndex;skipIndex=nextIndex;this.skippableIndex=nextIndex;}while(index!==prevIndex||this.dotSrc.length!==prevLength){prevIndex=index;prevLength=this.dotSrc.length;if(whitespaceWithinLine.includes(this.dotSrc[index])){index+=1;}if(options.skipComma){if(this.dotSrc[index]===','){index+=1;}}if(options.skipSemicolon){if(this.dotSrc[index]===';'){index+=1;}}if(!options.noSkipNewline){if(this.dotSrc[index]==='\\n'){var nextIndex=index+1;skipPartially.call(this,nextIndex);}}if(this.dotSrc.startsWith('/*',index)){var _nextIndex=this.dotSrc.indexOf('*/',index+2)+2;skipPartially.call(this,_nextIndex);}if(this.dotSrc.startsWith('//',index)){var _nextIndex2=this.dotSrc.indexOf('\\n',index+2)+1;skipPartially.call(this,_nextIndex2);}if(this.dotSrc.startsWith('#',index)){var _nextIndex3=this.dotSrc.indexOf('\\n',index+1)+1;skipPartially.call(this,_nextIndex3);}}if(erase){this.eraseBetween(skipIndex,index);}else{this.index=index;}}},{key:\"skip\",value:function skip(string){var erase=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};this.skipSeparators(false,options);var index=this.index;var skipIndex=index;if(this.dotSrc[index]==='\"'){string=quoteId(string);}var found=false;if(!this.dotSrc.startsWith(string,index)){if(!options.optional){throw Error('Expected \"'+string+'\", found: \"'+this.dotSrc.slice(index,index+40)+'...\"');}}else{index+=string.length;found=true;}if(erase){this.eraseBetween(skipIndex,index);this.skipSeparators(erase);}else{this.index=index;if(found&&string.length>0){this.skippableIndex=index;}}return found;}},{key:\"skipPrevious\",value:function skipPrevious(erase){if(erase){if(this.skippableIndex<=this.erasedIndex){this.eraseBetween(this.skippableIndex,this.index);this.index=this.skippableIndex;}}else{this.skippableIndex=this.index;}}},{key:\"skipLocationBetween\",value:function skipLocationBetween(startAstNode,endAstNode,erase,ignoreStart){var startIndex=startAstNode.location.end.offset-this.numErased;var endIndex=endAstNode.location.start.offset-this.numErased;this.skipBetween(startIndex,endIndex,erase,ignoreStart);}},{key:\"skipLocation\",value:function skipLocation(astNode,erase,ignoreStart){var startIndex=astNode.location.start.offset-this.numErased;var endIndex=astNode.location.end.offset-this.numErased;this.skipBetween(startIndex,endIndex,erase,ignoreStart);}},{key:\"skipBetween\",value:function skipBetween(startIndex,endIndex,erase,ignoreStart){if(ignoreStart){startIndex=this.index;}else{if(startIndex!==this.index){throw Error('Unexpected index '+this.index+', expected '+startIndex);}}if(erase){this.eraseBetween(startIndex,endIndex);}else{this.index=endIndex;if(startIndex!==endIndex){this.skippableIndex=this.index;}}}},{key:\"eraseBetween\",value:function eraseBetween(startIndex,endIndex){if(startIndex!==endIndex){this.dotSrc=this.dotSrc.slice(0,startIndex)+this.dotSrc.slice(endIndex);this.erasedIndex=startIndex;this.numErased+=endIndex-startIndex;}}},{key:\"insert\",value:function insert(string){this.dotSrc=this.dotSrc.slice(0,this.index)+string+this.dotSrc.slice(this.index);this.index+=string.length;this.numErased-=string.length;}}]);return DotGraph;}();export{DotGraph as default};function getNodeIdString(astNode){var str=astNode.id;if(astNode.port){str+=':'+astNode.port.id;if(astNode.port.compass_pt){str+=':'+astNode.port.compass_pt;}}return str;}function quoteId(value){value=value.replace(/\"/g,'\\\\\"');value='\"'+value+'\"';return value;}function quoteIdIfNecessary(value){var re='^[a-zA-Z\\\\x80-\\\\xff_][a-zA-Z\\\\x80-\\\\xff_0-9]*$';if(!value.match(re)){value=quoteId(value);}return value;}function toAttributesString(attributes){var attributesString='';for(var _i=0,_Object$keys=Object.keys(attributes);_i<_Object$keys.length;_i++){var name=_Object$keys[_i];if(attributes[name]!=null){var value=attributes[name].toString();value=quoteIdIfNecessary(value);attributesString+=' '+name+'='+value;}}if(attributesString){attributesString=' ['+attributesString+']';}return attributesString;}","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/dot.js"],"names":["parser","parse","whitespaceWithinLine","whitespace","statementSeparators","DotGraph","dotSrc","reparse","parseDot","nodeName","attributes","attributesString","toAttributesString","newNodeString","insertAtEndOfGraph","startNodeName","endNodeName","newEdgeString","deleteComponent","edgeName","nodeNames","split","length","nodes","edges","ast","children","edgeop","type","parseChildren","components","Object","assign","parent","forEach","child","i","node_id","attr_list","reduce","attrs","attr","id","eq","nodeId","locations","push","location","nodeIds","map","port","edgeId","start","end","edge_list","str","strict","quoteIdIfNecessary","toStringChildren","separator","target","html","value","compass_pt","string","index","insert","edgeRHSId","numDeletedComponents","skippableIndex","erasedIndex","numErased","skip","deleteComponentInStatementList","statementList","erase","statement","erasedStatement","targetIsGraph","optional","skipAttrList","eraseNode","skipLocation","edgeList","erasedLastEdgeStatement","erasedAllEdgeConnections","edgeConnection","subgraph","isFirstStatement","eraseEdge","skipLocationBetween","nodeIdLeft","getNodeIdString","nodeIdRight","splitEdge","skipPrevious","includes","skipOptional","skipSeparators","skipSemicolon","noSkipNewline","skipPort","attrList","optionalSquareBrackets","attrListOptions","skipComma","skipId","options","skipIndex","prevIndex","prevLength","skipPartially","nextIndex","eraseBetween","call","startsWith","indexOf","quoteId","found","Error","slice","startAstNode","endAstNode","ignoreStart","startIndex","offset","endIndex","skipBetween","astNode","replace","re","match","keys","name","toString"],"mappings":"yeAAA,MAAOA,CAAAA,MAAP,KAAmB,aAAnB,CACA,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACC,KAAnB,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,OAA7B,CACA,GAAMC,CAAAA,UAAU,CAAGD,oBAAoB,CAAG,IAA1C,CACA,GAAME,CAAAA,mBAAmB,CAAGD,UAAU,CAAG,GAAzC,C,GAEqBE,CAAAA,Q,yBACnB,kBAAYC,MAAZ,CAAoB,gCAClB,KAAKA,MAAL,CAAcA,MAAd,CACA,KAAKC,OAAL,GACD,C,8DAES,CACR,KAAKC,QAAL,CAAc,KAAKF,MAAnB,EACD,C,8CAEUG,Q,CAAUC,U,CAAY,CAC/B,GAAIC,CAAAA,gBAAgB,CAAGC,kBAAkB,CAACF,UAAD,CAAzC,CACA,GAAIG,CAAAA,aAAa,CAAG,OAASJ,QAAT,CAAoBE,gBAAxC,CACA,KAAKG,kBAAL,CAAwBD,aAAa,CAAG,IAAxC,EACD,C,8CAEUE,a,CAAeC,W,CAAaN,U,CAAY,CACjD,GAAIC,CAAAA,gBAAgB,CAAGC,kBAAkB,CAACF,UAAD,CAAzC,CACA,GAAIO,CAAAA,aAAa,CAAG,OAASF,aAAT,CAAyB,MAAzB,CAAkCC,WAAlC,CAAgDL,gBAApE,CACA,KAAKG,kBAAL,CAAwBG,aAAa,CAAG,IAAxC,EACD,C,8CAEUR,Q,CAAU,CACnB,KAAKS,eAAL,CAAqB,MAArB,CAA6BT,QAA7B,EACD,C,8CAEUU,Q,CAAU,CACnB,GAAIC,CAAAA,SAAS,CAAGD,QAAQ,CAACE,KAAT,CAAe,IAAf,CAAhB,CACA,GAAID,SAAS,CAACE,MAAV,GAAqB,CAAzB,CAA4B,CAC1BF,SAAS,CAAGD,QAAQ,CAACE,KAAT,CAAe,IAAf,CAAZ,CACD,CACD,KAAKH,eAAL,aAAqB,MAArB,4BAAgCE,SAAhC,IACD,C,4DAEiBX,Q,CAAU,CAC1B,GAAI,KAAKc,KAAL,CAAWd,QAAX,CAAJ,CAA0B,CACxB,MAAO,MAAKc,KAAL,CAAWd,QAAX,EAAqBC,UAA5B,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,C,4DAEiBS,Q,CAAU,CAC1B,GAAI,KAAKK,KAAL,CAAWL,QAAX,CAAJ,CAA0B,CACxB,MAAO,MAAKK,KAAL,CAAWL,QAAX,EAAqBT,UAA5B,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,C,2CAEU,CACT,KAAKe,GAAL,CAAWxB,KAAK,CAAC,KAAKK,MAAN,CAAL,CAAmB,CAAnB,CAAX,CACA,GAAMoB,CAAAA,QAAQ,CAAG,KAAKD,GAAL,CAASC,QAA1B,CACA,KAAKH,KAAL,CAAa,EAAb,CACA,KAAKC,KAAL,CAAa,EAAb,CACA,KAAKG,MAAL,CAAc,KAAKF,GAAL,CAASG,IAAT,GAAkB,SAAlB,CAA8B,IAA9B,CAAqC,IAAnD,CACA,KAAKC,aAAL,CAAmBH,QAAnB,CAA6B,KAAKD,GAAlC,EACA,KAAKK,UAAL,CAAkBC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkB,KAAKT,KAAvB,CAA8B,KAAKC,KAAnC,CAAlB,CACD,C,oDAEaE,Q,CAAUO,M,CAAQ,gBAC9BP,QAAQ,CAACQ,OAAT,CAAiB,SAACC,KAAD,CAAQC,CAAR,CAAc,CAC7B,GAAID,KAAK,CAACP,IAAN,GAAe,WAAnB,CAAgC,CAC9B,KAAI,CAACC,aAAL,CAAmB,CAACM,KAAK,CAACE,OAAP,CAAnB,CAAoCF,KAApC,EACA,GAAMzB,CAAAA,UAAU,CAAGyB,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,SAASC,KAAT,CAAgBC,IAAhB,CAAsBL,CAAtB,CAAyB,CACjEI,KAAK,CAACC,IAAI,CAACC,EAAN,CAAL,CAAiBD,IAAI,CAACE,EAAtB,CACA,MAAOH,CAAAA,KAAP,CACD,CAHkB,CAGhB,EAHgB,CAAnB,CAIAT,MAAM,CAACC,MAAP,CAAc,KAAI,CAACT,KAAL,CAAWY,KAAK,CAACE,OAAN,CAAcK,EAAzB,EAA6BhC,UAA3C,CAAuDA,UAAvD,EACD,CAPD,IAQK,IAAIyB,KAAK,CAACP,IAAN,GAAe,SAAnB,CAA8B,CACjC,GAAMgB,CAAAA,MAAM,CAAGT,KAAK,CAACO,EAArB,CACA,GAAI,KAAI,CAACnB,KAAL,CAAWqB,MAAX,GAAsB,IAA1B,CAAgC,CAC9B,KAAI,CAACrB,KAAL,CAAWqB,MAAX,EAAqB,CACnBC,SAAS,CAAE,EADQ,CAEnBnC,UAAU,CAAE,EAFO,CAArB,CAID,CACD,GAAIuB,MAAM,CAACL,IAAP,GAAgB,WAApB,CAAiC,CAC/B,KAAI,CAACL,KAAL,CAAWqB,MAAX,EAAmBC,SAAnB,CAA6BC,IAA7B,CAAkCb,MAAM,CAACc,QAAzC,EACD,CAFD,IAEO,CACL,KAAI,CAACxB,KAAL,CAAWqB,MAAX,EAAmBC,SAAnB,CAA6BC,IAA7B,CAAkCX,KAAK,CAACY,QAAxC,EACD,CACD,GAAId,MAAM,CAACL,IAAP,GAAgB,WAApB,CAAiC,CAC/B,GAAIQ,CAAC,CAAG,CAAR,CAAW,CACT,GAAMY,CAAAA,OAAO,CAAG,CAACtB,QAAQ,CAACU,CAAC,CAAG,CAAL,CAAT,CAAkBD,KAAlB,CAAhB,CACA,GAAMf,CAAAA,SAAS,CAAG4B,OAAO,CAACC,GAAR,CAAY,SAACL,MAAD,QAAYA,CAAAA,MAAM,CAACF,EAAP,EAAaE,MAAM,CAACM,IAAP,CAAc,IAAMN,MAAM,CAACM,IAAP,CAAYR,EAAhC,CAAqC,EAAlD,CAAZ,EAAZ,CAAlB,CACA,GAAMS,CAAAA,MAAM,CAAG/B,SAAS,CAAC,CAAD,CAAT,CAAe,KAAI,CAACO,MAApB,CAA6BP,SAAS,CAAC,CAAD,CAArD,CACA,GAAI,KAAI,CAACI,KAAL,CAAW2B,MAAX,GAAsB,IAA1B,CAAgC,CAC9B,KAAI,CAAC3B,KAAL,CAAW2B,MAAX,EAAqB,CACnBN,SAAS,CAAE,EADQ,CAEnBnC,UAAU,CAAE,EAFO,CAArB,CAID,CACD,GAAMqC,CAAAA,QAAQ,CAAG,CACfK,KAAK,CAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWD,QAAX,CAAoBM,GADZ,CAEfA,GAAG,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWD,QAAX,CAAoBK,KAFV,CAAjB,CAIA,KAAI,CAAC5B,KAAL,CAAW2B,MAAX,EAAmBN,SAAnB,CAA6BC,IAA7B,CAAkCC,QAAlC,EACD,CACF,CACF,CA/BI,IAgCA,IAAIZ,KAAK,CAACP,IAAN,GAAe,WAAnB,CAAgC,CACnC,KAAI,CAACC,aAAL,CAAmBM,KAAK,CAACmB,SAAzB,CAAoCnB,KAApC,EACA;AACD,CAHI,IAIA,IAAIA,KAAK,CAACP,IAAN,GAAe,UAAnB,CAA+B,CAClC,KAAI,CAACC,aAAL,CAAmBM,KAAK,CAACT,QAAzB,CAAmCS,KAAnC,EACD,CACF,CAhDD,EAiDD,C,2CAEU,CACT,KAAKoB,GAAL,CAAW,EAAX,CACA,KAAK5B,MAAL,CAAc,KAAKF,GAAL,CAASG,IAAT,GAAkB,SAAlB,CAA8B,IAA9B,CAAqC,IAAnD,CACA,GAAI,KAAKH,GAAL,CAAS+B,MAAb,CAAqB,CACnB,KAAKD,GAAL,EAAY,SAAZ,CACD,CACD,KAAKA,GAAL,EAAY,KAAK9B,GAAL,CAASG,IAAT,CAAgB,GAA5B,CACA,GAAI,KAAKH,GAAL,CAASiB,EAAb,CAAiB,CACf,KAAKa,GAAL,EAAYE,kBAAkB,CAAC,KAAKhC,GAAL,CAASiB,EAAV,CAAlB,CAAkC,GAA9C,CACD,CACD,KAAKa,GAAL,EAAY,GAAZ,CACA,KAAKG,gBAAL,CAAsB,KAAKjC,GAAL,CAASC,QAA/B,EACA,KAAK6B,GAAL,EAAY,GAAZ,CACA,MAAO,MAAKA,GAAZ,CACD,C,0DAEgB7B,Q,CAAyB,oBAAfiC,CAAAA,SAAe,2DAAL,GAAK,CACxCjC,QAAQ,CAACQ,OAAT,CAAiB,SAACC,KAAD,CAAQC,CAAR,CAAc,CAC7B,GAAID,KAAK,CAACP,IAAN,GAAe,KAAnB,CAA0B,CACxB,OACD,CACD,GAAIO,KAAK,CAACP,IAAN,GAAe,SAAnB,CAA8B,CAC5B,OACD,CACD,GAAIO,KAAK,CAACP,IAAN,GAAe,SAAnB,CAA8B,CAC5B,OACD,CACD,GAAIO,KAAK,CAACP,IAAN,GAAe,UAAnB,CAA+B,CAC7B,OACD,CACD,GAAIQ,CAAC,CAAG,CAAR,CAAW,CACT,MAAI,CAACmB,GAAL,EAAYI,SAAZ,CACD,CACD,GAAIxB,KAAK,CAACP,IAAN,GAAe,WAAnB,CAAgC,CAC9B,MAAI,CAAC2B,GAAL,EAAYE,kBAAkB,CAACtB,KAAK,CAACyB,MAAP,CAA9B,CACA,GAAIzB,KAAK,CAACG,SAAN,CAAgBhB,MAAhB,CAAyB,CAA7B,CAAgC,CAC9B,MAAI,CAACiC,GAAL,EAAY,IAAZ,CACA,MAAI,CAACG,gBAAL,CAAsBvB,KAAK,CAACG,SAA5B,EACA,MAAI,CAACiB,GAAL,EAAY,GAAZ,CACD,CACF,CACD,GAAIpB,KAAK,CAACP,IAAN,GAAe,WAAnB,CAAgC,CAC9B,MAAI,CAAC8B,gBAAL,CAAsB,CAACvB,KAAK,CAACE,OAAP,CAAtB,EACA,GAAIF,KAAK,CAACG,SAAN,CAAgBhB,MAAhB,CAAyB,CAA7B,CAAgC,CAC9B,MAAI,CAACiC,GAAL,EAAY,IAAZ,CACA,MAAI,CAACG,gBAAL,CAAsBvB,KAAK,CAACG,SAA5B,EACA,MAAI,CAACiB,GAAL,EAAY,GAAZ,CACD,CACF,CAPD,IAQK,IAAIpB,KAAK,CAACP,IAAN,GAAe,SAAnB,CAA8B,CACjC,MAAI,CAAC2B,GAAL,EAAYE,kBAAkB,CAACtB,KAAK,CAACO,EAAP,CAA9B,CACA,GAAI,MAAOP,CAAAA,KAAK,CAACe,IAAb,GAAsB,QAA1B,CAAoC,CAClC,MAAI,CAACK,GAAL,EAAY,GAAZ,CACA,MAAI,CAACG,gBAAL,CAAsB,CAACvB,KAAK,CAACe,IAAP,CAAtB,EACD,CACF,CANI,IAOA,IAAIf,KAAK,CAACP,IAAN,GAAe,IAAnB,CAAyB,CAC5B,GAAIO,KAAK,CAAC0B,IAAV,CAAgB,CACd,MAAI,CAACN,GAAL,EAAY,IAAMpB,KAAK,CAAC2B,KAAZ,CAAoB,GAAhC,CACD,CACF,CAJI,IAKA,IAAI3B,KAAK,CAACP,IAAN,GAAe,MAAnB,CAA2B,CAC9B,MAAI,CAAC2B,GAAL,EAAYpB,KAAK,CAACO,EAAlB,CACA,GAAIP,KAAK,CAAC4B,UAAV,CAAsB,CACpB,MAAI,CAACR,GAAL,EAAY,IAAMpB,KAAK,CAAC4B,UAAxB,CACD,CACF,CALI,IAMA,IAAI5B,KAAK,CAACP,IAAN,GAAe,MAAnB,CAA2B,CAC9B,GAAI,MAAOO,CAAAA,KAAK,CAACQ,EAAb,GAAoB,QAAxB,CAAkC,CAChC,MAAI,CAACY,GAAL,EAAYE,kBAAkB,CAACtB,KAAK,CAACO,EAAP,CAAlB,CAA+B,GAA3C,CACA,MAAI,CAACgB,gBAAL,CAAsB,CAACvB,KAAK,CAACQ,EAAP,CAAtB,EACD,CAHD,IAGO,CACL,MAAI,CAACY,GAAL,EAAYE,kBAAkB,CAACtB,KAAK,CAACO,EAAP,CAAlB,CAA+B,GAA/B,CAAqCe,kBAAkB,CAACtB,KAAK,CAACQ,EAAP,CAAnE,CACD,CACF,CAPI,IAQA,IAAIR,KAAK,CAACP,IAAN,GAAe,WAAnB,CAAgC,CACnC,MAAI,CAAC8B,gBAAL,CAAsBvB,KAAK,CAACmB,SAA5B,CAAuC,IAAM,MAAI,CAAC3B,MAAX,CAAoB,GAA3D,EACA,GAAIQ,KAAK,CAACG,SAAN,CAAgBhB,MAAhB,CAAyB,CAA7B,CAAgC,CAC9B,MAAI,CAACiC,GAAL,EAAY,IAAZ,CACA,MAAI,CAACG,gBAAL,CAAsBvB,KAAK,CAACG,SAA5B,EACA,MAAI,CAACiB,GAAL,EAAY,GAAZ,CACD,CACF,CAPI,IAQA,IAAIpB,KAAK,CAACP,IAAN,GAAe,UAAnB,CAA+B,CAClC,GAAIO,KAAK,CAACO,EAAV,CAAc,CACZ,MAAI,CAACa,GAAL,EAAY,YAAcE,kBAAkB,CAACtB,KAAK,CAACO,EAAP,CAA5C,CACD,CACD,MAAI,CAACa,GAAL,EAAY,GAAZ,CACA,MAAI,CAACG,gBAAL,CAAsBvB,KAAK,CAACT,QAA5B,EACA,MAAI,CAAC6B,GAAL,EAAY,GAAZ,CACD,CACF,CA1ED,EA2ED,C,8DAEkBS,M,CAAQ,CACzB,KAAK9C,eAAL,CAAqB,IAArB,EACA,KAAK+C,KAAL,EAAc,CAAd,CACA,KAAKC,MAAL,CAAYF,MAAZ,EACD,C,wDAEepC,I,CAAMc,E,CAAIyB,S,CAAW,CACnC,KAAKC,oBAAL,CAA4B,CAA5B,CACA,KAAKzC,MAAL,CAAc,KAAKF,GAAL,CAASG,IAAT,GAAkB,SAAlB,CAA8B,IAA9B,CAAqC,IAAnD,CACA,KAAKqC,KAAL,CAAa,CAAb,CACA,KAAKI,cAAL,CAAsB,CAAtB,CACA,KAAKC,WAAL,CAAmB,CAAC,CAApB,CACA,KAAKC,SAAL,CAAiB,CAAjB,CACA,GAAI,KAAK9C,GAAL,CAAS+B,MAAb,CAAqB,CACnB,KAAKgB,IAAL,CAAU,QAAV,EACD,CACD,KAAKA,IAAL,CAAU,KAAK/C,GAAL,CAASG,IAAnB,EACA,GAAI,KAAKH,GAAL,CAASiB,EAAb,CAAiB,CACf,KAAK8B,IAAL,CAAU,KAAK/C,GAAL,CAASiB,EAAnB,EACD,CACD,KAAK8B,IAAL,CAAU,GAAV,EACA,KAAKC,8BAAL,CAAoC,KAAKhD,GAAL,CAASC,QAA7C,CAAuDE,IAAvD,CAA6Dc,EAA7D,CAAiEyB,SAAjE,EACA,KAAKK,IAAL,CAAU,GAAV,EACD,C,sFAE8BE,a,CAAe9C,I,CAAMc,E,CAAIyB,S,CAAWQ,K,CAAO,iBACxED,aAAa,CAACxC,OAAd,CAAsB,SAAC0C,SAAD,CAAYxC,CAAZ,CAAkB,CACtC,GAAIyC,CAAAA,eAAe,CAAG,KAAtB,CACA,GAAID,SAAS,CAAChD,IAAV,GAAmB,WAAvB,CAAoC,CAClC,GAAMkD,CAAAA,aAAa,CAAGF,SAAS,CAAChB,MAAV,GAAqB,OAA3C,CACA,MAAI,CAACY,IAAL,CAAUI,SAAS,CAAChB,MAApB,CAA4B,KAA5B,CAAmC,CAACmB,QAAQ,CAAED,aAAX,CAAnC,EACA,MAAI,CAACE,YAAL,CAAkBJ,SAAS,CAACtC,SAA5B,CAAuC,KAAvC,CAA8CwC,aAA9C,EACD,CAJD,IAKK,IAAIF,SAAS,CAAChD,IAAV,GAAmB,WAAvB,CAAoC,CACvC,GAAMqD,CAAAA,SAAS,CAAIrD,IAAI,GAAK,MAAT,EAAmBgD,SAAS,CAACvC,OAAV,CAAkBK,EAAlB,GAAyBA,EAA/D,CACA,MAAI,CAACwC,YAAL,CAAkBN,SAAlB,CAA6BK,SAA7B,EACA,GAAIA,SAAJ,CAAe,CACbJ,eAAe,CAAG,IAAlB,CACA,MAAI,CAACT,oBAAL,EAA6B,CAA7B,CACD,CACF,CAPI,IAQA,IAAIQ,SAAS,CAAChD,IAAV,GAAmB,WAAvB,CAAoC,CACvC,GAAIuD,CAAAA,QAAQ,CAAGP,SAAS,CAACtB,SAAzB,CACA,GAAI8B,CAAAA,uBAAuB,CAAG,IAA9B,CACA,GAAIC,CAAAA,wBAAwB,CAAG,IAA/B,CACAF,QAAQ,CAACjD,OAAT,CAAiB,SAACoD,cAAD,CAAiBlD,CAAjB,CAAuB,CACtC,GAAIkD,cAAc,CAAC1D,IAAf,GAAwB,UAA5B,CAAwC,CACtC,GAAM2D,CAAAA,QAAQ,CAAGD,cAAjB,CACA,GAAME,CAAAA,gBAAgB,CAAIpD,CAAC,GAAK,CAAhC,CACA,GAAI,CAACoD,gBAAL,CAAuB,CACrB,GAAMC,CAAAA,SAAS,CAAGJ,wBAAlB,CACA,MAAI,CAACK,mBAAL,CAAyBP,QAAQ,CAAC/C,CAAC,CAAG,CAAL,CAAjC,CAA0CmD,QAA1C,CAAoDE,SAApD,CAA+D,IAA/D,EACA,GAAIA,SAAJ,CAAe,CACb,MAAI,CAACrB,oBAAL,EAA6B,CAA7B,CACD,CAFD,IAEO,CACLgB,uBAAuB,CAAG,KAA1B,CACD,CACD,MAAI,CAACM,mBAAL,CAAyBP,QAAQ,CAAC/C,CAAC,CAAG,CAAL,CAAjC,CAA0CmD,QAA1C,CAAoD,KAApD,CAA2D,IAA3D,EACAH,uBAAuB,CAAG,KAA1B,CACD,CACD,MAAI,CAACX,8BAAL,CAAoC,CAACc,QAAD,CAApC,CAAgD3D,IAAhD,CAAsDc,EAAtD,CAA0DyB,SAA1D,EACAkB,wBAAwB,CAAG,KAA3B,CACD,CAhBD,IAgBO,CACL,GAAMzC,CAAAA,MAAM,CAAG0C,cAAf,CACA,GAAML,CAAAA,UAAS,CAAIrD,IAAI,GAAK,MAAT,EAAmBgB,MAAM,CAACF,EAAP,GAAcA,EAApD,CACA,GAAM8C,CAAAA,iBAAgB,CAAIpD,CAAC,GAAK,CAAhC,CACA,GAAI,CAACoD,iBAAL,CAAuB,CACrB,GAAMG,CAAAA,UAAU,CAAGC,eAAe,CAACT,QAAQ,CAAC/C,CAAC,CAAG,CAAL,CAAT,CAAlC,CACA,GAAMyD,CAAAA,WAAW,CAAGD,eAAe,CAAChD,MAAD,CAAnC,CACA,GAAMkD,CAAAA,SAAS,CAAIlE,IAAI,GAAK,MAAT,EAAmB+D,UAAU,GAAKjD,EAAlC,EAAwCmD,WAAW,GAAK1B,SAA3E,CACA,GAAMsB,CAAAA,UAAS,CAAGR,UAAS,EAAII,wBAAb,EAAyCS,SAA3D,CACA,MAAI,CAACJ,mBAAL,CAAyBP,QAAQ,CAAC/C,CAAC,CAAG,CAAL,CAAjC,CAA0CQ,MAA1C,CAAkD6C,UAAlD,CAA6D,IAA7D,EACA,GAAIK,SAAJ,CAAe,CACb,MAAI,CAAC5B,MAAL,CAAY,GAAZ,EACAkB,uBAAuB,CAAG,IAA1B,CACD,CACD,GAAIK,UAAJ,CAAe,CACb,MAAI,CAACrB,oBAAL,EAA6B,CAA7B,CACD,CAFD,IAEO,CACLiB,wBAAwB,CAAG,KAA3B,CACAD,uBAAuB,CAAG,KAA1B,CACD,CACF,CACD,GAAIH,UAAJ,CAAe,CACb,MAAI,CAACb,oBAAL,EAA6B,CAA7B,CACD,CAFD,IAEO,CACLiB,wBAAwB,CAAG,KAA3B,CACD,CACD,MAAI,CAACH,YAAL,CAAkBtC,MAAlB,CAA0BqC,UAA1B,CAAqC,IAArC,EACD,CACF,CA7CD,EA8CAJ,eAAe,CAAGQ,wBAAlB,CACA,MAAI,CAACH,YAAL,CAAkBN,SAAlB,CAA6BQ,uBAA7B,CAAsD,IAAtD,EACA,GAAIA,uBAAJ,CAA6B,CAC3B,MAAI,CAACW,YAAL,CAAkBX,uBAAlB,EACA,GAAIR,SAAS,CAACtC,SAAV,CAAoBhB,MAApB,CAA6B,CAAjC,CAAoC,CAClC,GAAI,CAAClB,mBAAmB,CAAC4F,QAApB,CAA6B,MAAI,CAAC1F,MAAL,CAAY,MAAI,CAAC2D,KAAL,CAAa,CAAzB,CAA7B,CAAD,EACA,CAAC7D,mBAAmB,CAAC4F,QAApB,CAA6B,MAAI,CAAC1F,MAAL,CAAY,MAAI,CAAC2D,KAAjB,CAA7B,CADL,CAC4D,CAC1D,MAAI,CAACC,MAAL,CAAY,GAAZ,EACD,CACF,CACF,CACF,CA7DI,IA8DA,IAAIU,SAAS,CAAChD,IAAV,GAAmB,UAAvB,CAAmC,CACtC,MAAI,CAACqE,YAAL,CAAkB,UAAlB,EACA,GAAIrB,SAAS,CAAClC,EAAd,CAAkB,CAChB,MAAI,CAAC8B,IAAL,CAAUI,SAAS,CAAClC,EAApB,EACD,CACD,MAAI,CAAC8B,IAAL,CAAU,GAAV,EACA,MAAI,CAACC,8BAAL,CAAoCG,SAAS,CAAClD,QAA9C,CAAwDE,IAAxD,CAA8Dc,EAA9D,CAAkEyB,SAAlE,EACA,MAAI,CAACK,IAAL,CAAU,GAAV,EACD,CACD,MAAI,CAAC0B,cAAL,CAAoBrB,eAApB,CAAqC,CAACsB,aAAa,CAAE,IAAhB,CAArC,EACD,CAvFD,EAwFA,KAAKJ,YAAL,CAAkB,IAAlB,EACD,C,sCAEMrD,E,CAAIiC,K,CAAO,CAChB,GAAIjC,EAAE,CAACmB,IAAP,CAAa,CACX,KAAKW,IAAL,CAAU,GAAV,CAAeG,KAAf,EACA,KAAKH,IAAL,CAAU9B,EAAE,CAACoB,KAAb,CAAoBa,KAApB,CAA2B,CAACyB,aAAa,CAAE,IAAhB,CAA3B,EACA,KAAK5B,IAAL,CAAU,GAAV,CAAeG,KAAf,EACD,CAJD,IAIO,CACL,KAAKH,IAAL,CAAU9B,EAAE,CAACC,EAAb,CAAiBgC,KAAjB,EACD,CACF,C,8CAEU/B,M,CAAQ+B,K,CAAO,CACxB,KAAKH,IAAL,CAAU5B,MAAM,CAACF,EAAjB,CAAqBiC,KAArB,EACA,GAAI/B,MAAM,CAACM,IAAX,CAAiB,CACf,KAAKsB,IAAL,CAAU,GAAV,CAAeG,KAAf,EACA,KAAK0B,QAAL,CAAczD,MAAM,CAACM,IAArB,CAA2ByB,KAA3B,EACD,CACF,C,0CAEQzB,I,CAAMyB,K,CAAO,CACpB,KAAKH,IAAL,CAAUtB,IAAI,CAACR,EAAf,CAAmBiC,KAAnB,EACA,GAAIzB,IAAI,CAACa,UAAT,CAAqB,CACnB,KAAKS,IAAL,CAAU,GAAV,CAAeG,KAAf,EACA,KAAKH,IAAL,CAAUtB,IAAI,CAACa,UAAf,CAA2BY,KAA3B,EACD,CACF,C,kDAEY2B,Q,CAAU3B,K,CAAO4B,sB,CAAwB,iBACpD,GAAMC,CAAAA,eAAe,CAAG,CAACC,SAAS,CAAE,IAAZ,CAAkBN,aAAa,CAAE,IAAjC,CAAxB,CACAG,QAAQ,CAACpE,OAAT,CAAiB,SAACO,IAAD,CAAOL,CAAP,CAAa,CAC5B,MAAI,CAACoC,IAAL,CAAU,GAAV,CAAeG,KAAf,CAAsB,CAACI,QAAQ,CAAEwB,sBAAsB,EAAInE,CAAC,CAAG,CAAzC,CAAtB,EACA,MAAI,CAACoC,IAAL,CAAU/B,IAAI,CAACC,EAAf,CAAmBiC,KAAnB,CAA0B6B,eAA1B,EACA,MAAI,CAAChC,IAAL,CAAU,GAAV,CAAeG,KAAf,EACA,GAAI,MAAOlC,CAAAA,IAAI,CAACE,EAAZ,GAAmB,QAAnB,EAA+BF,IAAI,CAACE,EAAL,CAAQf,IAAR,GAAiB,IAApD,CAA0D,CACxD,MAAI,CAAC8E,MAAL,CAAYjE,IAAI,CAACE,EAAjB,CAAqBgC,KAArB,EACD,CAFD,IAEO,CACL,MAAI,CAACH,IAAL,CAAU/B,IAAI,CAACE,EAAf,CAAmBgC,KAAnB,EACD,CACD,MAAI,CAACH,IAAL,CAAU,GAAV,CAAeG,KAAf,CAAsB,CAACI,QAAQ,CAAEwB,sBAAsB,EAAInE,CAAC,CAAGkE,QAAQ,CAAChF,MAAT,CAAkB,CAA3D,CAAtB,EACD,CAVD,EAWD,C,kDAEY0C,M,CAAiC,IAAzBW,CAAAA,KAAyB,2DAAnB,KAAmB,IAAZgC,CAAAA,OAAY,2DAAJ,EAAI,CAC5CA,OAAO,CAAG5E,MAAM,CAACC,MAAP,CAAc,CAAC+C,QAAQ,CAAE,IAAX,CAAd,CAAgC4B,OAAhC,CAAV,CACA,KAAKnC,IAAL,CAAUR,MAAV,CAAkBW,KAAlB,CAAyBgC,OAAzB,EACD,C,uDAEuC,IAAzBhC,CAAAA,KAAyB,2DAAnB,KAAmB,IAAZgC,CAAAA,OAAY,2DAAJ,EAAI,CACtC,GAAI1C,CAAAA,KAAK,CAAG,KAAKA,KAAjB,CACA,GAAI2C,CAAAA,SAAS,CAAG,KAAK3C,KAArB,CACA,GAAI4C,CAAAA,SAAS,CAAG,IAAhB,CACA,GAAIC,CAAAA,UAAU,CAAG,IAAjB,CACA,QAASC,CAAAA,aAAT,CAAuBC,SAAvB,CAAkC,CAChC,GAAIrC,KAAJ,CAAW,CACT,GAAI,KAAKN,cAAL,EAAuB,KAAKC,WAAhC,CAA6C,CAC3C,GAAI,KAAKhE,MAAL,CAAY2D,KAAZ,IAAuB,IAA3B,CAAiC,CAC/B,GAAI,KAAK3D,MAAL,CAAY,KAAK+D,cAAL,CAAsB,CAAlC,IAAyC,IAA7C,CAAmD,CACjDuC,SAAS,CAAG,KAAKvC,cAAL,CAAsB,CAAlC,CACD,CAFD,IAEO,CACLuC,SAAS,CAAG,KAAKvC,cAAjB,CACD,CACF,CACF,CACD,KAAK4C,YAAL,CAAkBL,SAAlB,CAA6B3C,KAA7B,EACA+C,SAAS,EAAI/C,KAAK,CAAG2C,SAArB,CACAjC,KAAK,CAAG,KAAR,CACD,CACDV,KAAK,CAAG+C,SAAR,CACAJ,SAAS,CAAGI,SAAZ,CACA,KAAK3C,cAAL,CAAsB2C,SAAtB,CACD,CACD,MAAO/C,KAAK,GAAK4C,SAAV,EAAuB,KAAKvG,MAAL,CAAYgB,MAAZ,GAAuBwF,UAArD,CAAkE,CAChED,SAAS,CAAG5C,KAAZ,CACA6C,UAAU,CAAG,KAAKxG,MAAL,CAAYgB,MAAzB,CACA,GAAIpB,oBAAoB,CAAC8F,QAArB,CAA8B,KAAK1F,MAAL,CAAY2D,KAAZ,CAA9B,CAAJ,CAAuD,CACrDA,KAAK,EAAI,CAAT,CACD,CACD,GAAI0C,OAAO,CAACF,SAAZ,CAAuB,CACrB,GAAI,KAAKnG,MAAL,CAAY2D,KAAZ,IAAuB,GAA3B,CAAgC,CAC9BA,KAAK,EAAI,CAAT,CACD,CACF,CACD,GAAI0C,OAAO,CAACR,aAAZ,CAA2B,CACzB,GAAI,KAAK7F,MAAL,CAAY2D,KAAZ,IAAuB,GAA3B,CAAgC,CAC9BA,KAAK,EAAI,CAAT,CACD,CACF,CACD,GAAI,CAAC0C,OAAO,CAACP,aAAb,CAA4B,CAC1B,GAAI,KAAK9F,MAAL,CAAY2D,KAAZ,IAAuB,IAA3B,CAAiC,CAC/B,GAAM+C,CAAAA,SAAS,CAAG/C,KAAK,CAAG,CAA1B,CACA8C,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAyBF,SAAzB,EACD,CACF,CACD,GAAI,KAAK1G,MAAL,CAAY6G,UAAZ,CAAuB,IAAvB,CAA6BlD,KAA7B,CAAJ,CAAyC,CACvC,GAAM+C,CAAAA,UAAS,CAAG,KAAK1G,MAAL,CAAY8G,OAAZ,CAAoB,IAApB,CAA0BnD,KAAK,CAAG,CAAlC,EAAuC,CAAzD,CACA8C,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAyBF,UAAzB,EACD,CACD,GAAI,KAAK1G,MAAL,CAAY6G,UAAZ,CAAuB,IAAvB,CAA6BlD,KAA7B,CAAJ,CAAyC,CACvC,GAAM+C,CAAAA,WAAS,CAAG,KAAK1G,MAAL,CAAY8G,OAAZ,CAAoB,IAApB,CAA0BnD,KAAK,CAAG,CAAlC,EAAuC,CAAzD,CACA8C,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAyBF,WAAzB,EACD,CACD,GAAI,KAAK1G,MAAL,CAAY6G,UAAZ,CAAuB,GAAvB,CAA4BlD,KAA5B,CAAJ,CAAwC,CACtC,GAAM+C,CAAAA,WAAS,CAAG,KAAK1G,MAAL,CAAY8G,OAAZ,CAAoB,IAApB,CAA0BnD,KAAK,CAAG,CAAlC,EAAuC,CAAzD,CACA8C,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAyBF,WAAzB,EACD,CACF,CACD,GAAIrC,KAAJ,CAAW,CACT,KAAKsC,YAAL,CAAkBL,SAAlB,CAA6B3C,KAA7B,EACD,CAFD,IAEO,CACL,KAAKA,KAAL,CAAaA,KAAb,CACD,CACF,C,kCAEID,M,CAAiC,IAAzBW,CAAAA,KAAyB,2DAAnB,KAAmB,IAAZgC,CAAAA,OAAY,2DAAJ,EAAI,CACpC,KAAKT,cAAL,CAAoB,KAApB,CAA2BS,OAA3B,EACA,GAAI1C,CAAAA,KAAK,CAAG,KAAKA,KAAjB,CACA,GAAI2C,CAAAA,SAAS,CAAG3C,KAAhB,CACA,GAAI,KAAK3D,MAAL,CAAY2D,KAAZ,IAAuB,GAA3B,CAAgC,CAC9BD,MAAM,CAAGqD,OAAO,CAACrD,MAAD,CAAhB,CACD,CACD,GAAIsD,CAAAA,KAAK,CAAG,KAAZ,CACA,GAAI,CAAC,KAAKhH,MAAL,CAAY6G,UAAZ,CAAuBnD,MAAvB,CAA+BC,KAA/B,CAAL,CAA4C,CAC1C,GAAI,CAAC0C,OAAO,CAAC5B,QAAb,CAAuB,CACrB,KAAMwC,CAAAA,KAAK,CAAC,aAAevD,MAAf,CAAwB,aAAxB,CAAwC,KAAK1D,MAAL,CAAYkH,KAAZ,CAAkBvD,KAAlB,CAAyBA,KAAK,CAAG,EAAjC,CAAxC,CAA+E,MAAhF,CAAX,CACD,CACF,CAJD,IAIO,CACLA,KAAK,EAAID,MAAM,CAAC1C,MAAhB,CACAgG,KAAK,CAAG,IAAR,CACD,CACD,GAAI3C,KAAJ,CAAW,CACT,KAAKsC,YAAL,CAAkBL,SAAlB,CAA6B3C,KAA7B,EACA,KAAKiC,cAAL,CAAoBvB,KAApB,EACD,CAHD,IAGO,CACL,KAAKV,KAAL,CAAaA,KAAb,CACA,GAAIqD,KAAK,EAAItD,MAAM,CAAC1C,MAAP,CAAgB,CAA7B,CAAgC,CAC9B,KAAK+C,cAAL,CAAsBJ,KAAtB,CACD,CACF,CACD,MAAOqD,CAAAA,KAAP,CACD,C,kDAEY3C,K,CAAO,CAClB,GAAIA,KAAJ,CAAW,CACT,GAAI,KAAKN,cAAL,EAAuB,KAAKC,WAAhC,CAA6C,CAC3C,KAAK2C,YAAL,CAAkB,KAAK5C,cAAvB,CAAuC,KAAKJ,KAA5C,EACA,KAAKA,KAAL,CAAa,KAAKI,cAAlB,CACD,CACF,CALD,IAKO,CACL,KAAKA,cAAL,CAAsB,KAAKJ,KAA3B,CACD,CACF,C,gEAEmBwD,Y,CAAcC,U,CAAY/C,K,CAAOgD,W,CAAa,CAChE,GAAIC,CAAAA,UAAU,CAAGH,YAAY,CAAC1E,QAAb,CAAsBM,GAAtB,CAA0BwE,MAA1B,CAAmC,KAAKtD,SAAzD,CACA,GAAMuD,CAAAA,QAAQ,CAAGJ,UAAU,CAAC3E,QAAX,CAAoBK,KAApB,CAA0ByE,MAA1B,CAAmC,KAAKtD,SAAzD,CACA,KAAKwD,WAAL,CAAiBH,UAAjB,CAA6BE,QAA7B,CAAuCnD,KAAvC,CAA8CgD,WAA9C,EACD,C,kDAEYK,O,CAASrD,K,CAAOgD,W,CAAa,CACxC,GAAIC,CAAAA,UAAU,CAAGI,OAAO,CAACjF,QAAR,CAAiBK,KAAjB,CAAuByE,MAAvB,CAAgC,KAAKtD,SAAtD,CACA,GAAMuD,CAAAA,QAAQ,CAAGE,OAAO,CAACjF,QAAR,CAAiBM,GAAjB,CAAqBwE,MAArB,CAA8B,KAAKtD,SAApD,CACA,KAAKwD,WAAL,CAAiBH,UAAjB,CAA6BE,QAA7B,CAAuCnD,KAAvC,CAA8CgD,WAA9C,EACD,C,gDAEWC,U,CAAYE,Q,CAAUnD,K,CAAOgD,W,CAAa,CACpD,GAAIA,WAAJ,CAAiB,CACfC,UAAU,CAAG,KAAK3D,KAAlB,CACD,CAFD,IAEO,CACL,GAAI2D,UAAU,GAAK,KAAK3D,KAAxB,CAA+B,CAC7B,KAAMsD,CAAAA,KAAK,CAAC,oBAAsB,KAAKtD,KAA3B,CAAmC,aAAnC,CAAmD2D,UAApD,CAAX,CACD,CACF,CACD,GAAIjD,KAAJ,CAAW,CACT,KAAKsC,YAAL,CAAkBW,UAAlB,CAA8BE,QAA9B,EACD,CAFD,IAEO,CACL,KAAK7D,KAAL,CAAa6D,QAAb,CACA,GAAIF,UAAU,GAAKE,QAAnB,CAA6B,CAC3B,KAAKzD,cAAL,CAAsB,KAAKJ,KAA3B,CACD,CACF,CACF,C,kDAEY2D,U,CAAYE,Q,CAAU,CACjC,GAAIF,UAAU,GAAKE,QAAnB,CAA6B,CAC3B,KAAKxH,MAAL,CAAc,KAAKA,MAAL,CAAYkH,KAAZ,CAAkB,CAAlB,CAAqBI,UAArB,EAAmC,KAAKtH,MAAL,CAAYkH,KAAZ,CAAkBM,QAAlB,CAAjD,CACA,KAAKxD,WAAL,CAAmBsD,UAAnB,CACA,KAAKrD,SAAL,EAAkBuD,QAAQ,CAAGF,UAA7B,CACD,CACF,C,sCAEM5D,M,CAAQ,CACb,KAAK1D,MAAL,CAAc,KAAKA,MAAL,CAAYkH,KAAZ,CAAkB,CAAlB,CAAqB,KAAKvD,KAA1B,EAAmCD,MAAnC,CAA4C,KAAK1D,MAAL,CAAYkH,KAAZ,CAAkB,KAAKvD,KAAvB,CAA1D,CACA,KAAKA,KAAL,EAAcD,MAAM,CAAC1C,MAArB,CACA,KAAKiD,SAAL,EAAkBP,MAAM,CAAC1C,MAAzB,CACD,C,+BApgBkBjB,Q,aAwgBrB,QAASuF,CAAAA,eAAT,CAAyBoC,OAAzB,CAAkC,CAChC,GAAIzE,CAAAA,GAAG,CAAGyE,OAAO,CAACtF,EAAlB,CACA,GAAIsF,OAAO,CAAC9E,IAAZ,CAAkB,CAChBK,GAAG,EAAI,IAAMyE,OAAO,CAAC9E,IAAR,CAAaR,EAA1B,CACA,GAAIsF,OAAO,CAAC9E,IAAR,CAAaa,UAAjB,CAA6B,CAC3BR,GAAG,EAAI,IAAMyE,OAAO,CAAC9E,IAAR,CAAaa,UAA1B,CACD,CACF,CACD,MAAOR,CAAAA,GAAP,CACD,CAED,QAAS8D,CAAAA,OAAT,CAAiBvD,KAAjB,CAAwB,CACtBA,KAAK,CAAGA,KAAK,CAACmE,OAAN,CAAc,IAAd,CAAmB,KAAnB,CAAR,CACAnE,KAAK,CAAG,IAAMA,KAAN,CAAc,GAAtB,CACA,MAAOA,CAAAA,KAAP,CACD,CAED,QAASL,CAAAA,kBAAT,CAA4BK,KAA5B,CAAmC,CACjC,GAAIoE,CAAAA,EAAE,CAAG,gDAAT,CACA,GAAI,CAACpE,KAAK,CAACqE,KAAN,CAAYD,EAAZ,CAAL,CAAsB,CACpBpE,KAAK,CAAGuD,OAAO,CAACvD,KAAD,CAAf,CACD,CACD,MAAOA,CAAAA,KAAP,CACD,CAED,QAASlD,CAAAA,kBAAT,CAA4BF,UAA5B,CAAwC,CACtC,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,0BAAiBoB,MAAM,CAACqG,IAAP,CAAY1H,UAAZ,CAAjB,6BAA0C,CAArC,GAAI2H,CAAAA,IAAI,iBAAR,CACH,GAAI3H,UAAU,CAAC2H,IAAD,CAAV,EAAoB,IAAxB,CAA8B,CAC5B,GAAIvE,CAAAA,KAAK,CAAGpD,UAAU,CAAC2H,IAAD,CAAV,CAAiBC,QAAjB,EAAZ,CACAxE,KAAK,CAAGL,kBAAkB,CAACK,KAAD,CAA1B,CACAnD,gBAAgB,EAAI,IAAM0H,IAAN,CAAa,GAAb,CAAmBvE,KAAvC,CACD,CACF,CACD,GAAInD,gBAAJ,CAAsB,CACpBA,gBAAgB,CAAG,KAAOA,gBAAP,CAA0B,GAA7C,CACD,CACD,MAAOA,CAAAA,gBAAP,CACD","sourcesContent":["import parser from './dotParser';\r\nvar parse = parser.parse;\r\n\r\nconst whitespaceWithinLine = ' \\t\\r';\r\nconst whitespace = whitespaceWithinLine + '\\n';\r\nconst statementSeparators = whitespace + ';';\r\n\r\nexport default class DotGraph {\r\n  constructor(dotSrc) {\r\n    this.dotSrc = dotSrc;\r\n    this.reparse();\r\n  }\r\n\r\n  reparse() {\r\n    this.parseDot(this.dotSrc);\r\n  }\r\n\r\n  insertNode(nodeName, attributes) {\r\n    var attributesString = toAttributesString(attributes);\r\n    var newNodeString = '    ' + nodeName + attributesString;\r\n    this.insertAtEndOfGraph(newNodeString + '\\n');\r\n  }\r\n\r\n  insertEdge(startNodeName, endNodeName, attributes) {\r\n    var attributesString = toAttributesString(attributes);\r\n    var newEdgeString = '    ' + startNodeName + ' -> ' + endNodeName + attributesString;\r\n    this.insertAtEndOfGraph(newEdgeString + '\\n');\r\n  }\r\n\r\n  deleteNode(nodeName) {\r\n    this.deleteComponent('node', nodeName);\r\n  }\r\n\r\n  deleteEdge(edgeName) {\r\n    let nodeNames = edgeName.split('--');\r\n    if (nodeNames.length !== 2) {\r\n      nodeNames = edgeName.split('->');\r\n    }\r\n    this.deleteComponent('edge', ...nodeNames);\r\n  }\r\n\r\n  getNodeAttributes(nodeName) {\r\n    if (this.nodes[nodeName]) {\r\n      return this.nodes[nodeName].attributes;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getEdgeAttributes(edgeName) {\r\n    if (this.edges[edgeName]) {\r\n      return this.edges[edgeName].attributes;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  parseDot() {\r\n    this.ast = parse(this.dotSrc)[0];\r\n    const children = this.ast.children;\r\n    this.nodes = {};\r\n    this.edges = {};\r\n    this.edgeop = this.ast.type === 'digraph' ? '->' : '--';\r\n    this.parseChildren(children, this.ast);\r\n    this.components = Object.assign({}, this.nodes, this.edges);\r\n  }\r\n\r\n  parseChildren(children, parent) {\r\n    children.forEach((child, i) => {\r\n      if (child.type === 'node_stmt') {\r\n        this.parseChildren([child.node_id], child);\r\n        const attributes = child.attr_list.reduce(function(attrs, attr, i) {\r\n          attrs[attr.id] = attr.eq;\r\n          return attrs;\r\n        }, {});\r\n        Object.assign(this.nodes[child.node_id.id].attributes, attributes);\r\n      }\r\n      else if (child.type === 'node_id') {\r\n        const nodeId = child.id;\r\n        if (this.nodes[nodeId] == null) {\r\n          this.nodes[nodeId] = {\r\n            locations: [],\r\n            attributes: {},\r\n          };\r\n        }\r\n        if (parent.type === 'node_stmt') {\r\n          this.nodes[nodeId].locations.push(parent.location);\r\n        } else {\r\n          this.nodes[nodeId].locations.push(child.location);\r\n        }\r\n        if (parent.type === 'edge_stmt') {\r\n          if (i > 0) {\r\n            const nodeIds = [children[i - 1], child];\r\n            const nodeNames = nodeIds.map((nodeId) => nodeId.id + (nodeId.port ? ':' + nodeId.port.id : ''));\r\n            const edgeId = nodeNames[0] + this.edgeop + nodeNames[1];\r\n            if (this.edges[edgeId] == null) {\r\n              this.edges[edgeId] = {\r\n                locations: [],\r\n                attributes: {},\r\n              };\r\n            }\r\n            const location = {\r\n              start: nodeIds[0].location.end,\r\n              end: nodeIds[1].location.start,\r\n            }\r\n            this.edges[edgeId].locations.push(location);\r\n          }\r\n        }\r\n      }\r\n      else if (child.type === 'edge_stmt') {\r\n        this.parseChildren(child.edge_list, child);\r\n        // FIXME: add support for attributes\r\n      }\r\n      else if (child.type === 'subgraph') {\r\n        this.parseChildren(child.children, child);\r\n      }\r\n    });\r\n  }\r\n\r\n  toString() {\r\n    this.str = ''\r\n    this.edgeop = this.ast.type === 'digraph' ? '->' : '--';\r\n    if (this.ast.strict) {\r\n      this.str += 'strict ';\r\n    }\r\n    this.str += this.ast.type + ' ';\r\n    if (this.ast.id) {\r\n      this.str += quoteIdIfNecessary(this.ast.id) + ' ';\r\n    }\r\n    this.str += '{';\r\n    this.toStringChildren(this.ast.children);\r\n    this.str += '}';\r\n    return this.str;\r\n  }\r\n\r\n  toStringChildren(children, separator=' ') {\r\n    children.forEach((child, i) => {\r\n      if (child.type === 'pad') {\r\n        return;\r\n      }\r\n      if (child.type === 'newline') {\r\n        return;\r\n      }\r\n      if (child.type === 'comment') {\r\n        return;\r\n      }\r\n      if (child.type === 'stmt_sep') {\r\n        return;\r\n      }\r\n      if (i > 0) {\r\n        this.str += separator;\r\n      }\r\n      if (child.type === 'attr_stmt') {\r\n        this.str += quoteIdIfNecessary(child.target);\r\n        if (child.attr_list.length > 0) {\r\n          this.str += ' [';\r\n          this.toStringChildren(child.attr_list);\r\n          this.str += ']';\r\n        }\r\n      }\r\n      if (child.type === 'node_stmt') {\r\n        this.toStringChildren([child.node_id]);\r\n        if (child.attr_list.length > 0) {\r\n          this.str += ' [';\r\n          this.toStringChildren(child.attr_list);\r\n          this.str += ']';\r\n        }\r\n      }\r\n      else if (child.type === 'node_id') {\r\n        this.str += quoteIdIfNecessary(child.id);\r\n        if (typeof child.port === 'object') {\r\n          this.str += ':';\r\n          this.toStringChildren([child.port]);\r\n        }\r\n      }\r\n      else if (child.type === 'id') {\r\n        if (child.html) {\r\n          this.str += '<' + child.value + '>';\r\n        }\r\n      }\r\n      else if (child.type === 'port') {\r\n        this.str += child.id;\r\n        if (child.compass_pt) {\r\n          this.str += ':' + child.compass_pt;\r\n        }\r\n      }\r\n      else if (child.type === 'attr') {\r\n        if (typeof child.eq === 'object') {\r\n          this.str += quoteIdIfNecessary(child.id) + '=';\r\n          this.toStringChildren([child.eq]);\r\n        } else {\r\n          this.str += quoteIdIfNecessary(child.id) + '=' + quoteIdIfNecessary(child.eq);\r\n        }\r\n      }\r\n      else if (child.type === 'edge_stmt') {\r\n        this.toStringChildren(child.edge_list, ' ' + this.edgeop + ' ');\r\n        if (child.attr_list.length > 0) {\r\n          this.str += ' [';\r\n          this.toStringChildren(child.attr_list);\r\n          this.str += ']';\r\n        }\r\n      }\r\n      else if (child.type === 'subgraph') {\r\n        if (child.id) {\r\n          this.str += 'subgraph ' + quoteIdIfNecessary(child.id);\r\n        }\r\n        this.str += '{';\r\n        this.toStringChildren(child.children);\r\n        this.str += '}';\r\n      }\r\n    });\r\n  }\r\n\r\n  insertAtEndOfGraph(string) {\r\n    this.deleteComponent(null);\r\n    this.index -= 1;\r\n    this.insert(string);\r\n  }\r\n\r\n  deleteComponent(type, id, edgeRHSId) {\r\n    this.numDeletedComponents = 0;\r\n    this.edgeop = this.ast.type === 'digraph' ? '->' : '--';\r\n    this.index = 0;\r\n    this.skippableIndex = 0;\r\n    this.erasedIndex = -1;\r\n    this.numErased = 0;\r\n    if (this.ast.strict) {\r\n      this.skip('strict');\r\n    }\r\n    this.skip(this.ast.type);\r\n    if (this.ast.id) {\r\n      this.skip(this.ast.id);\r\n    }\r\n    this.skip('{');\r\n    this.deleteComponentInStatementList(this.ast.children, type, id, edgeRHSId);\r\n    this.skip('}');\r\n  }\r\n\r\n  deleteComponentInStatementList(statementList, type, id, edgeRHSId, erase) {\r\n    statementList.forEach((statement, i) => {\r\n      let erasedStatement = false;\r\n      if (statement.type === 'attr_stmt') {\r\n        const targetIsGraph = statement.target === 'graph';\r\n        this.skip(statement.target, false, {optional: targetIsGraph});\r\n        this.skipAttrList(statement.attr_list, false, targetIsGraph);\r\n      }\r\n      else if (statement.type === 'node_stmt') {\r\n        const eraseNode = (type === 'node' && statement.node_id.id === id);\r\n        this.skipLocation(statement, eraseNode);\r\n        if (eraseNode) {\r\n          erasedStatement = true;\r\n          this.numDeletedComponents += 1;\r\n        }\r\n      }\r\n      else if (statement.type === 'edge_stmt') {\r\n        let edgeList = statement.edge_list;\r\n        let erasedLastEdgeStatement = true;\r\n        let erasedAllEdgeConnections = true;\r\n        edgeList.forEach((edgeConnection, i) => {\r\n          if (edgeConnection.type === 'subgraph') {\r\n            const subgraph = edgeConnection;\r\n            const isFirstStatement = (i === 0);\r\n            if (!isFirstStatement) {\r\n              const eraseEdge = erasedAllEdgeConnections;\r\n              this.skipLocationBetween(edgeList[i - 1], subgraph, eraseEdge, true);\r\n              if (eraseEdge) {\r\n                this.numDeletedComponents += 1;\r\n              } else {\r\n                erasedLastEdgeStatement = false;\r\n              }\r\n              this.skipLocationBetween(edgeList[i - 1], subgraph, false, true);\r\n              erasedLastEdgeStatement = false;\r\n            }\r\n            this.deleteComponentInStatementList([subgraph], type, id, edgeRHSId);\r\n            erasedAllEdgeConnections = false;\r\n          } else {\r\n            const nodeId = edgeConnection;\r\n            const eraseNode = (type === 'node' && nodeId.id === id);\r\n            const isFirstStatement = (i === 0);\r\n            if (!isFirstStatement) {\r\n              const nodeIdLeft = getNodeIdString(edgeList[i - 1]);\r\n              const nodeIdRight = getNodeIdString(nodeId);\r\n              const splitEdge = (type === 'edge' && nodeIdLeft === id && nodeIdRight === edgeRHSId);\r\n              const eraseEdge = eraseNode || erasedAllEdgeConnections || splitEdge;\r\n              this.skipLocationBetween(edgeList[i - 1], nodeId, eraseEdge, true);\r\n              if (splitEdge) {\r\n                this.insert(' ');\r\n                erasedLastEdgeStatement = true;\r\n              }\r\n              if (eraseEdge) {\r\n                this.numDeletedComponents += 1;\r\n              } else {\r\n                erasedAllEdgeConnections = false;\r\n                erasedLastEdgeStatement = false;\r\n              }\r\n            }\r\n            if (eraseNode) {\r\n              this.numDeletedComponents += 1;\r\n            } else {\r\n              erasedAllEdgeConnections = false;\r\n            }\r\n            this.skipLocation(nodeId, eraseNode, true);\r\n          }\r\n        });\r\n        erasedStatement = erasedAllEdgeConnections;\r\n        this.skipLocation(statement, erasedLastEdgeStatement, true);\r\n        if (erasedLastEdgeStatement) {\r\n          this.skipPrevious(erasedLastEdgeStatement);\r\n          if (statement.attr_list.length > 0) {\r\n            if (!statementSeparators.includes(this.dotSrc[this.index - 1]) &&\r\n                !statementSeparators.includes(this.dotSrc[this.index])) {\r\n              this.insert(' ');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if (statement.type === 'subgraph') {\r\n        this.skipOptional('subgraph');\r\n        if (statement.id) {\r\n          this.skip(statement.id);\r\n        }\r\n        this.skip('{');\r\n        this.deleteComponentInStatementList(statement.children, type, id, edgeRHSId);\r\n        this.skip('}');\r\n      }\r\n      this.skipSeparators(erasedStatement, {skipSemicolon: true});\r\n    });\r\n    this.skipPrevious(true);\r\n  }\r\n\r\n  skipId(id, erase) {\r\n    if (id.html) {\r\n      this.skip('<', erase);\r\n      this.skip(id.value, erase, {noSkipNewline: true});\r\n      this.skip('>', erase);\r\n    } else {\r\n      this.skip(id.eq, erase);\r\n    }\r\n  }\r\n\r\n  skipNodeId(nodeId, erase) {\r\n    this.skip(nodeId.id, erase);\r\n    if (nodeId.port) {\r\n      this.skip(':', erase);\r\n      this.skipPort(nodeId.port, erase);\r\n    }\r\n  }\r\n\r\n  skipPort(port, erase) {\r\n    this.skip(port.id, erase);\r\n    if (port.compass_pt) {\r\n      this.skip(':', erase);\r\n      this.skip(port.compass_pt, erase);\r\n    }\r\n  }\r\n\r\n  skipAttrList(attrList, erase, optionalSquareBrackets) {\r\n    const attrListOptions = {skipComma: true, skipSemicolon: true};\r\n    attrList.forEach((attr, i) => {\r\n      this.skip('[', erase, {optional: optionalSquareBrackets || i > 0});\r\n      this.skip(attr.id, erase, attrListOptions);\r\n      this.skip('=', erase);\r\n      if (typeof attr.eq === 'object' && attr.eq.type === 'id') {\r\n        this.skipId(attr.eq, erase);\r\n      } else {\r\n        this.skip(attr.eq, erase);\r\n      }\r\n      this.skip(']', erase, {optional: optionalSquareBrackets || i < attrList.length - 1});\r\n    });\r\n  }\r\n\r\n  skipOptional(string, erase=false, options={}) {\r\n    options = Object.assign({optional: true}, options);\r\n    this.skip(string, erase, options);\r\n  }\r\n\r\n  skipSeparators(erase=false, options={}) {\r\n    let index = this.index;\r\n    let skipIndex = this.index;\r\n    let prevIndex = null;\r\n    let prevLength = null;\r\n    function skipPartially(nextIndex) {\r\n      if (erase) {\r\n        if (this.skippableIndex <= this.erasedIndex) {\r\n          if (this.dotSrc[index] === '\\n') {\r\n            if (this.dotSrc[this.skippableIndex - 1] === '\\n') {\r\n              skipIndex = this.skippableIndex - 1;\r\n            } else {\r\n              skipIndex = this.skippableIndex;\r\n            }\r\n          }\r\n        }\r\n        this.eraseBetween(skipIndex, index);\r\n        nextIndex -= index - skipIndex;\r\n        erase = false;\r\n      }\r\n      index = nextIndex;\r\n      skipIndex = nextIndex;\r\n      this.skippableIndex = nextIndex;\r\n    }\r\n    while (index !== prevIndex || this.dotSrc.length !== prevLength ) {\r\n      prevIndex = index;\r\n      prevLength = this.dotSrc.length;\r\n      if (whitespaceWithinLine.includes(this.dotSrc[index])) {\r\n        index += 1;\r\n      }\r\n      if (options.skipComma) {\r\n        if (this.dotSrc[index] === ',') {\r\n          index += 1;\r\n        }\r\n      }\r\n      if (options.skipSemicolon) {\r\n        if (this.dotSrc[index] === ';') {\r\n          index += 1;\r\n        }\r\n      }\r\n      if (!options.noSkipNewline) {\r\n        if (this.dotSrc[index] === '\\n') {\r\n          const nextIndex = index + 1;\r\n          skipPartially.call(this, nextIndex);\r\n        }\r\n      }\r\n      if (this.dotSrc.startsWith('/*', index)) {\r\n        const nextIndex = this.dotSrc.indexOf('*/', index + 2) + 2;\r\n        skipPartially.call(this, nextIndex);\r\n      }\r\n      if (this.dotSrc.startsWith('//', index)) {\r\n        const nextIndex = this.dotSrc.indexOf('\\n', index + 2) + 1;\r\n        skipPartially.call(this, nextIndex);\r\n      }\r\n      if (this.dotSrc.startsWith('#', index)) {\r\n        const nextIndex = this.dotSrc.indexOf('\\n', index + 1) + 1;\r\n        skipPartially.call(this, nextIndex);\r\n      }\r\n    }\r\n    if (erase) {\r\n      this.eraseBetween(skipIndex, index);\r\n    } else {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  skip(string, erase=false, options={}) {\r\n    this.skipSeparators(false, options);\r\n    let index = this.index\r\n    let skipIndex = index;\r\n    if (this.dotSrc[index] === '\"') {\r\n      string = quoteId(string);\r\n    }\r\n    let found = false;\r\n    if (!this.dotSrc.startsWith(string, index)) {\r\n      if (!options.optional) {\r\n        throw Error('Expected \"' + string + '\", found: \"' + this.dotSrc.slice(index, index + 40) + '...\"');\r\n      }\r\n    } else {\r\n      index += string.length;\r\n      found = true;\r\n    }\r\n    if (erase) {\r\n      this.eraseBetween(skipIndex, index);\r\n      this.skipSeparators(erase);\r\n    } else {\r\n      this.index = index;\r\n      if (found && string.length > 0) {\r\n        this.skippableIndex = index;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  skipPrevious(erase) {\r\n    if (erase) {\r\n      if (this.skippableIndex <= this.erasedIndex) {\r\n        this.eraseBetween(this.skippableIndex, this.index);\r\n        this.index = this.skippableIndex;\r\n      }\r\n    } else {\r\n      this.skippableIndex = this.index;\r\n    }\r\n  }\r\n\r\n  skipLocationBetween(startAstNode, endAstNode, erase, ignoreStart) {\r\n    let startIndex = startAstNode.location.end.offset - this.numErased;\r\n    const endIndex = endAstNode.location.start.offset - this.numErased;\r\n    this.skipBetween(startIndex, endIndex, erase, ignoreStart);\r\n  }\r\n\r\n  skipLocation(astNode, erase, ignoreStart) {\r\n    let startIndex = astNode.location.start.offset - this.numErased;\r\n    const endIndex = astNode.location.end.offset - this.numErased;\r\n    this.skipBetween(startIndex, endIndex, erase, ignoreStart);\r\n  }\r\n\r\n  skipBetween(startIndex, endIndex, erase, ignoreStart) {\r\n    if (ignoreStart) {\r\n      startIndex = this.index;\r\n    } else {\r\n      if (startIndex !== this.index) {\r\n        throw Error('Unexpected index ' + this.index + ', expected ' + startIndex);\r\n      }\r\n    }\r\n    if (erase) {\r\n      this.eraseBetween(startIndex, endIndex);\r\n    } else {\r\n      this.index = endIndex;\r\n      if (startIndex !== endIndex) {\r\n        this.skippableIndex = this.index;\r\n      }\r\n    }\r\n  }\r\n\r\n  eraseBetween(startIndex, endIndex) {\r\n    if (startIndex !== endIndex) {\r\n      this.dotSrc = this.dotSrc.slice(0, startIndex) + this.dotSrc.slice(endIndex);\r\n      this.erasedIndex = startIndex;\r\n      this.numErased += endIndex - startIndex;\r\n    }\r\n  }\r\n\r\n  insert(string) {\r\n    this.dotSrc = this.dotSrc.slice(0, this.index) + string + this.dotSrc.slice(this.index);\r\n    this.index += string.length;\r\n    this.numErased -= string.length;\r\n  }\r\n\r\n}\r\n\r\nfunction getNodeIdString(astNode) {\r\n  let str = astNode.id;\r\n  if (astNode.port) {\r\n    str += ':' + astNode.port.id;\r\n    if (astNode.port.compass_pt) {\r\n      str += ':' + astNode.port.compass_pt;\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction quoteId(value) {\r\n  value = value.replace(/\"/g,'\\\\\"');\r\n  value = '\"' + value + '\"';\r\n  return value;\r\n}\r\n\r\nfunction quoteIdIfNecessary(value) {\r\n  let re = '^[a-zA-Z\\\\x80-\\\\xff_][a-zA-Z\\\\x80-\\\\xff_0-9]*$';\r\n  if (!value.match(re)) {\r\n    value = quoteId(value);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction toAttributesString(attributes) {\r\n  var attributesString = ''\r\n  for (var name of Object.keys(attributes)) {\r\n    if (attributes[name] != null) {\r\n      let value = attributes[name].toString();\r\n      value = quoteIdIfNecessary(value);\r\n      attributesString += ' ' + name + '=' + value;\r\n    }\r\n  }\r\n  if (attributesString) {\r\n    attributesString = ' [' + attributesString + ']';\r\n  }\r\n  return attributesString;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}