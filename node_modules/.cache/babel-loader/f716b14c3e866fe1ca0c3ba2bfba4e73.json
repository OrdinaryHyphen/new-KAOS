{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\\\u03BD-KAOS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\\\u03BD-KAOS\\\\src\\\\OpenFromBrowserDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport moment from 'moment';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoYouWantToDeleteDialog from './DoYouWantToDeleteDialog';\nimport SvgPreview from './SvgPreview';\nimport DotSrcPreview from './DotSrcPreview';\nconst numLinesPreview = 5;\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n\n    if (order === 0) {\n      return a[1] - b[1];\n    } else {\n      return order;\n    }\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Name'\n}, {\n  id: 'dotSrc',\n  numeric: false,\n  disablePadding: false,\n  label: 'DOT Source'\n}, {\n  id: 'dotSrcLastChangeTime',\n  numeric: false,\n  disablePadding: false,\n  label: 'Last Changed'\n}, {\n  id: 'svg',\n  numeric: false,\n  disablePadding: false,\n  label: 'Preview'\n}, {\n  id: 'delete',\n  numeric: false,\n  disablePadding: false,\n  label: 'Delete'\n}];\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, rows.map(row => {\n      return React.createElement(TableCell, {\n        key: row.id,\n        align: row.numeric ? 'right' : 'left',\n        padding: row.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === row.id ? order : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Sort\",\n        placement: row.numeric ? 'bottom-end' : 'bottom-start',\n        enterDelay: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TableSortLabel, {\n        id: row.id,\n        active: orderBy === row.id,\n        direction: order,\n        onClick: this.createSortHandler(row.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, row.label)));\n    }, this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    userSelect: 'none'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nclass OpenFromBrowserDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedName: this.props.name,\n      order: 'desc',\n      orderBy: 'dotSrcLastChangeTime'\n    };\n\n    this.handleClose = () => {\n      this.props.onClose();\n    };\n\n    this.handleClick = name => event => {\n      this.setState({\n        selectedName: name\n      });\n    };\n\n    this.handleDoubleClick = name => event => {\n      this.props.onOpen(name);\n    };\n\n    this.handleOpen = event => {\n      this.props.onOpen(this.state.selectedName);\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = property === 'dotSrcLastChangeTime' ? 'desc' : 'asc';\n\n      if (this.state.orderBy === property) {\n        if (this.state.order === 'asc') {\n          order = 'desc';\n        } else {\n          order = 'asc';\n        }\n      }\n\n      this.setState({\n        order,\n        orderBy\n      });\n    };\n\n    this.handleConfirmedDelete = () => {\n      this.setState({\n        doYouWantToDeleteDialogIsOpen: false\n      });\n      this.props.onDelete(this.state.deleteName);\n    };\n\n    this.handleDelete = name => () => {\n      this.setState({\n        doYouWantToDeleteDialogIsOpen: true,\n        deleteName: name\n      });\n    };\n\n    this.handleDoYouWantToDeleteClose = () => {\n      this.setState({\n        doYouWantToDeleteDialogIsOpen: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const orderBy = this.state.orderBy;\n    const order = this.state.order;\n\n    const projects = _objectSpread({}, this.props.projects);\n\n    if (this.props.name) {\n      projects[this.props.name] = {\n        dotSrc: this.props.dotSrc,\n        dotSrcLastChangeTime: this.props.dotSrcLastChangeTime,\n        svg: this.props.svg\n      };\n    }\n\n    const projectList = Object.keys(projects).map(name => {\n      const project = projects[name];\n      return _objectSpread({\n        name: name\n      }, project);\n    });\n    const selectedName = projects[this.state.selectedName] ? this.state.selectedName : this.props.name;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      id: \"open-from-browser-dialog\",\n      maxWidth: false,\n      className: classes.root,\n      open: true,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Open graph from browser\"), React.createElement(IconButton, {\n      \"aria-label\": \"Close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Open a graph from the browser's local storage.\"), React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      order: order,\n      orderBy: orderBy,\n      onRequestSort: this.handleRequestSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, stableSort(projectList, getSorting(order, orderBy)).map(project => {\n      const name = project.name;\n      return React.createElement(TableRow, {\n        key: name,\n        selected: name === selectedName,\n        hover: true,\n        onClick: this.handleClick(name),\n        onDoubleClick: this.handleDoubleClick(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(DotSrcPreview, {\n        dotSrc: project.dotSrc,\n        numLines: numLinesPreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, project.dotSrcLastChangeTime ? moment(project.dotSrcLastChangeTime).fromNow() : ''), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(SvgPreview, {\n        svg: project.svg,\n        width: \"200px\",\n        height: Math.ceil(numLinesPreview * 1.2, 1) + \"em\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        id: \"delete\",\n        \"aria-label\": \"Delete\",\n        onClick: this.handleDelete(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))));\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.onClose,\n      color: \"secondary\",\n      id: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleOpen,\n      color: \"secondary\",\n      id: \"open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Open\"))), this.state.doYouWantToDeleteDialogIsOpen && React.createElement(DoYouWantToDeleteDialog, {\n      name: this.state.deleteName,\n      onDelete: this.handleConfirmedDelete,\n      onClose: this.handleDoYouWantToDeleteClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }));\n  }\n\n}\n\nOpenFromBrowserDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  dotSrc: PropTypes.string.isRequired,\n  dotSrcLastChangeTime: PropTypes.number.isRequired,\n  projects: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onOpen: PropTypes.func.isRequired\n};\nexport default withRoot(withStyles(styles)(OpenFromBrowserDialog));","map":{"version":3,"sources":["C:/Users/user/ν-KAOS/src/OpenFromBrowserDialog.js"],"names":["React","PropTypes","withStyles","withRoot","CloseIcon","IconButton","Button","Dialog","DialogContent","DialogContentText","DialogTitle","DialogActions","Table","TableHead","TableRow","TableCell","TableBody","TableSortLabel","Tooltip","moment","DeleteIcon","DoYouWantToDeleteDialog","SvgPreview","DotSrcPreview","numLinesPreview","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","numeric","disablePadding","label","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","row","propTypes","func","isRequired","string","styles","theme","root","userSelect","title","display","justifyContent","table","minWidth","OpenFromBrowserDialog","state","selectedName","name","handleClose","onClose","handleClick","setState","handleDoubleClick","onOpen","handleOpen","handleRequestSort","handleConfirmedDelete","doYouWantToDeleteDialogIsOpen","onDelete","deleteName","handleDelete","handleDoYouWantToDeleteClose","classes","projects","dotSrc","dotSrcLastChangeTime","svg","projectList","Object","keys","project","fromNow","Math","ceil","object","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport moment from 'moment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoYouWantToDeleteDialog from './DoYouWantToDeleteDialog';\r\nimport SvgPreview from './SvgPreview';\r\nimport DotSrcPreview from './DotSrcPreview';\r\n\r\nconst numLinesPreview = 5;\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order === 0) {\r\n      return a[1] - b[1];\r\n    } else {\r\n      return order;\r\n    }\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n  { id: 'dotSrc', numeric: false, disablePadding: false, label: 'DOT Source' },\r\n  { id: 'dotSrcLastChangeTime', numeric: false, disablePadding: false, label: 'Last Changed' },\r\n  { id: 'svg', numeric: false, disablePadding: false, label: 'Preview' },\r\n  { id: 'delete', numeric: false, disablePadding: false, label: 'Delete' },\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { order, orderBy } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {rows.map(row => {\r\n            return (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'normal'}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    id={row.id}\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    userSelect: 'none',\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nclass OpenFromBrowserDialog extends React.Component {\r\n\r\n  state = {\r\n    selectedName: this.props.name,\r\n    order: 'desc',\r\n    orderBy: 'dotSrcLastChangeTime',\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleClick = (name) => (event) =>{\r\n    this.setState({selectedName: name});\r\n  };\r\n\r\n  handleDoubleClick = (name) => (event) =>{\r\n    this.props.onOpen(name);\r\n  };\r\n\r\n  handleOpen = (event) => {\r\n    this.props.onOpen(this.state.selectedName);\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = (property === 'dotSrcLastChangeTime' ? 'desc' : 'asc');\r\n\r\n    if (this.state.orderBy === property) {\r\n      if (this.state.order === 'asc') {\r\n        order = 'desc';\r\n      } else {\r\n        order = 'asc';\r\n      }\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleConfirmedDelete = () => {\r\n    this.setState({\r\n      doYouWantToDeleteDialogIsOpen: false,\r\n    });\r\n    this.props.onDelete(this.state.deleteName);\r\n  };\r\n\r\n  handleDelete = (name) => () => {\r\n    this.setState({\r\n      doYouWantToDeleteDialogIsOpen: true,\r\n      deleteName: name,\r\n    });\r\n  };\r\n\r\n  handleDoYouWantToDeleteClose = () => {\r\n    this.setState({\r\n      doYouWantToDeleteDialogIsOpen: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { orderBy } = this.state;\r\n    const { order } = this.state;\r\n    const projects = {\r\n      ...this.props.projects,\r\n    };\r\n    if (this.props.name) {\r\n      projects[this.props.name] = {\r\n        dotSrc: this.props.dotSrc,\r\n        dotSrcLastChangeTime: this.props.dotSrcLastChangeTime,\r\n        svg: this.props.svg,\r\n      };\r\n    }\r\n    const projectList = Object.keys(projects).map((name) => {\r\n      const project = projects[name];\r\n      return {\r\n        name: name,\r\n          ...project,\r\n      }\r\n    });\r\n    const selectedName = projects[this.state.selectedName] ? this.state.selectedName : this.props.name;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          id=\"open-from-browser-dialog\"\r\n          maxWidth={false}\r\n          className={classes.root}\r\n          open\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">Open graph from browser</DialogTitle>\r\n            <IconButton\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Open a graph from the browser&apos;s local storage.\r\n            </DialogContentText>\r\n            <Table className={classes.table}>\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={this.handleRequestSort}\r\n              />\r\n              <TableBody>\r\n                {stableSort(projectList, getSorting(order, orderBy))\r\n                .map((project) => {\r\n                  const name = project.name;\r\n                  return (\r\n                      <TableRow\r\n                        key={name}\r\n                        selected={name === selectedName}\r\n                        hover\r\n                        onClick={this.handleClick(name)}\r\n                        onDoubleClick={this.handleDoubleClick(name)}\r\n                      >\r\n                      <TableCell component=\"th\" scope=\"project\">\r\n                        {name}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <DotSrcPreview\r\n                          dotSrc={project.dotSrc}\r\n                          numLines={numLinesPreview}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {project.dotSrcLastChangeTime ? moment(project.dotSrcLastChangeTime).fromNow() : ''}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <SvgPreview\r\n                          svg={project.svg}\r\n                          width=\"200px\"\r\n                          height={Math.ceil(numLinesPreview * 1.2, 1) + \"em\"}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          id=\"delete\"\r\n                          aria-label=\"Delete\"\r\n                          onClick={this.handleDelete(name)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.onClose} color=\"secondary\" id=\"cancel\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleOpen} color=\"secondary\" id=\"open\">\r\n              Open\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {this.state.doYouWantToDeleteDialogIsOpen &&\r\n          <DoYouWantToDeleteDialog\r\n            name={this.state.deleteName}\r\n            onDelete={this.handleConfirmedDelete}\r\n            onClose={this.handleDoYouWantToDeleteClose}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOpenFromBrowserDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  dotSrc: PropTypes.string.isRequired,\r\n  dotSrcLastChangeTime: PropTypes.number.isRequired,\r\n  projects: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(OpenFromBrowserDialog));\r\n"]},"metadata":{},"sourceType":"module"}