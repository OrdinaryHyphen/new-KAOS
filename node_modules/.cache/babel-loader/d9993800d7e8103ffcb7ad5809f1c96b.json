{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\src\\\\KeyboardShortcutsDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CloseIcon from '@material-ui/icons/Close';\nconst keyboardShortcuts = [{\n  key: 'Ctrl-A',\n  description: 'Select all nodes and edges.'\n}, {\n  key: 'Ctrl-Shift-A',\n  description: 'Select all edges.'\n}, {\n  key: 'Ctrl-C',\n  description: 'Copy the selected node.'\n}, {\n  key: 'Ctrl-V',\n  description: 'Paste the cut/copied node.'\n}, {\n  key: 'Ctrl-X',\n  description: 'Cut the selected node.'\n}, {\n  key: 'Ctrl-Y',\n  description: 'Redo. Reimplement the last DOT source change.'\n}, {\n  key: 'Ctrl-Z',\n  description: 'Undo. Revert the last DOT source change.'\n}, {\n  key: 'DEL',\n  description: 'Delete the selected nodes and edges.'\n}, {\n  key: 'ESC',\n  description: 'De-select the selected nodes and edges. Abort the current drawing operation.'\n}, {\n  key: '?',\n  description: 'Show keyboard shortcuts.'\n}];\n\nconst styles = theme => ({\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  table: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass KeyboardShortcutsDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onKeyboardShortcutsDialogClose();\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      id: \"keyboard-shortcuts-dialog\",\n      open: true,\n      onClose: this.handleClose,\n      scroll: 'paper',\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Keyboard shortcuts in the graph\"), React.createElement(IconButton, {\n      id: \"close-button\",\n      \"aria-label\": \"Close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, keyboardShortcuts.map(keyboardShortcut => {\n      return React.createElement(TableRow, {\n        key: keyboardShortcut.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, keyboardShortcut.key), React.createElement(TableCell, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, keyboardShortcut.description));\n    }))), React.createElement(DialogContentText, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"For keyboard shortcuts in the text editor, please visit \", React.createElement(\"a\", {\n      href: \"https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Ace Default Keyboard Shortcuts\")))));\n  }\n\n}\n\nKeyboardShortcutsDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withRoot(withStyles(styles)(KeyboardShortcutsDialog));","map":{"version":3,"sources":["C:/Users/user/graphviz-visual-editor/src/KeyboardShortcutsDialog.js"],"names":["React","PropTypes","withStyles","withRoot","IconButton","Dialog","DialogContent","DialogContentText","DialogTitle","Table","TableBody","TableCell","TableRow","CloseIcon","keyboardShortcuts","key","description","styles","theme","title","display","justifyContent","table","marginBottom","spacing","KeyboardShortcutsDialog","Component","handleClose","props","onKeyboardShortcutsDialogClose","render","classes","map","keyboardShortcut","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst keyboardShortcuts = [\r\n  {key: 'Ctrl-A', description: 'Select all nodes and edges.'},\r\n  {key: 'Ctrl-Shift-A', description: 'Select all edges.'},\r\n  {key: 'Ctrl-C', description: 'Copy the selected node.'},\r\n  {key: 'Ctrl-V', description: 'Paste the cut/copied node.'},\r\n  {key: 'Ctrl-X', description: 'Cut the selected node.'},\r\n  {key: 'Ctrl-Y', description: 'Redo. Reimplement the last DOT source change.'},\r\n  {key: 'Ctrl-Z', description: 'Undo. Revert the last DOT source change.'},\r\n  {key: 'DEL', description: 'Delete the selected nodes and edges.'},\r\n  {key: 'ESC', description: 'De-select the selected nodes and edges. Abort the current drawing operation.'},\r\n  {key: '?', description: 'Show keyboard shortcuts.'},\r\n];\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  table: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass KeyboardShortcutsDialog extends React.Component {\r\n\r\n  handleClose = () => {\r\n    this.props.onKeyboardShortcutsDialogClose();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog id=\"keyboard-shortcuts-dialog\"\r\n          open\r\n          onClose={this.handleClose}\r\n          scroll={'paper'}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">Keyboard shortcuts in the graph</DialogTitle>\r\n            <IconButton\r\n              id=\"close-button\"\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Table className={classes.table}>\r\n              <TableBody>\r\n                {keyboardShortcuts.map(keyboardShortcut => {\r\n                  return (\r\n                    <TableRow key={keyboardShortcut.key}>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {keyboardShortcut.key}\r\n                      </TableCell>\r\n                      <TableCell size=\"small\">\r\n                        {keyboardShortcut.description}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n            <DialogContentText variant=\"body1\">\r\n              For keyboard shortcuts in the text editor, please visit <a href=\"https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts\" target=\"_blank\" rel=\"noreferrer noopener\">Ace Default Keyboard Shortcuts</a>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nKeyboardShortcutsDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(KeyboardShortcutsDialog));\r\n"]},"metadata":{},"sourceType":"module"}