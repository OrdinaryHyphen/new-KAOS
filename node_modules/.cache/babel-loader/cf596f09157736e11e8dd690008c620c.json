{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\graphviz-visual-editor\\\\src\\\\MouseOperationsDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CloseIcon from '@material-ui/icons/Close';\nconst mouseOperations = [{\n  key: 'Mouse wheel',\n  description: 'Zoom in or out.'\n}, {\n  key: 'Double-click the canvas',\n  description: 'Zoom in.'\n}, {\n  key: 'Ctrl-drag the canvas',\n  description: 'Pan the graph.'\n}, {\n  key: 'Click a node or an edge',\n  description: 'Select the node or an edge.'\n}, {\n  key: 'Shift/Ctrl-click a node or an edge',\n  description: 'Add the node or an edge to selection.'\n}, {\n  key: 'Drag the canvas',\n  description: 'Select the nodes and edges within the dragged area.'\n}, {\n  key: 'Shift-drag the canvas',\n  description: 'Add the nodes and edges within the dragged area to the selection.'\n}, {\n  key: 'Right-click a node',\n  description: 'Start drawing an edge from the node.'\n}, {\n  key: 'Double-click a node',\n  description: 'Connect the edge being drawn to the node.'\n}, {\n  key: 'Middle-click the canvas',\n  description: 'Insert a node with the latest used shape and attributes.'\n}, {\n  key: 'Shift-middle-click the canvas',\n  description: 'Insert a node with the latest inserted shape and default attributes.'\n}, {\n  key: 'Click an insert shape',\n  description: 'Insert a node from the insert panel with default attributes.'\n}, {\n  key: 'Drag-and-drop an insert shape',\n  description: 'Insert a node from the insert panel with default attributes.'\n}];\n\nconst styles = theme => ({\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\nclass MouseOperationsDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onMouseOperationsDialogClose();\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      id: \"mouse-operations-dialog\",\n      open: true,\n      onClose: this.handleClose,\n      scroll: 'paper',\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Mouse operations in the graph\"), React.createElement(IconButton, {\n      id: \"close-button\",\n      \"aria-label\": \"Close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, mouseOperations.map(mouseOperation => {\n      return React.createElement(TableRow, {\n        key: mouseOperation.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, mouseOperation.key), React.createElement(TableCell, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, mouseOperation.description));\n    }))))));\n  }\n\n}\n\nMouseOperationsDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withRoot(withStyles(styles)(MouseOperationsDialog));","map":{"version":3,"sources":["C:/Users/user/graphviz-visual-editor/src/MouseOperationsDialog.js"],"names":["React","PropTypes","withStyles","withRoot","IconButton","Dialog","DialogContent","DialogTitle","Table","TableBody","TableCell","TableRow","CloseIcon","mouseOperations","key","description","styles","theme","title","display","justifyContent","MouseOperationsDialog","Component","handleClose","props","onMouseOperationsDialogClose","render","classes","table","map","mouseOperation","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,MAAMC,eAAe,GAAG,CACtB;AAACC,EAAAA,GAAG,EAAE,aAAN;AAAqBC,EAAAA,WAAW,EAAE;AAAlC,CADsB,EAEtB;AAACD,EAAAA,GAAG,EAAE,yBAAN;AAAiCC,EAAAA,WAAW,EAAE;AAA9C,CAFsB,EAGtB;AAACD,EAAAA,GAAG,EAAE,sBAAN;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CAHsB,EAItB;AAACD,EAAAA,GAAG,EAAE,yBAAN;AAAiCC,EAAAA,WAAW,EAAE;AAA9C,CAJsB,EAKtB;AAACD,EAAAA,GAAG,EAAE,oCAAN;AAA4CC,EAAAA,WAAW,EAAE;AAAzD,CALsB,EAMtB;AAACD,EAAAA,GAAG,EAAE,iBAAN;AAAyBC,EAAAA,WAAW,EAAE;AAAtC,CANsB,EAOtB;AAACD,EAAAA,GAAG,EAAE,uBAAN;AAA+BC,EAAAA,WAAW,EAAE;AAA5C,CAPsB,EAQtB;AAACD,EAAAA,GAAG,EAAE,oBAAN;AAA4BC,EAAAA,WAAW,EAAE;AAAzC,CARsB,EAStB;AAACD,EAAAA,GAAG,EAAE,qBAAN;AAA6BC,EAAAA,WAAW,EAAE;AAA1C,CATsB,EAUtB;AAACD,EAAAA,GAAG,EAAE,yBAAN;AAAiCC,EAAAA,WAAW,EAAE;AAA9C,CAVsB,EAWtB;AAACD,EAAAA,GAAG,EAAE,+BAAN;AAAuCC,EAAAA,WAAW,EAAE;AAApD,CAXsB,EAYtB;AAACD,EAAAA,GAAG,EAAE,uBAAN;AAA+BC,EAAAA,WAAW,EAAE;AAA5C,CAZsB,EAatB;AAACD,EAAAA,GAAG,EAAE,+BAAN;AAAuCC,EAAAA,WAAW,EAAE;AAApD,CAbsB,CAAxB;;AAgBA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX;AADgB,CAAL,CAApB;;AAOA,MAAMC,qBAAN,SAAoCrB,KAAK,CAACsB,SAA1C,CAAoD;AAAA;AAAA;;AAAA,SAElDC,WAFkD,GAEpC,MAAM;AAClB,WAAKC,KAAL,CAAWC,4BAAX;AACD,KAJiD;AAAA;;AAMlDC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKH,KADlB,CACCG,OADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,yBAAX;AACE,MAAA,IAAI,MADN;AAEE,MAAA,OAAO,EAAE,KAAKJ,WAFhB;AAGE,MAAA,MAAM,EAAE,OAHV;AAIE,yBAAgB,mBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAEI,OAAO,CAACT,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,oBAAC,UAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,oBAAW,OAFb;AAGE,MAAA,OAAO,EAAE,KAAKK,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CANF,EAgBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEI,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,eAAe,CAACgB,GAAhB,CAAoBC,cAAc,IAAI;AACrC,aACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,cAAc,CAAChB,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAsC,QAAA,OAAO,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgB,cAAc,CAAChB,GADlB,CADF,EAIE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgB,cAAc,CAACf,WADlB,CAJF,CADF;AAUD,KAXA,CADH,CADF,CADF,CAhBF,CADF,CADF;AAuCD;;AA/CiD;;AAkDpDM,qBAAqB,CAACU,SAAtB,GAAkC;AAChCJ,EAAAA,OAAO,EAAE1B,SAAS,CAAC+B,MAAV,CAAiBC;AADM,CAAlC;AAIA,eAAe9B,QAAQ,CAACD,UAAU,CAACc,MAAD,CAAV,CAAmBK,qBAAnB,CAAD,CAAvB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRoot from './withRoot';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst mouseOperations = [\r\n  {key: 'Mouse wheel', description: 'Zoom in or out.'},\r\n  {key: 'Double-click the canvas', description: 'Zoom in.'},\r\n  {key: 'Ctrl-drag the canvas', description: 'Pan the graph.'},\r\n  {key: 'Click a node or an edge', description: 'Select the node or an edge.'},\r\n  {key: 'Shift/Ctrl-click a node or an edge', description: 'Add the node or an edge to selection.'},\r\n  {key: 'Drag the canvas', description: 'Select the nodes and edges within the dragged area.'},\r\n  {key: 'Shift-drag the canvas', description: 'Add the nodes and edges within the dragged area to the selection.'},\r\n  {key: 'Right-click a node', description: 'Start drawing an edge from the node.'},\r\n  {key: 'Double-click a node', description: 'Connect the edge being drawn to the node.'},\r\n  {key: 'Middle-click the canvas', description: 'Insert a node with the latest used shape and attributes.'},\r\n  {key: 'Shift-middle-click the canvas', description: 'Insert a node with the latest inserted shape and default attributes.'},\r\n  {key: 'Click an insert shape', description: 'Insert a node from the insert panel with default attributes.'},\r\n  {key: 'Drag-and-drop an insert shape', description: 'Insert a node from the insert panel with default attributes.'},\r\n];\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nclass MouseOperationsDialog extends React.Component {\r\n\r\n  handleClose = () => {\r\n    this.props.onMouseOperationsDialogClose();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog id=\"mouse-operations-dialog\"\r\n          open\r\n          onClose={this.handleClose}\r\n          scroll={'paper'}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div className={classes.title}>\r\n            <DialogTitle id=\"form-dialog-title\">Mouse operations in the graph</DialogTitle>\r\n            <IconButton\r\n              id=\"close-button\"\r\n              aria-label=\"Close\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Table className={classes.table}>\r\n              <TableBody>\r\n                {mouseOperations.map(mouseOperation => {\r\n                  return (\r\n                    <TableRow key={mouseOperation.key}>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {mouseOperation.key}\r\n                      </TableCell>\r\n                      <TableCell size=\"small\">\r\n                        {mouseOperation.description}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMouseOperationsDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(MouseOperationsDialog));\r\n"]},"metadata":{},"sourceType":"module"}