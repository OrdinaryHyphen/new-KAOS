{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _objectSpread from\"C:\\\\Users\\\\user\\\\assisted-KAOS-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import{withStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import DialogTitle from'@material-ui/core/DialogTitle';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';import AceEditor from'react-ace';import ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import Toolbar from'@material-ui/core/Toolbar';import fs from'fs';import PythonShell from'python-shell';var drawerWidth='100%';var styles=function styles(theme){return{root:{flexGrow:1},hide:{display:'none'},drawerPaper:{position:'relative',width:drawerWidth,height:'calc(100vh - 64px - 2 * 12px)',textAlign:'left'},drawerHeader:_objectSpread({display:'flex',alignItems:'center',justifyContent:'flex-end',padding:'0 8px',textTransform:'capitalize'},theme.mixins.toolbar)};};var DescriptionDrawer=/*#__PURE__*/function(_React$Component){_inherits(DescriptionDrawer,_React$Component);function DescriptionDrawer(){var _getPrototypeOf2;var _this;_classCallCheck(this,DescriptionDrawer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(DescriptionDrawer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleChange=function(value,event){_this.props.onTextChange(value);};_this.handleClick=function(){_this.props.onClick();};_this.handleDrawerClose=function(){_this.props.onDescriptionDrawerClose();};_this.startAnalysis=function(){/**\r\n  try {\r\n    fs.writeFileSync('./python/src.txt', this.props.goalDescription, 'utf-8');\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  PythonShell.run('./python/GoalModel.py', {args: ['src']}, (err, result) => {\r\n     if (err) throw err;\r\n\r\n     console.log(result);\r\n   });\r\n   **/console.log(_this.props.goalDescription);};return _this;}_createClass(DescriptionDrawer,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,theme=_this$props.theme;return React.createElement(\"div\",{className:classes.root},React.createElement(Drawer,{id:\"format-drawer\",variant:\"persistent\",anchor:\"left\",open:true,classes:{paper:classes.drawerPaper},onClick:this.handleClick},React.createElement(\"div\",{className:classes.drawerHeader},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Goal Descriptions\"),React.createElement(IconButton,{id:\"close-button\",onClick:this.handleDrawerClose},theme.direction==='rtl'?React.createElement(ChevronRightIcon,null):React.createElement(ChevronLeftIcon,null))),React.createElement(Divider,null),React.createElement(AceEditor,{mode:\"txt\",theme:\"github\",fontSize:this.props.fontSize+'px',tabSize:this.props.tabSize,value:this.props.goalDescription,height:\"80%\",width:\"100%\",onChange:this.handleChange}),React.createElement(Divider,null),React.createElement(Toolbar,null,React.createElement(\"p\",null,\"Input goal descriptions, then press the right button.\"),React.createElement(\"div\",{style:{flexGrow:1}}),React.createElement(Button,{color:\"inherit\",size:\"Large\",style:{flexGrow:0.2},onClick:this.startAnalysis},\"Parse\"))));}}]);return DescriptionDrawer;}(React.Component);export default withStyles(styles,{withTheme:true})(DescriptionDrawer);","map":{"version":3,"sources":["C:/Users/user/assisted-KAOS-editor/src/DescriptionDrawer.js"],"names":["React","withStyles","Drawer","DialogTitle","Divider","Button","IconButton","AceEditor","ChevronLeftIcon","ChevronRightIcon","Toolbar","fs","PythonShell","drawerWidth","styles","theme","root","flexGrow","hide","display","drawerPaper","position","width","height","textAlign","drawerHeader","alignItems","justifyContent","padding","textTransform","mixins","toolbar","DescriptionDrawer","handleChange","value","event","props","onTextChange","handleClick","onClick","handleDrawerClose","onDescriptionDrawerClose","startAnalysis","console","log","goalDescription","classes","paper","direction","fontSize","tabSize","Component","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AceEditor from 'react-ace';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport fs from 'fs';\r\nimport PythonShell from 'python-shell';\r\n\r\n\r\nconst drawerWidth = '100%';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    height: 'calc(100vh - 64px - 2 * 12px)',\r\n    textAlign: 'left',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    textTransform: 'capitalize',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n});\r\n\r\n\r\nclass DescriptionDrawer extends React.Component {\r\n\r\n  handleChange = (value, event) => {\r\n    this.props.onTextChange(value);\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.onDescriptionDrawerClose();\r\n  };\r\n\r\n  startAnalysis = () => {\r\n  /**\r\n  try {\r\n    fs.writeFileSync('./python/src.txt', this.props.goalDescription, 'utf-8');\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  PythonShell.run('./python/GoalModel.py', {args: ['src']}, (err, result) => {\r\n     if (err) throw err;\r\n\r\n     console.log(result);\r\n   });\r\n   **/\r\n\r\n    console.log(this.props.goalDescription);\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Drawer\r\n          id=\"format-drawer\"\r\n          variant=\"persistent\"\r\n          anchor='left'\r\n          open\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Goal Descriptions\r\n            </DialogTitle>\r\n            <IconButton id=\"close-button\" onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\t      <AceEditor\r\n\t        mode=\"txt\"\r\n             theme=\"github\"\r\n             fontSize={this.props.fontSize + 'px'}\r\n\t        tabSize={this.props.tabSize}\r\n\t        value={this.props.goalDescription}\r\n\t        height= '80%'\r\n\t        width= '100%'\r\n\t        onChange={this.handleChange}\r\n\t      />\r\n\t   <Divider />\r\n\t   <Toolbar>\r\n\t\t   <p>\r\n\t\t      Input goal descriptions, then press the right button.\r\n\t\t   </p>\r\n\t\t   <div style={{flexGrow: 1}}></div>\r\n   \t   <Button\r\n         \t   color=\"inherit\"\r\n         \t   size=\"Large\"\r\n         \t   style={{flexGrow: 0.2}}\r\n         \t   onClick={this.startAnalysis}\r\n              >\r\n              Parse\r\n              </Button>\r\n\t   </Toolbar>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDescriptionDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DescriptionDrawer);"]},"metadata":{},"sourceType":"module"}